{"id":"e2fcfe90b379068a5c461cc3a01a5022","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {Arrays} from \"@openzeppelin/contracts/utils/Arrays.sol\";\nimport {IERC1155Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC1155\n    struct ERC1155Storage {\n        mapping(uint256 id => mapping(address account => uint256)) _balances;\n\n        mapping(address account => mapping(address operator => bool)) _operatorApprovals;\n\n        // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n        string _uri;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC1155\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC1155StorageLocation = 0x88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500;\n\n    function _getERC1155Storage() private pure returns (ERC1155Storage storage $) {\n        assembly {\n            $.slot := ERC1155StorageLocation\n        }\n    }\n\n    /**\n     * @dev See {_setURI}.\n     */\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\n        __ERC1155_init_unchained(uri_);\n    }\n\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = $._balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    $._balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                $._balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        $._uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        $._operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/ERC1155Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155Upgradeable} from \"../ERC1155Upgradeable.sol\";\nimport {PausableUpgradeable} from \"../../../utils/PausableUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev ERC-1155 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC1155PausableUpgradeable is Initializable, ERC1155Upgradeable, PausableUpgradeable {\n    function __ERC1155Pausable_init() internal onlyInitializing {\n    }\n\n    function __ERC1155Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {ERC1155-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal virtual override whenNotPaused {\n        super._update(from, to, ids, values);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155Upgradeable} from \"../ERC1155Upgradeable.sol\";\nimport {Arrays} from \"@openzeppelin/contracts/utils/Arrays.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of ERC-1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n *\n * NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n * that can be minted.\n *\n * CAUTION: This extension should not be added in an upgrade to an already deployed contract.\n */\nabstract contract ERC1155SupplyUpgradeable is Initializable, ERC1155Upgradeable {\n    using Arrays for uint256[];\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC1155Supply\n    struct ERC1155SupplyStorage {\n        mapping(uint256 id => uint256) _totalSupply;\n        uint256 _totalSupplyAll;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC1155Supply\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC1155SupplyStorageLocation = 0x4a593662ee04d27b6a00ebb31be7fe0c102c2ade82a7c5d764f2df05dc4e2800;\n\n    function _getERC1155SupplyStorage() private pure returns (ERC1155SupplyStorage storage $) {\n        assembly {\n            $.slot := ERC1155SupplyStorageLocation\n        }\n    }\n\n    function __ERC1155Supply_init() internal onlyInitializing {\n    }\n\n    function __ERC1155Supply_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Total value of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        ERC1155SupplyStorage storage $ = _getERC1155SupplyStorage();\n        return $._totalSupply[id];\n    }\n\n    /**\n     * @dev Total value of tokens.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC1155SupplyStorage storage $ = _getERC1155SupplyStorage();\n        return $._totalSupplyAll;\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_update}.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal virtual override {\n        ERC1155SupplyStorage storage $ = _getERC1155SupplyStorage();\n        super._update(from, to, ids, values);\n\n        if (from == address(0)) {\n            uint256 totalMintValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values.unsafeMemoryAccess(i);\n                // Overflow check required: The rest of the code assumes that totalSupply never overflows\n                $._totalSupply[ids.unsafeMemoryAccess(i)] += value;\n                totalMintValue += value;\n            }\n            // Overflow check required: The rest of the code assumes that totalSupplyAll never overflows\n            $._totalSupplyAll += totalMintValue;\n        }\n\n        if (to == address(0)) {\n            uint256 totalBurnValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values.unsafeMemoryAccess(i);\n\n                unchecked {\n                    // Overflow not possible: values[i] <= balanceOf(from, ids[i]) <= totalSupply(ids[i])\n                    $._totalSupply[ids.unsafeMemoryAccess(i)] -= value;\n                    // Overflow not possible: sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                    totalBurnValue += value;\n                }\n            }\n            unchecked {\n                // Overflow not possible: totalBurnValue = sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                $._totalSupplyAll -= totalBurnValue;\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    function __Pausable_init() internal onlyInitializing {\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/EmojiChatV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport {ERC1155Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\";\nimport {ERC1155PausableUpgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol\";\nimport {ERC1155SupplyUpgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\";\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport {OwnableUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract EmojiChatV2 is\n    Initializable,\n    ERC1155Upgradeable,\n    OwnableUpgradeable,\n    ERC1155PausableUpgradeable,\n    ERC1155SupplyUpgradeable,\n    UUPSUpgradeable\n{\n    using Strings for uint256;\n\n    /// @dev Mapping from token ID to its first minter\n    mapping(uint256 => address) public firstMinter;\n\n    /// @dev Base URI for metadata\n    string private _baseURI;\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address initialOwner) public initializer {\n        __ERC1155_init(\"\");\n        __Ownable_init(initialOwner);\n        __ERC1155Pausable_init();\n        __ERC1155Supply_init();\n        __UUPSUpgradeable_init();\n    }\n\n    function uri(\n        uint256 tokenId\n    ) public view virtual override returns (string memory) {\n        return string(abi.encodePacked(_baseURI, tokenId.toString()));\n    }\n\n    function setURI(string memory newuri) public onlyOwner {\n        _baseURI = newuri;\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(\n        address account,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public {\n        if (firstMinter[id] == address(0)) {\n            firstMinter[id] = account;\n        }\n        _mint(account, id, amount, data);\n    }\n\n    function mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public {\n        for (uint256 i = 0; i < ids.length; i++) {\n            if (firstMinter[ids[i]] == address(0)) {\n                firstMinter[ids[i]] = to;\n            }\n        }\n        _mintBatch(to, ids, amounts, data);\n    }\n\n    function _authorizeUpgrade(\n        address newImplementation\n    ) internal override onlyOwner {}\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    )\n        internal\n        override(\n            ERC1155Upgradeable,\n            ERC1155PausableUpgradeable,\n            ERC1155SupplyUpgradeable\n        )\n    {\n        super._update(from, to, ids, values);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1981],"Initializable":[462],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1982,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":463,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1981,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1981,462],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[462]},"id":463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":462,"linearizedBaseContracts":[462],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":462,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":462,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":269,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6355:20:1"},"referencedDeclaration":205,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":322,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":366,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":462,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7824:20:1"},"referencedDeclaration":205,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":384,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":462,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":462,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":462,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":444,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":443,"id":445,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":462,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":460,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[455],"declarations":[{"constant":false,"id":455,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":460,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":458,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":452,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":455,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":459,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":461,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":461,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"9129:20:1"},"referencedDeclaration":205,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":462,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":463,"src":"2349:6929:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[2643],"IERC1822Proxiable":[2212],"Initializable":[462],"UUPSUpgradeable":[644]},"id":645,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":464,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":2213,"src":"141:88:2","symbolAliases":[{"foreign":{"id":465,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":2644,"src":"230:84:2","symbolAliases":[{"foreign":{"id":467,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":463,"src":"315:50:2","symbolAliases":[{"foreign":{"id":469,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":472,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1023:13:2"},"id":473,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":474,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":2212,"src":"1038:17:2"},"id":475,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":644,"linearizedBaseContracts":[644,2212,462],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":482,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":644,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":480,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":486,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":644,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":484,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":489,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":494,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":494,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":501,"nodeType":"Block","src":"2645:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":497,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"2655:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":499,"nodeType":"ExpressionStatement","src":"2655:13:2"},{"id":500,"nodeType":"PlaceholderStatement","src":"2678:1:2"}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"2124:495:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":502,"name":"onlyProxy","nameLocation":"2633:9:2","nodeType":"ModifierDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"2642:2:2"},"src":"2624:62:2","virtual":false,"visibility":"internal"},{"body":{"id":509,"nodeType":"Block","src":"2916:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":505,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"2926:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"ExpressionStatement","src":"2926:20:2"},{"id":508,"nodeType":"PlaceholderStatement","src":"2956:1:2"}]},"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"2692:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":510,"name":"notDelegated","nameLocation":"2901:12:2","nodeType":"ModifierDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"2913:2:2"},"src":"2892:72:2","virtual":false,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"3030:7:2","statements":[]},"id":516,"implemented":true,"kind":"function","modifiers":[{"id":513,"kind":"modifierInvocation","modifierName":{"id":512,"name":"onlyInitializing","nameLocations":["3013:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3013:16:2"},"nodeType":"ModifierInvocation","src":"3013:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:2","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"3001:2:2"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"3030:0:2"},"scope":644,"src":"2970:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":521,"nodeType":"Block","src":"3113:7:2","statements":[]},"id":522,"implemented":true,"kind":"function","modifiers":[{"id":519,"kind":"modifierInvocation","modifierName":{"id":518,"name":"onlyInitializing","nameLocations":["3096:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3096:16:2"},"nodeType":"ModifierInvocation","src":"3096:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:2","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"3084:2:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"3113:0:2"},"scope":644,"src":"3043:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2211],"body":{"id":533,"nodeType":"Block","src":"3786:56:2","statements":[{"expression":{"expression":{"id":530,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"3803:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2643_$","typeString":"type(library ERC1967Utils)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":2364,"src":"3803:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":529,"id":532,"nodeType":"Return","src":"3796:39:2"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3125:578:2","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":534,"implemented":true,"kind":"function","modifiers":[{"id":526,"kind":"modifierInvocation","modifierName":{"id":525,"name":"notDelegated","nameLocations":["3755:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":510,"src":"3755:12:2"},"nodeType":"ModifierInvocation","src":"3755:12:2"}],"name":"proxiableUUID","nameLocation":"3717:13:2","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"3730:2:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":534,"src":"3777:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:2"},"scope":644,"src":"3708:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":553,"nodeType":"Block","src":"4266:109:2","statements":[{"expression":{"arguments":[{"id":545,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"4294:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":544,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4276:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":547,"nodeType":"ExpressionStatement","src":"4276:36:2"},{"expression":{"arguments":[{"id":549,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"4344:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4363:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":548,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"4322:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"4322:46:2"}]},"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"3848:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":554,"implemented":true,"kind":"function","modifiers":[{"id":542,"kind":"modifierInvocation","modifierName":{"id":541,"name":"onlyProxy","nameLocations":["4256:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":502,"src":"4256:9:2"},"nodeType":"ModifierInvocation","src":"4256:9:2"}],"name":"upgradeToAndCall","nameLocation":"4170:16:2","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:2","nodeType":"VariableDeclaration","scope":554,"src":"4187:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"data","nameLocation":"4227:4:2","nodeType":"VariableDeclaration","scope":554,"src":"4214:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":538,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4266:0:2"},"scope":644,"src":"4161:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":575,"nodeType":"Block","src":"4623:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":560,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4658:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}],"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4650:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:2","typeDescriptions":{}}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":562,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4667:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4650:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":564,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"4728:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2643_$","typeString":"type(library ERC1967Utils)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":2395,"src":"4728:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4728:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":567,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4764:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4728:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4650:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":574,"nodeType":"IfStatement","src":"4633:251:2","trueBody":{"id":573,"nodeType":"Block","src":"4823:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":570,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"4844:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":572,"nodeType":"RevertStatement","src":"4837:36:2"}]}}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"4381:192:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."},"id":576,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4587:11:2","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"4598:2:2"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"4623:0:2"},"scope":644,"src":"4578:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":591,"nodeType":"Block","src":"5059:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":582,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5081:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5073:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:2","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":584,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5090:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5073:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":590,"nodeType":"IfStatement","src":"5069:145:2","trueBody":{"id":589,"nodeType":"Block","src":"5098:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":586,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5174:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5174:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":588,"nodeType":"RevertStatement","src":"5167:36:2"}]}}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"4896:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":592,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5016:18:2","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"5034:2:2"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[],"src":"5059:0:2"},"scope":644,"src":"5007:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"5226:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":598,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5612:17:2","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"newImplementation","nameLocation":"5638:17:2","nodeType":"VariableDeclaration","scope":598,"src":"5630:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"5630:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5629:27:2"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"5673:0:2"},"scope":644,"src":"5603:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":642,"nodeType":"Block","src":"6117:453:2","statements":[{"clauses":[{"block":{"id":631,"nodeType":"Block","src":"6207:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6225:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":615,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"6233:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2643_$","typeString":"type(library ERC1967Utils)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6246:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":2364,"src":"6233:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6225:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":623,"nodeType":"IfStatement","src":"6221:120:2","trueBody":{"id":622,"nodeType":"Block","src":"6267:74:2","statements":[{"errorCall":{"arguments":[{"id":619,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6321:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":618,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"6292:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":621,"nodeType":"RevertStatement","src":"6285:41:2"}]}},{"expression":{"arguments":[{"id":627,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"6384:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":628,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"6403:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":624,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"6354:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2643_$","typeString":"type(library ERC1967Utils)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6367:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"6354:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":630,"nodeType":"ExpressionStatement","src":"6354:54:2"}]},"errorName":"","id":632,"nodeType":"TryCatchClause","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"slot","nameLocation":"6201:4:2","nodeType":"VariableDeclaration","scope":632,"src":"6193:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6193:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6192:14:2"},"src":"6184:235:2"},{"block":{"id":639,"nodeType":"Block","src":"6426:138:2","statements":[{"errorCall":{"arguments":[{"id":636,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"6535:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":633,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"6493:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2643_$","typeString":"type(library ERC1967Utils)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6506:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"6493:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6493:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":638,"nodeType":"RevertStatement","src":"6486:67:2"}]},"errorName":"","id":640,"nodeType":"TryCatchClause","src":"6420:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":607,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"6149:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":606,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"6131:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$2212_$","typeString":"type(contract IERC1822Proxiable)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$2212","typeString":"contract IERC1822Proxiable"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6168:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":2211,"src":"6131:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":641,"nodeType":"TryStatement","src":"6127:437:2"}]},"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"5680:347:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":643,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6041:21:2","nodeType":"FunctionDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"newImplementation","nameLocation":"6071:17:2","nodeType":"VariableDeclaration","scope":643,"src":"6063:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"6063:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"data","nameLocation":"6103:4:2","nodeType":"VariableDeclaration","scope":643,"src":"6090:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":602,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6062:46:2"},"returnParameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"6117:0:2"},"scope":644,"src":"6032:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":645,"src":"986:5586:2","usedErrors":[211,214,489,494,2369,2382,2998,4171],"usedEvents":[219,2189]}],"src":"115:6458:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","exportedSymbols":{"Arrays":[4126],"ContextUpgradeable":[1981],"ERC1155Upgradeable":[1641],"ERC1155Utils":[2988],"ERC165Upgradeable":[2181],"IERC1155":[2776],"IERC1155Errors":[2349],"IERC1155MetadataURI":[2834],"IERC165":[5900],"Initializable":[462]},"id":1642,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":646,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","id":648,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":2777,"src":"135:76:3","symbolAliases":[{"foreign":{"id":647,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"143:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","id":650,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":2835,"src":"212:109:3","symbolAliases":[{"foreign":{"id":649,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"220:19:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","id":652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":2989,"src":"322:90:3","symbolAliases":[{"foreign":{"id":651,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"330:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":654,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":1982,"src":"413:70:3","symbolAliases":[{"foreign":{"id":653,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"421:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":656,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":5901,"src":"484:80:3","symbolAliases":[{"foreign":{"id":655,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"492:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":658,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":2182,"src":"565:82:3","symbolAliases":[{"foreign":{"id":657,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"573:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"@openzeppelin/contracts/utils/Arrays.sol","id":660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":4127,"src":"648:64:3","symbolAliases":[{"foreign":{"id":659,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"656:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":2350,"src":"713:85:3","symbolAliases":[{"foreign":{"id":661,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"721:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":664,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":463,"src":"799:66:3","symbolAliases":[{"foreign":{"id":663,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"807:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":666,"name":"Initializable","nameLocations":["1092:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1092:13:3"},"id":667,"nodeType":"InheritanceSpecifier","src":"1092:13:3"},{"baseName":{"id":668,"name":"ContextUpgradeable","nameLocations":["1107:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1981,"src":"1107:18:3"},"id":669,"nodeType":"InheritanceSpecifier","src":"1107:18:3"},{"baseName":{"id":670,"name":"ERC165Upgradeable","nameLocations":["1127:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":2181,"src":"1127:17:3"},"id":671,"nodeType":"InheritanceSpecifier","src":"1127:17:3"},{"baseName":{"id":672,"name":"IERC1155","nameLocations":["1146:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":2776,"src":"1146:8:3"},"id":673,"nodeType":"InheritanceSpecifier","src":"1146:8:3"},{"baseName":{"id":674,"name":"IERC1155MetadataURI","nameLocations":["1156:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":2834,"src":"1156:19:3"},"id":675,"nodeType":"InheritanceSpecifier","src":"1156:19:3"},{"baseName":{"id":676,"name":"IERC1155Errors","nameLocations":["1177:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":2349,"src":"1177:14:3"},"id":677,"nodeType":"InheritanceSpecifier","src":"1177:14:3"}],"canonicalName":"ERC1155Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"867:184:3","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1641,"linearizedBaseContracts":[1641,2349,2834,2776,2181,5900,1981,462],"name":"ERC1155Upgradeable","nameLocation":"1070:18:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":681,"libraryName":{"id":678,"name":"Arrays","nameLocations":["1204:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4126,"src":"1204:6:3"},"nodeType":"UsingForDirective","src":"1198:27:3","typeName":{"baseType":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1215:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":680,"nodeType":"ArrayTypeName","src":"1215:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":685,"libraryName":{"id":682,"name":"Arrays","nameLocations":["1236:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4126,"src":"1236:6:3"},"nodeType":"UsingForDirective","src":"1230:27:3","typeName":{"baseType":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":684,"nodeType":"ArrayTypeName","src":"1247:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"canonicalName":"ERC1155Upgradeable.ERC1155Storage","documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"1263:65:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC1155"},"id":701,"members":[{"constant":false,"id":692,"mutability":"mutable","name":"_balances","nameLocation":"1424:9:3","nodeType":"VariableDeclaration","scope":701,"src":"1365:68:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":691,"keyName":"id","keyNameLocation":"1381:2:3","keyType":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1365:58:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":690,"keyName":"account","keyNameLocation":"1403:7:3","keyType":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1387:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1506:18:3","nodeType":"VariableDeclaration","scope":701,"src":"1444:80:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":697,"keyName":"account","keyNameLocation":"1460:7:3","keyType":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1444:61:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":696,"keyName":"operator","keyNameLocation":"1487:8:3","keyType":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"1479:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1471:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":695,"name":"bool","nodeType":"ElementaryTypeName","src":"1499:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"_uri","nameLocation":"1660:4:3","nodeType":"VariableDeclaration","scope":701,"src":"1653:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":699,"name":"string","nodeType":"ElementaryTypeName","src":"1653:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC1155Storage","nameLocation":"1340:14:3","nodeType":"StructDefinition","scope":1641,"src":"1333:338:3","visibility":"public"},{"constant":true,"id":704,"mutability":"constant","name":"ERC1155StorageLocation","nameLocation":"1813:22:3","nodeType":"VariableDeclaration","scope":1641,"src":"1788:116:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1788:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838386265353336643532343063323734613362316433613162653534343832666439636161323934663038633632613763646535363966343961336334353030","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1838:66:3","typeDescriptions":{"typeIdentifier":"t_rational_61850824141875340645484003952679861077730695310785076753205161524670616061184_by_1","typeString":"int_const 6185...(69 digits omitted)...1184"},"value":"0x88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500"},"visibility":"private"},{"body":{"id":711,"nodeType":"Block","src":"1989:81:3","statements":[{"AST":{"nativeSrc":"2008:56:3","nodeType":"YulBlock","src":"2008:56:3","statements":[{"nativeSrc":"2022:32:3","nodeType":"YulAssignment","src":"2022:32:3","value":{"name":"ERC1155StorageLocation","nativeSrc":"2032:22:3","nodeType":"YulIdentifier","src":"2032:22:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2022:6:3","nodeType":"YulIdentifier","src":"2022:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":708,"isOffset":false,"isSlot":true,"src":"2022:6:3","suffix":"slot","valueSize":1},{"declaration":704,"isOffset":false,"isSlot":false,"src":"2032:22:3","valueSize":1}],"id":710,"nodeType":"InlineAssembly","src":"1999:65:3"}]},"id":712,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC1155Storage","nameLocation":"1920:18:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"1938:2:3"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"$","nameLocation":"1986:1:3","nodeType":"VariableDeclaration","scope":712,"src":"1963:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":707,"nodeType":"UserDefinedTypeName","pathNode":{"id":706,"name":"ERC1155Storage","nameLocations":["1963:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"1963:14:3"},"referencedDeclaration":701,"src":"1963:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"src":"1962:26:3"},"scope":1641,"src":"1911:159:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":724,"nodeType":"Block","src":"2189:47:3","statements":[{"expression":{"arguments":[{"id":721,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"2224:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":720,"name":"__ERC1155_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"2199:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2199:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":723,"nodeType":"ExpressionStatement","src":"2199:30:3"}]},"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"2076:38:3","text":" @dev See {_setURI}."},"id":725,"implemented":true,"kind":"function","modifiers":[{"id":718,"kind":"modifierInvocation","modifierName":{"id":717,"name":"onlyInitializing","nameLocations":["2172:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2172:16:3"},"nodeType":"ModifierInvocation","src":"2172:16:3"}],"name":"__ERC1155_init","nameLocation":"2128:14:3","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"uri_","nameLocation":"2157:4:3","nodeType":"VariableDeclaration","scope":725,"src":"2143:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":714,"name":"string","nodeType":"ElementaryTypeName","src":"2143:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2142:20:3"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[],"src":"2189:0:3"},"scope":1641,"src":"2119:117:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":736,"nodeType":"Block","src":"2322:30:3","statements":[{"expression":{"arguments":[{"id":733,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"2340:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":732,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2332:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2332:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"ExpressionStatement","src":"2332:13:3"}]},"id":737,"implemented":true,"kind":"function","modifiers":[{"id":730,"kind":"modifierInvocation","modifierName":{"id":729,"name":"onlyInitializing","nameLocations":["2305:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2305:16:3"},"nodeType":"ModifierInvocation","src":"2305:16:3"}],"name":"__ERC1155_init_unchained","nameLocation":"2251:24:3","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"uri_","nameLocation":"2290:4:3","nodeType":"VariableDeclaration","scope":737,"src":"2276:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":726,"name":"string","nodeType":"ElementaryTypeName","src":"2276:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2275:20:3"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"2322:0:3"},"scope":1641,"src":"2242:110:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2180,5899],"body":{"id":767,"nodeType":"Block","src":"2538:197:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":748,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2567:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":750,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"2587:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$2776_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$2776_$","typeString":"type(contract IERC1155)"}],"id":749,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2582:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2582:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$2776","typeString":"type(contract IERC1155)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2597:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2582:26:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2567:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":754,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2624:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":756,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"2644:19:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$2834_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$2834_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":755,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2639:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$2834","typeString":"type(contract IERC1155MetadataURI)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2665:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2639:37:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2624:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2567:109:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":763,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2716:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":761,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2692:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Upgradeable_$1641_$","typeString":"type(contract super ERC1155Upgradeable)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2698:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"2692:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2567:161:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":747,"id":766,"nodeType":"Return","src":"2548:180:3"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"2358:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":768,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2428:17:3","nodeType":"FunctionDefinition","overrides":{"id":744,"nodeType":"OverrideSpecifier","overrides":[{"id":742,"name":"ERC165Upgradeable","nameLocations":["2495:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":2181,"src":"2495:17:3"},{"id":743,"name":"IERC165","nameLocations":["2514:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":5900,"src":"2514:7:3"}],"src":"2486:36:3"},"parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"interfaceId","nameLocation":"2453:11:3","nodeType":"VariableDeclaration","scope":768,"src":"2446:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":739,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2446:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2445:20:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"2532:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"2532:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2531:6:3"},"scope":1641,"src":"2419:316:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2833],"body":{"id":785,"nodeType":"Block","src":"3209:87:3","statements":[{"assignments":[778],"declarations":[{"constant":false,"id":778,"mutability":"mutable","name":"$","nameLocation":"3242:1:3","nodeType":"VariableDeclaration","scope":785,"src":"3219:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":777,"nodeType":"UserDefinedTypeName","pathNode":{"id":776,"name":"ERC1155Storage","nameLocations":["3219:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"3219:14:3"},"referencedDeclaration":701,"src":"3219:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":781,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":779,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"3246:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$701_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3246:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3219:47:3"},{"expression":{"expression":{"id":782,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"3283:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3285:4:3","memberName":"_uri","nodeType":"MemberAccess","referencedDeclaration":700,"src":"3283:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":775,"id":784,"nodeType":"Return","src":"3276:13:3"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"2741:388:3","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":786,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"3143:3:3","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"3147:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"3147:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3146:18:3"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"3194:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":773,"name":"string","nodeType":"ElementaryTypeName","src":"3194:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3193:15:3"},"scope":1641,"src":"3134:162:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2714],"body":{"id":809,"nodeType":"Block","src":"3442:105:3","statements":[{"assignments":[798],"declarations":[{"constant":false,"id":798,"mutability":"mutable","name":"$","nameLocation":"3475:1:3","nodeType":"VariableDeclaration","scope":809,"src":"3452:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":797,"nodeType":"UserDefinedTypeName","pathNode":{"id":796,"name":"ERC1155Storage","nameLocations":["3452:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"3452:14:3"},"referencedDeclaration":701,"src":"3452:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":799,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"3479:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$701_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3479:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3452:47:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":802,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3516:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3518:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":692,"src":"3516:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":805,"indexExpression":{"id":804,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"3528:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3516:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":807,"indexExpression":{"id":806,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"3532:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3516:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":795,"id":808,"nodeType":"Return","src":"3509:31:3"}]},"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"3302:49:3","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":810,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3365:9:3","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"account","nameLocation":"3383:7:3","nodeType":"VariableDeclaration","scope":810,"src":"3375:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"3375:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"id","nameLocation":"3400:2:3","nodeType":"VariableDeclaration","scope":810,"src":"3392:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3374:29:3"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":810,"src":"3433:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"3433:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3432:9:3"},"scope":1641,"src":"3356:191:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2727],"body":{"id":879,"nodeType":"Block","src":"3846:410:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":823,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3860:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3869:6:3","memberName":"length","nodeType":"MemberAccess","src":"3860:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":825,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"3879:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3883:6:3","memberName":"length","nodeType":"MemberAccess","src":"3879:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3860:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":836,"nodeType":"IfStatement","src":"3856:121:3","trueBody":{"id":835,"nodeType":"Block","src":"3891:86:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":829,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"3938:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3942:6:3","memberName":"length","nodeType":"MemberAccess","src":"3938:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":831,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3950:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:6:3","memberName":"length","nodeType":"MemberAccess","src":"3950:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":828,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"3912:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":834,"nodeType":"RevertStatement","src":"3905:61:3"}]}},{"assignments":[841],"declarations":[{"constant":false,"id":841,"mutability":"mutable","name":"batchBalances","nameLocation":"4004:13:3","nodeType":"VariableDeclaration","scope":879,"src":"3987:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":840,"nodeType":"ArrayTypeName","src":"3987:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":848,"initialValue":{"arguments":[{"expression":{"id":845,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4034:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4043:6:3","memberName":"length","nodeType":"MemberAccess","src":"4034:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4020:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"4024:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":843,"nodeType":"ArrayTypeName","src":"4024:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4020:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3987:63:3"},{"body":{"id":875,"nodeType":"Block","src":"4107:112:3","statements":[{"expression":{"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":860,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"4121:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":862,"indexExpression":{"id":861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4135:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4121:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":866,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4178:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":864,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4150:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4159:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4066,"src":"4150:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4150:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4205:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":868,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"4182:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4186:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4092,"src":"4182:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4182:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":863,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"4140:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4140:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4121:87:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":874,"nodeType":"ExpressionStatement","src":"4121:87:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":853,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4081:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":854,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4085:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4094:6:3","memberName":"length","nodeType":"MemberAccess","src":"4085:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4081:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":876,"initializationExpression":{"assignments":[850],"declarations":[{"constant":false,"id":850,"mutability":"mutable","name":"i","nameLocation":"4074:1:3","nodeType":"VariableDeclaration","scope":876,"src":"4066:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"4066:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":852,"initialValue":{"hexValue":"30","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4078:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4066:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4102:3:3","subExpression":{"id":857,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4104:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":859,"nodeType":"ExpressionStatement","src":"4102:3:3"},"nodeType":"ForStatement","src":"4061:158:3"},{"expression":{"id":877,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"4236:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":822,"id":878,"nodeType":"Return","src":"4229:20:3"}]},"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"3553:146:3","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":880,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"3713:14:3","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"accounts","nameLocation":"3754:8:3","nodeType":"VariableDeclaration","scope":880,"src":"3737:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"3737:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":813,"nodeType":"ArrayTypeName","src":"3737:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"ids","nameLocation":"3789:3:3","nodeType":"VariableDeclaration","scope":880,"src":"3772:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3772:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":816,"nodeType":"ArrayTypeName","src":"3772:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3727:71:3"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":880,"src":"3828:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"3828:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ArrayTypeName","src":"3828:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3827:18:3"},"scope":1641,"src":"3704:552:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2735],"body":{"id":895,"nodeType":"Block","src":"4399:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":889,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"4428:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4428:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":891,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"4442:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"4452:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":888,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"4409:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4409:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"4409:52:3"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"4262:57:3","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":896,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4333:17:3","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"operator","nameLocation":"4359:8:3","nodeType":"VariableDeclaration","scope":896,"src":"4351:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"4351:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"approved","nameLocation":"4374:8:3","nodeType":"VariableDeclaration","scope":896,"src":"4369:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":884,"name":"bool","nodeType":"ElementaryTypeName","src":"4369:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4350:33:3"},"returnParameters":{"id":887,"nodeType":"ParameterList","parameters":[],"src":"4399:0:3"},"scope":1641,"src":"4324:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2745],"body":{"id":919,"nodeType":"Block","src":"4631:120:3","statements":[{"assignments":[908],"declarations":[{"constant":false,"id":908,"mutability":"mutable","name":"$","nameLocation":"4664:1:3","nodeType":"VariableDeclaration","scope":919,"src":"4641:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":907,"nodeType":"UserDefinedTypeName","pathNode":{"id":906,"name":"ERC1155Storage","nameLocations":["4641:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"4641:14:3"},"referencedDeclaration":701,"src":"4641:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":911,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":909,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"4668:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$701_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4668:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4641:47:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":912,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"4705:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4707:18:3","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":698,"src":"4705:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":915,"indexExpression":{"id":914,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"4726:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4705:29:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":917,"indexExpression":{"id":916,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"4735:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4705:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":905,"id":918,"nodeType":"Return","src":"4698:46:3"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"4474:56:3","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":920,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4544:16:3","nodeType":"FunctionDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"account","nameLocation":"4569:7:3","nodeType":"VariableDeclaration","scope":920,"src":"4561:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"4561:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"operator","nameLocation":"4586:8:3","nodeType":"VariableDeclaration","scope":920,"src":"4578:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"4578:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4560:35:3"},"returnParameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"4625:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":903,"name":"bool","nodeType":"ElementaryTypeName","src":"4625:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4624:6:3"},"scope":1641,"src":"4535:216:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2759],"body":{"id":963,"nodeType":"Block","src":"4931:238:3","statements":[{"assignments":[935],"declarations":[{"constant":false,"id":935,"mutability":"mutable","name":"sender","nameLocation":"4949:6:3","nodeType":"VariableDeclaration","scope":963,"src":"4941:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"4941:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":938,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":936,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"4958:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4958:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4941:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"4984:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":940,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"4992:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4984:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5002:31:3","subExpression":{"arguments":[{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"5020:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"5026:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":942,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5003:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5003:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4984:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":954,"nodeType":"IfStatement","src":"4980:129:3","trueBody":{"id":953,"nodeType":"Block","src":"5035:74:3","statements":[{"errorCall":{"arguments":[{"id":949,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"5085:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"5093:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":948,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5056:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5056:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":952,"nodeType":"RevertStatement","src":"5049:49:3"}]}},{"expression":{"arguments":[{"id":956,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"5136:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":957,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"5142:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":958,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"5146:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"5150:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":960,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"5157:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":955,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"5118:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5118:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":962,"nodeType":"ExpressionStatement","src":"5118:44:3"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"4757:56:3","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":964,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4827:16:3","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"from","nameLocation":"4852:4:3","nodeType":"VariableDeclaration","scope":964,"src":"4844:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"4844:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"to","nameLocation":"4866:2:3","nodeType":"VariableDeclaration","scope":964,"src":"4858:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"4858:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"id","nameLocation":"4878:2:3","nodeType":"VariableDeclaration","scope":964,"src":"4870:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"value","nameLocation":"4890:5:3","nodeType":"VariableDeclaration","scope":964,"src":"4882:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"4882:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"data","nameLocation":"4910:4:3","nodeType":"VariableDeclaration","scope":964,"src":"4897:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":930,"name":"bytes","nodeType":"ElementaryTypeName","src":"4897:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4843:72:3"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[],"src":"4931:0:3"},"scope":1641,"src":"4818:351:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2775],"body":{"id":1009,"nodeType":"Block","src":"5425:245:3","statements":[{"assignments":[981],"declarations":[{"constant":false,"id":981,"mutability":"mutable","name":"sender","nameLocation":"5443:6:3","nodeType":"VariableDeclaration","scope":1009,"src":"5435:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"5435:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":984,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":982,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"5452:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5452:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5435:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":985,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5478:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":986,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"5486:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5478:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5496:31:3","subExpression":{"arguments":[{"id":989,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5514:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":990,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"5520:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":988,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5497:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5497:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5478:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1000,"nodeType":"IfStatement","src":"5474:129:3","trueBody":{"id":999,"nodeType":"Block","src":"5529:74:3","statements":[{"errorCall":{"arguments":[{"id":995,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"5579:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":996,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5587:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":994,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5550:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5550:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":998,"nodeType":"RevertStatement","src":"5543:49:3"}]}},{"expression":{"arguments":[{"id":1002,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5635:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"5641:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1004,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"5645:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1005,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"5650:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1006,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"5658:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1001,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"5612:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"5612:51:3"}]},"documentation":{"id":965,"nodeType":"StructuredDocumentation","src":"5175:61:3","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"5250:21:3","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"from","nameLocation":"5289:4:3","nodeType":"VariableDeclaration","scope":1010,"src":"5281:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"5281:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"to","nameLocation":"5311:2:3","nodeType":"VariableDeclaration","scope":1010,"src":"5303:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"5303:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"ids","nameLocation":"5340:3:3","nodeType":"VariableDeclaration","scope":1010,"src":"5323:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":971,"nodeType":"ArrayTypeName","src":"5323:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"values","nameLocation":"5370:6:3","nodeType":"VariableDeclaration","scope":1010,"src":"5353:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"5353:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":974,"nodeType":"ArrayTypeName","src":"5353:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"data","nameLocation":"5399:4:3","nodeType":"VariableDeclaration","scope":1010,"src":"5386:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":976,"name":"bytes","nodeType":"ElementaryTypeName","src":"5386:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5271:138:3"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[],"src":"5425:0:3"},"scope":1641,"src":"5241:429:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1173,"nodeType":"Block","src":"6478:1237:3","statements":[{"assignments":[1026],"declarations":[{"constant":false,"id":1026,"mutability":"mutable","name":"$","nameLocation":"6511:1:3","nodeType":"VariableDeclaration","scope":1173,"src":"6488:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1025,"nodeType":"UserDefinedTypeName","pathNode":{"id":1024,"name":"ERC1155Storage","nameLocations":["6488:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"6488:14:3"},"referencedDeclaration":701,"src":"6488:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1029,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1027,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6515:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$701_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6515:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6488:47:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1030,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"6549:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6553:6:3","memberName":"length","nodeType":"MemberAccess","src":"6549:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1032,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"6563:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6570:6:3","memberName":"length","nodeType":"MemberAccess","src":"6563:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6549:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1043,"nodeType":"IfStatement","src":"6545:117:3","trueBody":{"id":1042,"nodeType":"Block","src":"6578:84:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":1036,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"6625:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6629:6:3","memberName":"length","nodeType":"MemberAccess","src":"6625:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1038,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"6637:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6644:6:3","memberName":"length","nodeType":"MemberAccess","src":"6637:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1035,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"6599:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6599:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1041,"nodeType":"RevertStatement","src":"6592:59:3"}]}},{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"operator","nameLocation":"6680:8:3","nodeType":"VariableDeclaration","scope":1173,"src":"6672:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"6672:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1048,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1046,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"6691:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6691:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6672:31:3"},{"body":{"id":1134,"nodeType":"Block","src":"6755:656:3","statements":[{"assignments":[1061],"declarations":[{"constant":false,"id":1061,"mutability":"mutable","name":"id","nameLocation":"6777:2:3","nodeType":"VariableDeclaration","scope":1134,"src":"6769:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"6769:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1066,"initialValue":{"arguments":[{"id":1064,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"6805:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1062,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"6782:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6786:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4092,"src":"6782:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6782:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6769:38:3"},{"assignments":[1068],"declarations":[{"constant":false,"id":1068,"mutability":"mutable","name":"value","nameLocation":"6829:5:3","nodeType":"VariableDeclaration","scope":1134,"src":"6821:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"6821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1073,"initialValue":{"arguments":[{"id":1071,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"6863:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1069,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"6837:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6844:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4092,"src":"6837:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6837:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6821:44:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1074,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"6884:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6892:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:3","typeDescriptions":{}}},"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6884:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1115,"nodeType":"IfStatement","src":"6880:424:3","trueBody":{"id":1114,"nodeType":"Block","src":"6904:400:3","statements":[{"assignments":[1081],"declarations":[{"constant":false,"id":1081,"mutability":"mutable","name":"fromBalance","nameLocation":"6930:11:3","nodeType":"VariableDeclaration","scope":1114,"src":"6922:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"6922:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1088,"initialValue":{"baseExpression":{"baseExpression":{"expression":{"id":1082,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"6944:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6946:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":692,"src":"6944:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1085,"indexExpression":{"id":1084,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"6956:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6944:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1087,"indexExpression":{"id":1086,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"6960:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6944:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6922:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1089,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"6987:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7001:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6987:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1100,"nodeType":"IfStatement","src":"6983:129:3","trueBody":{"id":1099,"nodeType":"Block","src":"7008:104:3","statements":[{"errorCall":{"arguments":[{"id":1093,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7064:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1094,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"7070:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7083:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1096,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7090:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1092,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"7037:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256,uint256) pure returns (error)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7037:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1098,"nodeType":"RevertStatement","src":"7030:63:3"}]}},{"id":1113,"nodeType":"UncheckedBlock","src":"7129:161:3","statements":[{"expression":{"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"7228:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7230:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":692,"src":"7228:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1106,"indexExpression":{"id":1103,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7240:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7228:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1107,"indexExpression":{"id":1104,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7244:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7228:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1108,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"7252:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7266:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7252:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7228:43:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1112,"nodeType":"ExpressionStatement","src":"7228:43:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"7322:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7336:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7328:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"7328:7:3","typeDescriptions":{}}},"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7328:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7322:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1133,"nodeType":"IfStatement","src":"7318:83:3","trueBody":{"id":1132,"nodeType":"Block","src":"7340:61:3","statements":[{"expression":{"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1122,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"7358:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7360:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":692,"src":"7358:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1127,"indexExpression":{"id":1124,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7370:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7358:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1128,"indexExpression":{"id":1125,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"7374:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7358:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7381:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7358:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1131,"nodeType":"ExpressionStatement","src":"7358:28:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"6734:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1054,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"6738:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6742:6:3","memberName":"length","nodeType":"MemberAccess","src":"6738:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6734:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1135,"initializationExpression":{"assignments":[1050],"declarations":[{"constant":false,"id":1050,"mutability":"mutable","name":"i","nameLocation":"6727:1:3","nodeType":"VariableDeclaration","scope":1135,"src":"6719:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"6719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1052,"initialValue":{"hexValue":"30","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6731:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6719:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6750:3:3","subExpression":{"id":1057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"6752:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1059,"nodeType":"ExpressionStatement","src":"6750:3:3"},"nodeType":"ForStatement","src":"6714:697:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1136,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"7425:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7429:6:3","memberName":"length","nodeType":"MemberAccess","src":"7425:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7439:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7425:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1171,"nodeType":"Block","src":"7633:76:3","statements":[{"eventCall":{"arguments":[{"id":1164,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"7666:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1165,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7676:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1166,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"7682:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1167,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"7686:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1168,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7691:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1163,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"7652:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7652:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1170,"nodeType":"EmitStatement","src":"7647:51:3"}]},"id":1172,"nodeType":"IfStatement","src":"7421:288:3","trueBody":{"id":1162,"nodeType":"Block","src":"7442:185:3","statements":[{"assignments":[1141],"declarations":[{"constant":false,"id":1141,"mutability":"mutable","name":"id","nameLocation":"7464:2:3","nodeType":"VariableDeclaration","scope":1162,"src":"7456:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"7456:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1146,"initialValue":{"arguments":[{"hexValue":"30","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7492:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1142,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"7469:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7473:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4092,"src":"7469:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7469:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7456:38:3"},{"assignments":[1148],"declarations":[{"constant":false,"id":1148,"mutability":"mutable","name":"value","nameLocation":"7516:5:3","nodeType":"VariableDeclaration","scope":1162,"src":"7508:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"7508:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1153,"initialValue":{"arguments":[{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7550:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1149,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7524:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7531:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4092,"src":"7524:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7524:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7508:44:3"},{"eventCall":{"arguments":[{"id":1155,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"7586:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1156,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7596:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1157,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"7602:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1158,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7606:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"7610:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1154,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"7571:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7571:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1161,"nodeType":"EmitStatement","src":"7566:50:3"}]}}]},"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"5676:690:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6380:7:3","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"from","nameLocation":"6396:4:3","nodeType":"VariableDeclaration","scope":1174,"src":"6388:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"6388:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"to","nameLocation":"6410:2:3","nodeType":"VariableDeclaration","scope":1174,"src":"6402:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"6402:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"ids","nameLocation":"6431:3:3","nodeType":"VariableDeclaration","scope":1174,"src":"6414:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"6414:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1017,"nodeType":"ArrayTypeName","src":"6414:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"values","nameLocation":"6453:6:3","nodeType":"VariableDeclaration","scope":1174,"src":"6436:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"6436:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1020,"nodeType":"ArrayTypeName","src":"6436:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6387:73:3"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"6478:0:3"},"scope":1641,"src":"6371:1344:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1253,"nodeType":"Block","src":"8485:509:3","statements":[{"expression":{"arguments":[{"id":1191,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"8503:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"8509:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1193,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"8513:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1194,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"8518:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1190,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"8495:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8495:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"ExpressionStatement","src":"8495:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"8539:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8553:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8545:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"8545:7:3","typeDescriptions":{}}},"id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8539:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1252,"nodeType":"IfStatement","src":"8535:453:3","trueBody":{"id":1251,"nodeType":"Block","src":"8557:431:3","statements":[{"assignments":[1204],"declarations":[{"constant":false,"id":1204,"mutability":"mutable","name":"operator","nameLocation":"8579:8:3","nodeType":"VariableDeclaration","scope":1251,"src":"8571:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"8571:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1207,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1205,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"8590:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8590:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8571:31:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1208,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"8620:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8624:6:3","memberName":"length","nodeType":"MemberAccess","src":"8620:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8634:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8620:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1249,"nodeType":"Block","src":"8866:112:3","statements":[{"expression":{"arguments":[{"id":1241,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"8925:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1242,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"8935:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1243,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"8941:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1244,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"8945:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1245,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"8950:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1246,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"8958:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1238,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"8884:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$2988_$","typeString":"type(library ERC1155Utils)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8897:27:3","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2987,"src":"8884:40:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8884:79:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1248,"nodeType":"ExpressionStatement","src":"8884:79:3"}]},"id":1250,"nodeType":"IfStatement","src":"8616:362:3","trueBody":{"id":1237,"nodeType":"Block","src":"8637:223:3","statements":[{"assignments":[1213],"declarations":[{"constant":false,"id":1213,"mutability":"mutable","name":"id","nameLocation":"8663:2:3","nodeType":"VariableDeclaration","scope":1237,"src":"8655:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"8655:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1218,"initialValue":{"arguments":[{"hexValue":"30","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8691:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1214,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"8668:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8672:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4092,"src":"8668:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8668:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8655:38:3"},{"assignments":[1220],"declarations":[{"constant":false,"id":1220,"mutability":"mutable","name":"value","nameLocation":"8719:5:3","nodeType":"VariableDeclaration","scope":1237,"src":"8711:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"8711:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1225,"initialValue":{"arguments":[{"hexValue":"30","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8753:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1221,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"8727:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8734:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4092,"src":"8727:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8727:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8711:44:3"},{"expression":{"arguments":[{"id":1229,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"8809:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1230,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"8819:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1231,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"8825:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1232,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"8829:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8833:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1234,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"8840:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1226,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"8773:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$2988_$","typeString":"type(library ERC1155Utils)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:22:3","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2913,"src":"8773:35:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8773:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1236,"nodeType":"ExpressionStatement","src":"8773:72:3"}]}}]}}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"7721:568:3","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":1254,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"8303:26:3","nodeType":"FunctionDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"from","nameLocation":"8347:4:3","nodeType":"VariableDeclaration","scope":1254,"src":"8339:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"8339:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"to","nameLocation":"8369:2:3","nodeType":"VariableDeclaration","scope":1254,"src":"8361:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"8361:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"ids","nameLocation":"8398:3:3","nodeType":"VariableDeclaration","scope":1254,"src":"8381:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"8381:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1181,"nodeType":"ArrayTypeName","src":"8381:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"values","nameLocation":"8428:6:3","nodeType":"VariableDeclaration","scope":1254,"src":"8411:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"8411:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1184,"nodeType":"ArrayTypeName","src":"8411:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"data","nameLocation":"8457:4:3","nodeType":"VariableDeclaration","scope":1254,"src":"8444:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1186,"name":"bytes","nodeType":"ElementaryTypeName","src":"8444:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8329:138:3"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[],"src":"8485:0:3"},"scope":1641,"src":"8294:700:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1319,"nodeType":"Block","src":"9559:355:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1268,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"9573:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9587:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9579:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"9579:7:3","typeDescriptions":{}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9579:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9573:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1282,"nodeType":"IfStatement","src":"9569:88:3","trueBody":{"id":1281,"nodeType":"Block","src":"9591:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9643:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9635:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"9635:7:3","typeDescriptions":{}}},"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9635:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1274,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"9612:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9612:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1280,"nodeType":"RevertStatement","src":"9605:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1283,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9670:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9686:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9678:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"9678:7:3","typeDescriptions":{}}},"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9678:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9670:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1297,"nodeType":"IfStatement","src":"9666:88:3","trueBody":{"id":1296,"nodeType":"Block","src":"9690:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9740:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9732:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1290,"name":"address","nodeType":"ElementaryTypeName","src":"9732:7:3","typeDescriptions":{}}},"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9732:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1289,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"9711:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9711:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1295,"nodeType":"RevertStatement","src":"9704:39:3"}]}},{"assignments":[1302,1305],"declarations":[{"constant":false,"id":1302,"mutability":"mutable","name":"ids","nameLocation":"9781:3:3","nodeType":"VariableDeclaration","scope":1319,"src":"9764:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"9764:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1301,"nodeType":"ArrayTypeName","src":"9764:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"values","nameLocation":"9803:6:3","nodeType":"VariableDeclaration","scope":1319,"src":"9786:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"9786:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1304,"nodeType":"ArrayTypeName","src":"9786:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1310,"initialValue":{"arguments":[{"id":1307,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"9832:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9836:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1306,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9813:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9813:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"9763:79:3"},{"expression":{"arguments":[{"id":1312,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9879:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1313,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"9885:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"9889:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1315,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9894:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1316,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"9902:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1311,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"9852:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1318,"nodeType":"ExpressionStatement","src":"9852:55:3"}]},"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"9000:446:3","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1320,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"9460:17:3","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"from","nameLocation":"9486:4:3","nodeType":"VariableDeclaration","scope":1320,"src":"9478:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"9478:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"to","nameLocation":"9500:2:3","nodeType":"VariableDeclaration","scope":1320,"src":"9492:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"9492:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"id","nameLocation":"9512:2:3","nodeType":"VariableDeclaration","scope":1320,"src":"9504:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"9504:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"value","nameLocation":"9524:5:3","nodeType":"VariableDeclaration","scope":1320,"src":"9516:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"9516:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"data","nameLocation":"9544:4:3","nodeType":"VariableDeclaration","scope":1320,"src":"9531:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1264,"name":"bytes","nodeType":"ElementaryTypeName","src":"9531:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9477:72:3"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"9559:0:3"},"scope":1641,"src":"9451:463:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1374,"nodeType":"Block","src":"10494:266:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10508:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10522:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10514:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"10514:7:3","typeDescriptions":{}}},"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10514:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10508:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1350,"nodeType":"IfStatement","src":"10504:88:3","trueBody":{"id":1349,"nodeType":"Block","src":"10526:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10578:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10570:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"10570:7:3","typeDescriptions":{}}},"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10570:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1342,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"10547:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10547:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1348,"nodeType":"RevertStatement","src":"10540:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10605:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10621:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10613:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"10613:7:3","typeDescriptions":{}}},"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10613:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10605:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1365,"nodeType":"IfStatement","src":"10601:88:3","trueBody":{"id":1364,"nodeType":"Block","src":"10625:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10675:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10667:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"10667:7:3","typeDescriptions":{}}},"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10667:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1357,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"10646:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10646:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1363,"nodeType":"RevertStatement","src":"10639:39:3"}]}},{"expression":{"arguments":[{"id":1367,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10725:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1368,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10731:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1369,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"10735:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1370,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10740:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1371,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"10748:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1366,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"10698:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10698:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1373,"nodeType":"ExpressionStatement","src":"10698:55:3"}]},"documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"9920:390:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"10324:22:3","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"from","nameLocation":"10364:4:3","nodeType":"VariableDeclaration","scope":1375,"src":"10356:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"10356:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"mutable","name":"to","nameLocation":"10386:2:3","nodeType":"VariableDeclaration","scope":1375,"src":"10378:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1324,"name":"address","nodeType":"ElementaryTypeName","src":"10378:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"ids","nameLocation":"10415:3:3","nodeType":"VariableDeclaration","scope":1375,"src":"10398:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"10398:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1327,"nodeType":"ArrayTypeName","src":"10398:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"values","nameLocation":"10445:6:3","nodeType":"VariableDeclaration","scope":1375,"src":"10428:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"10428:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1330,"nodeType":"ArrayTypeName","src":"10428:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"data","nameLocation":"10474:4:3","nodeType":"VariableDeclaration","scope":1375,"src":"10461:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"10461:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10346:138:3"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"10494:0:3"},"scope":1641,"src":"10315:445:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1393,"nodeType":"Block","src":"11638:89:3","statements":[{"assignments":[1383],"declarations":[{"constant":false,"id":1383,"mutability":"mutable","name":"$","nameLocation":"11671:1:3","nodeType":"VariableDeclaration","scope":1393,"src":"11648:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1382,"nodeType":"UserDefinedTypeName","pathNode":{"id":1381,"name":"ERC1155Storage","nameLocations":["11648:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"11648:14:3"},"referencedDeclaration":701,"src":"11648:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1386,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1384,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"11675:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$701_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11675:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11648:47:3"},{"expression":{"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"11705:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11707:4:3","memberName":"_uri","nodeType":"MemberAccess","referencedDeclaration":700,"src":"11705:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1390,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"11714:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11705:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1392,"nodeType":"ExpressionStatement","src":"11705:15:3"}]},"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"10766:811:3","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"11591:7:3","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"newuri","nameLocation":"11613:6:3","nodeType":"VariableDeclaration","scope":1394,"src":"11599:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1377,"name":"string","nodeType":"ElementaryTypeName","src":"11599:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11598:22:3"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[],"src":"11638:0:3"},"scope":1641,"src":"11582:145:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1445,"nodeType":"Block","src":"12187:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"12201:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1407,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:3","typeDescriptions":{}}},"id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12201:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"nodeType":"IfStatement","src":"12197:88:3","trueBody":{"id":1419,"nodeType":"Block","src":"12219:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12271:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12263:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"12263:7:3","typeDescriptions":{}}},"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12263:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1412,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"12240:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12240:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1418,"nodeType":"RevertStatement","src":"12233:41:3"}]}},{"assignments":[1425,1428],"declarations":[{"constant":false,"id":1425,"mutability":"mutable","name":"ids","nameLocation":"12312:3:3","nodeType":"VariableDeclaration","scope":1445,"src":"12295:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"12295:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1424,"nodeType":"ArrayTypeName","src":"12295:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"values","nameLocation":"12334:6:3","nodeType":"VariableDeclaration","scope":1445,"src":"12317:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1426,"name":"uint256","nodeType":"ElementaryTypeName","src":"12317:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1427,"nodeType":"ArrayTypeName","src":"12317:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1433,"initialValue":{"arguments":[{"id":1430,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"12363:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"12367:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1429,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"12344:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12344:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12294:79:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12418:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12410:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"12410:7:3","typeDescriptions":{}}},"id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12410:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1439,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"12422:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1440,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"12426:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1441,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"12431:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1442,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"12439:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1434,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"12383:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12383:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1444,"nodeType":"ExpressionStatement","src":"12383:61:3"}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"11733:367:3","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1446,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"12114:5:3","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"to","nameLocation":"12128:2:3","nodeType":"VariableDeclaration","scope":1446,"src":"12120:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"12120:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"id","nameLocation":"12140:2:3","nodeType":"VariableDeclaration","scope":1446,"src":"12132:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"12132:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"value","nameLocation":"12152:5:3","nodeType":"VariableDeclaration","scope":1446,"src":"12144:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"12144:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"data","nameLocation":"12172:4:3","nodeType":"VariableDeclaration","scope":1446,"src":"12159:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1402,"name":"bytes","nodeType":"ElementaryTypeName","src":"12159:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12119:58:3"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"12187:0:3"},"scope":1641,"src":"12105:346:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1486,"nodeType":"Block","src":"12989:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"13003:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13017:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13009:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"13009:7:3","typeDescriptions":{}}},"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13009:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13003:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1474,"nodeType":"IfStatement","src":"12999:88:3","trueBody":{"id":1473,"nodeType":"Block","src":"13021:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13073:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13065:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"13065:7:3","typeDescriptions":{}}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13065:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1466,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"13042:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13042:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1472,"nodeType":"RevertStatement","src":"13035:41:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13131:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13123:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"13123:7:3","typeDescriptions":{}}},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13123:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1480,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"13135:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1481,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"13139:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1482,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"13144:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1483,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"13152:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1475,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"13096:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13096:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"ExpressionStatement","src":"13096:61:3"}]},"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"12457:420:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"12891:10:3","nodeType":"FunctionDefinition","parameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"to","nameLocation":"12910:2:3","nodeType":"VariableDeclaration","scope":1487,"src":"12902:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"12902:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"ids","nameLocation":"12931:3:3","nodeType":"VariableDeclaration","scope":1487,"src":"12914:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"12914:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1451,"nodeType":"ArrayTypeName","src":"12914:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1455,"mutability":"mutable","name":"values","nameLocation":"12953:6:3","nodeType":"VariableDeclaration","scope":1487,"src":"12936:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"12936:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1454,"nodeType":"ArrayTypeName","src":"12936:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1457,"mutability":"mutable","name":"data","nameLocation":"12974:4:3","nodeType":"VariableDeclaration","scope":1487,"src":"12961:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1456,"name":"bytes","nodeType":"ElementaryTypeName","src":"12961:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12901:78:3"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[],"src":"12989:0:3"},"scope":1641,"src":"12882:282:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1536,"nodeType":"Block","src":"13523:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"13537:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13553:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13545:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"13545:7:3","typeDescriptions":{}}},"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13545:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13537:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1511,"nodeType":"IfStatement","src":"13533:88:3","trueBody":{"id":1510,"nodeType":"Block","src":"13557:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13607:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13599:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"13599:7:3","typeDescriptions":{}}},"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13599:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1503,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"13578:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1509,"nodeType":"RevertStatement","src":"13571:39:3"}]}},{"assignments":[1516,1519],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"ids","nameLocation":"13648:3:3","nodeType":"VariableDeclaration","scope":1536,"src":"13631:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"13631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1515,"nodeType":"ArrayTypeName","src":"13631:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"values","nameLocation":"13670:6:3","nodeType":"VariableDeclaration","scope":1536,"src":"13653:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"13653:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1518,"nodeType":"ArrayTypeName","src":"13653:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1524,"initialValue":{"arguments":[{"id":1521,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"13699:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"13703:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1520,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"13680:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13680:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"13630:79:3"},{"expression":{"arguments":[{"id":1526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"13746:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13760:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13752:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"13752:7:3","typeDescriptions":{}}},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13752:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1531,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"13764:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1532,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"13769:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13777:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1525,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"13719:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13719:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1535,"nodeType":"ExpressionStatement","src":"13719:61:3"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"13170:283:3","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1537,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"13467:5:3","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"from","nameLocation":"13481:4:3","nodeType":"VariableDeclaration","scope":1537,"src":"13473:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"13473:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"id","nameLocation":"13495:2:3","nodeType":"VariableDeclaration","scope":1537,"src":"13487:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"13487:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"value","nameLocation":"13507:5:3","nodeType":"VariableDeclaration","scope":1537,"src":"13499:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"13499:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13472:41:3"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[],"src":"13523:0:3"},"scope":1641,"src":"13458:329:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1575,"nodeType":"Block","src":"14233:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"14247:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14263:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14255:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"14255:7:3","typeDescriptions":{}}},"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14255:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14247:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1563,"nodeType":"IfStatement","src":"14243:88:3","trueBody":{"id":1562,"nodeType":"Block","src":"14267:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14317:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14309:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1556,"name":"address","nodeType":"ElementaryTypeName","src":"14309:7:3","typeDescriptions":{}}},"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14309:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1555,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"14288:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14288:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1561,"nodeType":"RevertStatement","src":"14281:39:3"}]}},{"expression":{"arguments":[{"id":1565,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"14367:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14381:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14373:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"14373:7:3","typeDescriptions":{}}},"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14373:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1570,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"14385:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1571,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"14390:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14398:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1564,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"14340:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14340:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1574,"nodeType":"ExpressionStatement","src":"14340:61:3"}]},"documentation":{"id":1538,"nodeType":"StructuredDocumentation","src":"13793:345:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1576,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"14152:10:3","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"from","nameLocation":"14171:4:3","nodeType":"VariableDeclaration","scope":1576,"src":"14163:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"14163:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"ids","nameLocation":"14194:3:3","nodeType":"VariableDeclaration","scope":1576,"src":"14177:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"14177:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1542,"nodeType":"ArrayTypeName","src":"14177:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"values","nameLocation":"14216:6:3","nodeType":"VariableDeclaration","scope":1576,"src":"14199:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"14199:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1545,"nodeType":"ArrayTypeName","src":"14199:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14162:61:3"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[],"src":"14233:0:3"},"scope":1641,"src":"14143:265:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1623,"nodeType":"Block","src":"14720:281:3","statements":[{"assignments":[1588],"declarations":[{"constant":false,"id":1588,"mutability":"mutable","name":"$","nameLocation":"14753:1:3","nodeType":"VariableDeclaration","scope":1623,"src":"14730:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1587,"nodeType":"UserDefinedTypeName","pathNode":{"id":1586,"name":"ERC1155Storage","nameLocations":["14730:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"14730:14:3"},"referencedDeclaration":701,"src":"14730:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1591,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1589,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"14757:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$701_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14757:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"14730:47:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1592,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"14791:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14811:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14803:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"14803:7:3","typeDescriptions":{}}},"id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14803:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14791:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1606,"nodeType":"IfStatement","src":"14787:94:3","trueBody":{"id":1605,"nodeType":"Block","src":"14815:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14867:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14859:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"14859:7:3","typeDescriptions":{}}},"id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14859:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1598,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"14836:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14836:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1604,"nodeType":"RevertStatement","src":"14829:41:3"}]}},{"expression":{"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1607,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"14890:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14892:18:3","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":698,"src":"14890:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1612,"indexExpression":{"id":1609,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14911:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14890:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1613,"indexExpression":{"id":1610,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"14918:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14890:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1614,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"14930:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14890:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1616,"nodeType":"ExpressionStatement","src":"14890:48:3"},{"eventCall":{"arguments":[{"id":1618,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14968:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1619,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"14975:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1620,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"14985:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1617,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"14953:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14953:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1622,"nodeType":"EmitStatement","src":"14948:46:3"}]},"documentation":{"id":1577,"nodeType":"StructuredDocumentation","src":"14414:208:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1624,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"14636:18:3","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"owner","nameLocation":"14663:5:3","nodeType":"VariableDeclaration","scope":1624,"src":"14655:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1578,"name":"address","nodeType":"ElementaryTypeName","src":"14655:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1581,"mutability":"mutable","name":"operator","nameLocation":"14678:8:3","nodeType":"VariableDeclaration","scope":1624,"src":"14670:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"14670:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"approved","nameLocation":"14693:8:3","nodeType":"VariableDeclaration","scope":1624,"src":"14688:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1582,"name":"bool","nodeType":"ElementaryTypeName","src":"14688:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14654:48:3"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[],"src":"14720:0:3"},"scope":1641,"src":"14627:374:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1639,"nodeType":"Block","src":"15275:664:3","statements":[{"AST":{"nativeSrc":"15310:623:3","nodeType":"YulBlock","src":"15310:623:3","statements":[{"nativeSrc":"15368:21:3","nodeType":"YulAssignment","src":"15368:21:3","value":{"arguments":[{"kind":"number","nativeSrc":"15384:4:3","nodeType":"YulLiteral","src":"15384:4:3","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"15378:5:3","nodeType":"YulIdentifier","src":"15378:5:3"},"nativeSrc":"15378:11:3","nodeType":"YulFunctionCall","src":"15378:11:3"},"variableNames":[{"name":"array1","nativeSrc":"15368:6:3","nodeType":"YulIdentifier","src":"15368:6:3"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"15446:6:3","nodeType":"YulIdentifier","src":"15446:6:3"},{"kind":"number","nativeSrc":"15454:1:3","nodeType":"YulLiteral","src":"15454:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"15439:6:3","nodeType":"YulIdentifier","src":"15439:6:3"},"nativeSrc":"15439:17:3","nodeType":"YulFunctionCall","src":"15439:17:3"},"nativeSrc":"15439:17:3","nodeType":"YulExpressionStatement","src":"15439:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"15577:6:3","nodeType":"YulIdentifier","src":"15577:6:3"},{"kind":"number","nativeSrc":"15585:4:3","nodeType":"YulLiteral","src":"15585:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15573:3:3","nodeType":"YulIdentifier","src":"15573:3:3"},"nativeSrc":"15573:17:3","nodeType":"YulFunctionCall","src":"15573:17:3"},{"name":"element1","nativeSrc":"15592:8:3","nodeType":"YulIdentifier","src":"15592:8:3"}],"functionName":{"name":"mstore","nativeSrc":"15566:6:3","nodeType":"YulIdentifier","src":"15566:6:3"},"nativeSrc":"15566:35:3","nodeType":"YulFunctionCall","src":"15566:35:3"},"nativeSrc":"15566:35:3","nodeType":"YulExpressionStatement","src":"15566:35:3"},{"nativeSrc":"15692:27:3","nodeType":"YulAssignment","src":"15692:27:3","value":{"arguments":[{"name":"array1","nativeSrc":"15706:6:3","nodeType":"YulIdentifier","src":"15706:6:3"},{"kind":"number","nativeSrc":"15714:4:3","nodeType":"YulLiteral","src":"15714:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15702:3:3","nodeType":"YulIdentifier","src":"15702:3:3"},"nativeSrc":"15702:17:3","nodeType":"YulFunctionCall","src":"15702:17:3"},"variableNames":[{"name":"array2","nativeSrc":"15692:6:3","nodeType":"YulIdentifier","src":"15692:6:3"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"15739:6:3","nodeType":"YulIdentifier","src":"15739:6:3"},{"kind":"number","nativeSrc":"15747:1:3","nodeType":"YulLiteral","src":"15747:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"15732:6:3","nodeType":"YulIdentifier","src":"15732:6:3"},"nativeSrc":"15732:17:3","nodeType":"YulFunctionCall","src":"15732:17:3"},"nativeSrc":"15732:17:3","nodeType":"YulExpressionStatement","src":"15732:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"15773:6:3","nodeType":"YulIdentifier","src":"15773:6:3"},{"kind":"number","nativeSrc":"15781:4:3","nodeType":"YulLiteral","src":"15781:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15769:3:3","nodeType":"YulIdentifier","src":"15769:3:3"},"nativeSrc":"15769:17:3","nodeType":"YulFunctionCall","src":"15769:17:3"},{"name":"element2","nativeSrc":"15788:8:3","nodeType":"YulIdentifier","src":"15788:8:3"}],"functionName":{"name":"mstore","nativeSrc":"15762:6:3","nodeType":"YulIdentifier","src":"15762:6:3"},"nativeSrc":"15762:35:3","nodeType":"YulFunctionCall","src":"15762:35:3"},"nativeSrc":"15762:35:3","nodeType":"YulExpressionStatement","src":"15762:35:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15899:4:3","nodeType":"YulLiteral","src":"15899:4:3","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"15909:6:3","nodeType":"YulIdentifier","src":"15909:6:3"},{"kind":"number","nativeSrc":"15917:4:3","nodeType":"YulLiteral","src":"15917:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15905:3:3","nodeType":"YulIdentifier","src":"15905:3:3"},"nativeSrc":"15905:17:3","nodeType":"YulFunctionCall","src":"15905:17:3"}],"functionName":{"name":"mstore","nativeSrc":"15892:6:3","nodeType":"YulIdentifier","src":"15892:6:3"},"nativeSrc":"15892:31:3","nodeType":"YulFunctionCall","src":"15892:31:3"},"nativeSrc":"15892:31:3","nodeType":"YulExpressionStatement","src":"15892:31:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":1633,"isOffset":false,"isSlot":false,"src":"15368:6:3","valueSize":1},{"declaration":1633,"isOffset":false,"isSlot":false,"src":"15446:6:3","valueSize":1},{"declaration":1633,"isOffset":false,"isSlot":false,"src":"15577:6:3","valueSize":1},{"declaration":1633,"isOffset":false,"isSlot":false,"src":"15706:6:3","valueSize":1},{"declaration":1636,"isOffset":false,"isSlot":false,"src":"15692:6:3","valueSize":1},{"declaration":1636,"isOffset":false,"isSlot":false,"src":"15739:6:3","valueSize":1},{"declaration":1636,"isOffset":false,"isSlot":false,"src":"15773:6:3","valueSize":1},{"declaration":1636,"isOffset":false,"isSlot":false,"src":"15909:6:3","valueSize":1},{"declaration":1627,"isOffset":false,"isSlot":false,"src":"15592:8:3","valueSize":1},{"declaration":1629,"isOffset":false,"isSlot":false,"src":"15788:8:3","valueSize":1}],"flags":["memory-safe"],"id":1638,"nodeType":"InlineAssembly","src":"15285:648:3"}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"15007:105:3","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1640,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"15126:18:3","nodeType":"FunctionDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"element1","nameLocation":"15162:8:3","nodeType":"VariableDeclaration","scope":1640,"src":"15154:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"15154:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"element2","nameLocation":"15188:8:3","nodeType":"VariableDeclaration","scope":1640,"src":"15180:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"15180:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15144:58:3"},"returnParameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"array1","nameLocation":"15242:6:3","nodeType":"VariableDeclaration","scope":1640,"src":"15225:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"15225:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1632,"nodeType":"ArrayTypeName","src":"15225:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"array2","nameLocation":"15267:6:3","nodeType":"VariableDeclaration","scope":1640,"src":"15250:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"15250:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1635,"nodeType":"ArrayTypeName","src":"15250:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15224:50:3"},"scope":1641,"src":"15117:822:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1642,"src":"1052:14889:3","usedErrors":[211,214,2314,2319,2324,2331,2336,2341,2348],"usedEvents":[219,2673,2688,2697,2704]}],"src":"109:15833:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol","exportedSymbols":{"ERC1155PausableUpgradeable":[1696],"ERC1155Upgradeable":[1641],"Initializable":[462],"PausableUpgradeable":[2141]},"id":1697,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1643,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","file":"../ERC1155Upgradeable.sol","id":1645,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":1642,"src":"154:61:4","symbolAliases":[{"foreign":{"id":1644,"name":"ERC1155Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"162:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"../../../utils/PausableUpgradeable.sol","id":1647,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":2142,"src":"216:75:4","symbolAliases":[{"foreign":{"id":1646,"name":"PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"224:19:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1649,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":463,"src":"292:69:4","symbolAliases":[{"foreign":{"id":1648,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"300:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1651,"name":"Initializable","nameLocations":["1102:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1102:13:4"},"id":1652,"nodeType":"InheritanceSpecifier","src":"1102:13:4"},{"baseName":{"id":1653,"name":"ERC1155Upgradeable","nameLocations":["1117:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":1641,"src":"1117:18:4"},"id":1654,"nodeType":"InheritanceSpecifier","src":"1117:18:4"},{"baseName":{"id":1655,"name":"PausableUpgradeable","nameLocations":["1137:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":2141,"src":"1137:19:4"},"id":1656,"nodeType":"InheritanceSpecifier","src":"1137:19:4"}],"canonicalName":"ERC1155PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"363:690:4","text":" @dev ERC-1155 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1696,"linearizedBaseContracts":[1696,2141,1641,2349,2834,2776,2181,5900,1981,462],"name":"ERC1155PausableUpgradeable","nameLocation":"1072:26:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1661,"nodeType":"Block","src":"1223:7:4","statements":[]},"id":1662,"implemented":true,"kind":"function","modifiers":[{"id":1659,"kind":"modifierInvocation","modifierName":{"id":1658,"name":"onlyInitializing","nameLocations":["1206:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1206:16:4"},"nodeType":"ModifierInvocation","src":"1206:16:4"}],"name":"__ERC1155Pausable_init","nameLocation":"1172:22:4","nodeType":"FunctionDefinition","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[],"src":"1194:2:4"},"returnParameters":{"id":1660,"nodeType":"ParameterList","parameters":[],"src":"1223:0:4"},"scope":1696,"src":"1163:67:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1667,"nodeType":"Block","src":"1306:7:4","statements":[]},"id":1668,"implemented":true,"kind":"function","modifiers":[{"id":1665,"kind":"modifierInvocation","modifierName":{"id":1664,"name":"onlyInitializing","nameLocations":["1289:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1289:16:4"},"nodeType":"ModifierInvocation","src":"1289:16:4"}],"name":"__ERC1155Pausable_init_unchained","nameLocation":"1245:32:4","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"1277:2:4"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[],"src":"1306:0:4"},"scope":1696,"src":"1236:77:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1174],"body":{"id":1694,"nodeType":"Block","src":"1614:53:4","statements":[{"expression":{"arguments":[{"id":1688,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"1638:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1689,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1644:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1690,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"1648:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1691,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1653:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":1685,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1624:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155PausableUpgradeable_$1696_$","typeString":"type(contract super ERC1155PausableUpgradeable)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:4","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"1624:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1624:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"ExpressionStatement","src":"1624:36:4"}]},"documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"1318:123:4","text":" @dev See {ERC1155-_update}.\n Requirements:\n - the contract must not be paused."},"id":1695,"implemented":true,"kind":"function","modifiers":[{"id":1683,"kind":"modifierInvocation","modifierName":{"id":1682,"name":"whenNotPaused","nameLocations":["1600:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":2031,"src":"1600:13:4"},"nodeType":"ModifierInvocation","src":"1600:13:4"}],"name":"_update","nameLocation":"1455:7:4","nodeType":"FunctionDefinition","overrides":{"id":1681,"nodeType":"OverrideSpecifier","overrides":[],"src":"1591:8:4"},"parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"from","nameLocation":"1480:4:4","nodeType":"VariableDeclaration","scope":1695,"src":"1472:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"to","nameLocation":"1502:2:4","nodeType":"VariableDeclaration","scope":1695,"src":"1494:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"ids","nameLocation":"1531:3:4","nodeType":"VariableDeclaration","scope":1695,"src":"1514:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1514:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ArrayTypeName","src":"1514:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"values","nameLocation":"1561:6:4","nodeType":"VariableDeclaration","scope":1695,"src":"1544:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1544:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1678,"nodeType":"ArrayTypeName","src":"1544:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1462:111:4"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[],"src":"1614:0:4"},"scope":1696,"src":"1446:221:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1697,"src":"1054:615:4","usedErrors":[211,214,2020,2023,2314,2319,2324,2331,2336,2341,2348],"usedEvents":[219,2012,2017,2673,2688,2697,2704]}],"src":"128:1542:4"},"id":4},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol","exportedSymbols":{"Arrays":[4126],"ERC1155SupplyUpgradeable":[1935],"ERC1155Upgradeable":[1641],"Initializable":[462]},"id":1936,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1698,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","file":"../ERC1155Upgradeable.sol","id":1700,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1936,"sourceUnit":1642,"src":"152:61:5","symbolAliases":[{"foreign":{"id":1699,"name":"ERC1155Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"160:18:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"@openzeppelin/contracts/utils/Arrays.sol","id":1702,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1936,"sourceUnit":4127,"src":"214:64:5","symbolAliases":[{"foreign":{"id":1701,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"222:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1704,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1936,"sourceUnit":463,"src":"279:69:5","symbolAliases":[{"foreign":{"id":1703,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"287:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1706,"name":"Initializable","nameLocations":["949:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"949:13:5"},"id":1707,"nodeType":"InheritanceSpecifier","src":"949:13:5"},{"baseName":{"id":1708,"name":"ERC1155Upgradeable","nameLocations":["964:18:5"],"nodeType":"IdentifierPath","referencedDeclaration":1641,"src":"964:18:5"},"id":1709,"nodeType":"InheritanceSpecifier","src":"964:18:5"}],"canonicalName":"ERC1155SupplyUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1705,"nodeType":"StructuredDocumentation","src":"350:552:5","text":" @dev Extension of ERC-1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted.\n NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n that can be minted.\n CAUTION: This extension should not be added in an upgrade to an already deployed contract."},"fullyImplemented":true,"id":1935,"linearizedBaseContracts":[1935,1641,2349,2834,2776,2181,5900,1981,462],"name":"ERC1155SupplyUpgradeable","nameLocation":"921:24:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1713,"libraryName":{"id":1710,"name":"Arrays","nameLocations":["995:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":4126,"src":"995:6:5"},"nodeType":"UsingForDirective","src":"989:27:5","typeName":{"baseType":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1006:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1712,"nodeType":"ArrayTypeName","src":"1006:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"canonicalName":"ERC1155SupplyUpgradeable.ERC1155SupplyStorage","documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"1022:71:5","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC1155Supply"},"id":1721,"members":[{"constant":false,"id":1718,"mutability":"mutable","name":"_totalSupply","nameLocation":"1167:12:5","nodeType":"VariableDeclaration","scope":1721,"src":"1136:43:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1717,"keyName":"id","keyNameLocation":"1152:2:5","keyType":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1136:30:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1158:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"_totalSupplyAll","nameLocation":"1197:15:5","nodeType":"VariableDeclaration","scope":1721,"src":"1189:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1189:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ERC1155SupplyStorage","nameLocation":"1105:20:5","nodeType":"StructDefinition","scope":1935,"src":"1098:121:5","visibility":"public"},{"constant":true,"id":1724,"mutability":"constant","name":"ERC1155SupplyStorageLocation","nameLocation":"1367:28:5","nodeType":"VariableDeclaration","scope":1935,"src":"1342:122:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1342:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834613539333636326565303464323762366130306562623331626537666530633130326332616465383261376335643736346632646630356463346532383030","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1398:66:5","typeDescriptions":{"typeIdentifier":"t_rational_33628775545370798169512062789505411687485904666574391101151478347969820764160_by_1","typeString":"int_const 3362...(69 digits omitted)...4160"},"value":"0x4a593662ee04d27b6a00ebb31be7fe0c102c2ade82a7c5d764f2df05dc4e2800"},"visibility":"private"},{"body":{"id":1731,"nodeType":"Block","src":"1561:87:5","statements":[{"AST":{"nativeSrc":"1580:62:5","nodeType":"YulBlock","src":"1580:62:5","statements":[{"nativeSrc":"1594:38:5","nodeType":"YulAssignment","src":"1594:38:5","value":{"name":"ERC1155SupplyStorageLocation","nativeSrc":"1604:28:5","nodeType":"YulIdentifier","src":"1604:28:5"},"variableNames":[{"name":"$.slot","nativeSrc":"1594:6:5","nodeType":"YulIdentifier","src":"1594:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1728,"isOffset":false,"isSlot":true,"src":"1594:6:5","suffix":"slot","valueSize":1},{"declaration":1724,"isOffset":false,"isSlot":false,"src":"1604:28:5","valueSize":1}],"id":1730,"nodeType":"InlineAssembly","src":"1571:71:5"}]},"id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC1155SupplyStorage","nameLocation":"1480:24:5","nodeType":"FunctionDefinition","parameters":{"id":1725,"nodeType":"ParameterList","parameters":[],"src":"1504:2:5"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"$","nameLocation":"1558:1:5","nodeType":"VariableDeclaration","scope":1732,"src":"1529:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"},"typeName":{"id":1727,"nodeType":"UserDefinedTypeName","pathNode":{"id":1726,"name":"ERC1155SupplyStorage","nameLocations":["1529:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":1721,"src":"1529:20:5"},"referencedDeclaration":1721,"src":"1529:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"}},"visibility":"internal"}],"src":"1528:32:5"},"scope":1935,"src":"1471:177:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1737,"nodeType":"Block","src":"1712:7:5","statements":[]},"id":1738,"implemented":true,"kind":"function","modifiers":[{"id":1735,"kind":"modifierInvocation","modifierName":{"id":1734,"name":"onlyInitializing","nameLocations":["1695:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1695:16:5"},"nodeType":"ModifierInvocation","src":"1695:16:5"}],"name":"__ERC1155Supply_init","nameLocation":"1663:20:5","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[],"src":"1683:2:5"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[],"src":"1712:0:5"},"scope":1935,"src":"1654:65:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1743,"nodeType":"Block","src":"1793:7:5","statements":[]},"id":1744,"implemented":true,"kind":"function","modifiers":[{"id":1741,"kind":"modifierInvocation","modifierName":{"id":1740,"name":"onlyInitializing","nameLocations":["1776:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1776:16:5"},"nodeType":"ModifierInvocation","src":"1776:16:5"}],"name":"__ERC1155Supply_init_unchained","nameLocation":"1734:30:5","nodeType":"FunctionDefinition","parameters":{"id":1739,"nodeType":"ParameterList","parameters":[],"src":"1764:2:5"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"1793:0:5"},"scope":1935,"src":"1725:75:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1763,"nodeType":"Block","src":"1946:111:5","statements":[{"assignments":[1754],"declarations":[{"constant":false,"id":1754,"mutability":"mutable","name":"$","nameLocation":"1985:1:5","nodeType":"VariableDeclaration","scope":1763,"src":"1956:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"},"typeName":{"id":1753,"nodeType":"UserDefinedTypeName","pathNode":{"id":1752,"name":"ERC1155SupplyStorage","nameLocations":["1956:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":1721,"src":"1956:20:5"},"referencedDeclaration":1721,"src":"1956:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"}},"visibility":"internal"}],"id":1757,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1755,"name":"_getERC1155SupplyStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"1989:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155SupplyStorage_$1721_storage_ptr_$","typeString":"function () pure returns (struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1956:59:5"},{"expression":{"baseExpression":{"expression":{"id":1758,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"2032:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"id":1759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2034:12:5","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"2032:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1761,"indexExpression":{"id":1760,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"2047:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2032:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1751,"id":1762,"nodeType":"Return","src":"2025:25:5"}]},"documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"1805:65:5","text":" @dev Total value of tokens in with a given id."},"functionSelector":"bd85b039","id":1764,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1884:11:5","nodeType":"FunctionDefinition","parameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"id","nameLocation":"1904:2:5","nodeType":"VariableDeclaration","scope":1764,"src":"1896:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1896:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1895:12:5"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1764,"src":"1937:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1937:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1936:9:5"},"scope":1935,"src":"1875:182:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1779,"nodeType":"Block","src":"2175:110:5","statements":[{"assignments":[1772],"declarations":[{"constant":false,"id":1772,"mutability":"mutable","name":"$","nameLocation":"2214:1:5","nodeType":"VariableDeclaration","scope":1779,"src":"2185:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"},"typeName":{"id":1771,"nodeType":"UserDefinedTypeName","pathNode":{"id":1770,"name":"ERC1155SupplyStorage","nameLocations":["2185:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":1721,"src":"2185:20:5"},"referencedDeclaration":1721,"src":"2185:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"}},"visibility":"internal"}],"id":1775,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1773,"name":"_getERC1155SupplyStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2218:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155SupplyStorage_$1721_storage_ptr_$","typeString":"function () pure returns (struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2218:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2185:59:5"},{"expression":{"expression":{"id":1776,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"2261:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"id":1777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2263:15:5","memberName":"_totalSupplyAll","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"2261:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1769,"id":1778,"nodeType":"Return","src":"2254:24:5"}]},"documentation":{"id":1765,"nodeType":"StructuredDocumentation","src":"2063:46:5","text":" @dev Total value of tokens."},"functionSelector":"18160ddd","id":1780,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2123:11:5","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[],"src":"2134:2:5"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1780,"src":"2166:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2165:9:5"},"scope":1935,"src":"2114:171:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1794,"nodeType":"Block","src":"2441:43:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1789,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"2470:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1788,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[1764,1780],"referencedDeclaration":1764,"src":"2458:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2458:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2476:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1787,"id":1793,"nodeType":"Return","src":"2451:26:5"}]},"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"2291:82:5","text":" @dev Indicates whether any token exist with a given id, or not."},"functionSelector":"4f558e79","id":1795,"implemented":true,"kind":"function","modifiers":[],"name":"exists","nameLocation":"2387:6:5","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"id","nameLocation":"2402:2:5","nodeType":"VariableDeclaration","scope":1795,"src":"2394:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"2394:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2393:12:5"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1795,"src":"2435:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1785,"name":"bool","nodeType":"ElementaryTypeName","src":"2435:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2434:6:5"},"scope":1935,"src":"2378:106:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1174],"body":{"id":1933,"nodeType":"Block","src":"2695:1517:5","statements":[{"assignments":[1812],"declarations":[{"constant":false,"id":1812,"mutability":"mutable","name":"$","nameLocation":"2734:1:5","nodeType":"VariableDeclaration","scope":1933,"src":"2705:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"},"typeName":{"id":1811,"nodeType":"UserDefinedTypeName","pathNode":{"id":1810,"name":"ERC1155SupplyStorage","nameLocations":["2705:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":1721,"src":"2705:20:5"},"referencedDeclaration":1721,"src":"2705:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage"}},"visibility":"internal"}],"id":1815,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1813,"name":"_getERC1155SupplyStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2738:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155SupplyStorage_$1721_storage_ptr_$","typeString":"function () pure returns (struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2705:59:5"},{"expression":{"arguments":[{"id":1819,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"2788:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1820,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"2794:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1821,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"2798:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1822,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2803:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":1816,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2774:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155SupplyUpgradeable_$1935_$","typeString":"type(contract super ERC1155SupplyUpgradeable)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2780:7:5","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"2774:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2774:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1824,"nodeType":"ExpressionStatement","src":"2774:36:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1825,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"2825:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2841:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2833:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1826,"name":"address","nodeType":"ElementaryTypeName","src":"2833:7:5","typeDescriptions":{}}},"id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2833:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2825:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1877,"nodeType":"IfStatement","src":"2821:575:5","trueBody":{"id":1876,"nodeType":"Block","src":"2845:551:5","statements":[{"assignments":[1832],"declarations":[{"constant":false,"id":1832,"mutability":"mutable","name":"totalMintValue","nameLocation":"2867:14:5","nodeType":"VariableDeclaration","scope":1876,"src":"2859:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"2859:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1834,"initialValue":{"hexValue":"30","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2884:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2859:26:5"},{"body":{"id":1868,"nodeType":"Block","src":"2940:292:5","statements":[{"assignments":[1847],"declarations":[{"constant":false,"id":1847,"mutability":"mutable","name":"value","nameLocation":"2966:5:5","nodeType":"VariableDeclaration","scope":1868,"src":"2958:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"2958:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1852,"initialValue":{"arguments":[{"id":1850,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3000:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1848,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2974:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2981:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4092,"src":"2974:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2974:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2958:44:5"},{"expression":{"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1853,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"3126:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"id":1859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3128:12:5","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"3126:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1860,"indexExpression":{"arguments":[{"id":1857,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3164:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1855,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"3141:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4092,"src":"3141:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3141:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3126:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"3171:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3126:50:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1863,"nodeType":"ExpressionStatement","src":"3126:50:5"},{"expression":{"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1864,"name":"totalMintValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3194:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"3212:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3194:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1867,"nodeType":"ExpressionStatement","src":"3194:23:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1839,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"2919:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1840,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"2923:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2927:6:5","memberName":"length","nodeType":"MemberAccess","src":"2923:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2919:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1869,"initializationExpression":{"assignments":[1836],"declarations":[{"constant":false,"id":1836,"mutability":"mutable","name":"i","nameLocation":"2912:1:5","nodeType":"VariableDeclaration","scope":1869,"src":"2904:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2904:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1838,"initialValue":{"hexValue":"30","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2916:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2904:13:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2935:3:5","subExpression":{"id":1843,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"2937:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1845,"nodeType":"ExpressionStatement","src":"2935:3:5"},"nodeType":"ForStatement","src":"2899:333:5"},{"expression":{"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1870,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"3350:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"id":1872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3352:15:5","memberName":"_totalSupplyAll","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"3350:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1873,"name":"totalMintValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3371:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3350:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1875,"nodeType":"ExpressionStatement","src":"3350:35:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"3410:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3424:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3416:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"3416:7:5","typeDescriptions":{}}},"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3410:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1932,"nodeType":"IfStatement","src":"3406:800:5","trueBody":{"id":1931,"nodeType":"Block","src":"3428:778:5","statements":[{"assignments":[1885],"declarations":[{"constant":false,"id":1885,"mutability":"mutable","name":"totalBurnValue","nameLocation":"3450:14:5","nodeType":"VariableDeclaration","scope":1931,"src":"3442:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1884,"name":"uint256","nodeType":"ElementaryTypeName","src":"3442:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1887,"initialValue":{"hexValue":"30","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3467:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3442:26:5"},{"body":{"id":1922,"nodeType":"Block","src":"3523:458:5","statements":[{"assignments":[1900],"declarations":[{"constant":false,"id":1900,"mutability":"mutable","name":"value","nameLocation":"3549:5:5","nodeType":"VariableDeclaration","scope":1922,"src":"3541:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1905,"initialValue":{"arguments":[{"id":1903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"3583:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1901,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"3557:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3564:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4092,"src":"3557:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3557:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3541:44:5"},{"id":1921,"nodeType":"UncheckedBlock","src":"3604:363:5","statements":[{"expression":{"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1906,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"3742:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"id":1912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3744:12:5","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"3742:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1913,"indexExpression":{"arguments":[{"id":1910,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"3780:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1908,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"3757:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3761:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4092,"src":"3757:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3757:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3742:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3787:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3742:50:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1916,"nodeType":"ExpressionStatement","src":"3742:50:5"},{"expression":{"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1917,"name":"totalBurnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"3925:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3943:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1920,"nodeType":"ExpressionStatement","src":"3925:23:5"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1892,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"3502:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1893,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"3506:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3510:6:5","memberName":"length","nodeType":"MemberAccess","src":"3506:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3502:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1923,"initializationExpression":{"assignments":[1889],"declarations":[{"constant":false,"id":1889,"mutability":"mutable","name":"i","nameLocation":"3495:1:5","nodeType":"VariableDeclaration","scope":1923,"src":"3487:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1888,"name":"uint256","nodeType":"ElementaryTypeName","src":"3487:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1891,"initialValue":{"hexValue":"30","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3499:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3487:13:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3518:3:5","subExpression":{"id":1896,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"3520:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1898,"nodeType":"ExpressionStatement","src":"3518:3:5"},"nodeType":"ForStatement","src":"3482:499:5"},{"id":1930,"nodeType":"UncheckedBlock","src":"3994:202:5","statements":[{"expression":{"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1924,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"4146:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155SupplyStorage_$1721_storage_ptr","typeString":"struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage storage pointer"}},"id":1926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4148:15:5","memberName":"_totalSupplyAll","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"4146:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1927,"name":"totalBurnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"4167:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4146:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1929,"nodeType":"ExpressionStatement","src":"4146:35:5"}]}]}}]},"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"2490:46:5","text":" @dev See {ERC1155-_update}."},"id":1934,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2550:7:5","nodeType":"FunctionDefinition","overrides":{"id":1808,"nodeType":"OverrideSpecifier","overrides":[],"src":"2686:8:5"},"parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"from","nameLocation":"2575:4:5","nodeType":"VariableDeclaration","scope":1934,"src":"2567:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"to","nameLocation":"2597:2:5","nodeType":"VariableDeclaration","scope":1934,"src":"2589:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"ids","nameLocation":"2626:3:5","nodeType":"VariableDeclaration","scope":1934,"src":"2609:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2609:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1802,"nodeType":"ArrayTypeName","src":"2609:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"values","nameLocation":"2656:6:5","nodeType":"VariableDeclaration","scope":1934,"src":"2639:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"2639:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1805,"nodeType":"ArrayTypeName","src":"2639:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:111:5"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[],"src":"2695:0:5"},"scope":1935,"src":"2541:1671:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1936,"src":"903:3311:5","usedErrors":[211,214,2314,2319,2324,2331,2336,2341,2348],"usedEvents":[219,2673,2688,2697,2704]}],"src":"126:4089:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1981],"Initializable":[462]},"id":1982,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1937,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1939,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1982,"sourceUnit":463,"src":"126:63:6","symbolAliases":[{"foreign":{"id":1938,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"134:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1941,"name":"Initializable","nameLocations":["728:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"728:13:6"},"id":1942,"nodeType":"InheritanceSpecifier","src":"728:13:6"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"191:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1981,"linearizedBaseContracts":[1981,462],"name":"ContextUpgradeable","nameLocation":"706:18:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1947,"nodeType":"Block","src":"800:7:6","statements":[]},"id":1948,"implemented":true,"kind":"function","modifiers":[{"id":1945,"kind":"modifierInvocation","modifierName":{"id":1944,"name":"onlyInitializing","nameLocations":["783:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:6"},"nodeType":"ModifierInvocation","src":"783:16:6"}],"name":"__Context_init","nameLocation":"757:14:6","nodeType":"FunctionDefinition","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[],"src":"771:2:6"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[],"src":"800:0:6"},"scope":1981,"src":"748:59:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1953,"nodeType":"Block","src":"875:7:6","statements":[]},"id":1954,"implemented":true,"kind":"function","modifiers":[{"id":1951,"kind":"modifierInvocation","modifierName":{"id":1950,"name":"onlyInitializing","nameLocations":["858:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:6"},"nodeType":"ModifierInvocation","src":"858:16:6"}],"name":"__Context_init_unchained","nameLocation":"822:24:6","nodeType":"FunctionDefinition","parameters":{"id":1949,"nodeType":"ParameterList","parameters":[],"src":"846:2:6"},"returnParameters":{"id":1952,"nodeType":"ParameterList","parameters":[],"src":"875:0:6"},"scope":1981,"src":"813:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1962,"nodeType":"Block","src":"949:34:6","statements":[{"expression":{"expression":{"id":1959,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:6","memberName":"sender","nodeType":"MemberAccess","src":"966:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1958,"id":1961,"nodeType":"Return","src":"959:17:6"}]},"id":1963,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:6","nodeType":"FunctionDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[],"src":"906:2:6"},"returnParameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1963,"src":"940:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:6"},"scope":1981,"src":"887:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1971,"nodeType":"Block","src":"1056:32:6","statements":[{"expression":{"expression":{"id":1968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:6","memberName":"data","nodeType":"MemberAccess","src":"1073:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1967,"id":1970,"nodeType":"Return","src":"1066:15:6"}]},"id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:6","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[],"src":"1006:2:6"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1972,"src":"1040:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1965,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:6"},"scope":1981,"src":"989:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1979,"nodeType":"Block","src":"1166:25:6","statements":[{"expression":{"hexValue":"30","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1976,"id":1978,"nodeType":"Return","src":"1176:8:6"}]},"id":1980,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:6","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[],"src":"1123:2:6"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1980,"src":"1157:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:6"},"scope":1981,"src":"1094:97:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1982,"src":"688:505:6","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1981],"Initializable":[462],"PausableUpgradeable":[2141]},"id":2142,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1983,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1985,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2142,"sourceUnit":1982,"src":"128:67:7","symbolAliases":[{"foreign":{"id":1984,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"136:18:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1987,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2142,"sourceUnit":463,"src":"196:63:7","symbolAliases":[{"foreign":{"id":1986,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"204:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1989,"name":"Initializable","nameLocations":["742:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"742:13:7"},"id":1990,"nodeType":"InheritanceSpecifier","src":"742:13:7"},{"baseName":{"id":1991,"name":"ContextUpgradeable","nameLocations":["757:18:7"],"nodeType":"IdentifierPath","referencedDeclaration":1981,"src":"757:18:7"},"id":1992,"nodeType":"InheritanceSpecifier","src":"757:18:7"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1988,"nodeType":"StructuredDocumentation","src":"261:439:7","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2141,"linearizedBaseContracts":[2141,1981,462],"name":"PausableUpgradeable","nameLocation":"719:19:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"782:66:7","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":1996,"members":[{"constant":false,"id":1995,"mutability":"mutable","name":"_paused","nameLocation":"891:7:7","nodeType":"VariableDeclaration","scope":1996,"src":"886:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1994,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:7","nodeType":"StructDefinition","scope":2141,"src":"853:52:7","visibility":"public"},{"constant":true,"id":1999,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:7","nodeType":"VariableDeclaration","scope":2141,"src":"1023:117:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:7","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":2006,"nodeType":"Block","src":"1227:82:7","statements":[{"AST":{"nativeSrc":"1246:57:7","nodeType":"YulBlock","src":"1246:57:7","statements":[{"nativeSrc":"1260:33:7","nodeType":"YulAssignment","src":"1260:33:7","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:7","nodeType":"YulIdentifier","src":"1270:23:7"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:7","nodeType":"YulIdentifier","src":"1260:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2003,"isOffset":false,"isSlot":true,"src":"1260:6:7","suffix":"slot","valueSize":1},{"declaration":1999,"isOffset":false,"isSlot":false,"src":"1270:23:7","valueSize":1}],"id":2005,"nodeType":"InlineAssembly","src":"1237:66:7"}]},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:7","nodeType":"FunctionDefinition","parameters":{"id":2000,"nodeType":"ParameterList","parameters":[],"src":"1175:2:7"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"$","nameLocation":"1224:1:7","nodeType":"VariableDeclaration","scope":2007,"src":"1200:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2002,"nodeType":"UserDefinedTypeName","pathNode":{"id":2001,"name":"PausableStorage","nameLocations":["1200:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1996,"src":"1200:15:7"},"referencedDeclaration":1996,"src":"1200:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:7"},"scope":2141,"src":"1147:162:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"1315:73:7","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2012,"name":"Paused","nameLocation":"1399:6:7","nodeType":"EventDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:7","nodeType":"VariableDeclaration","scope":2012,"src":"1406:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2009,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:7"},"src":"1393:30:7"},{"anonymous":false,"documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"1429:70:7","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2017,"name":"Unpaused","nameLocation":"1510:8:7","nodeType":"EventDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:7","nodeType":"VariableDeclaration","scope":2017,"src":"1519:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2014,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:7"},"src":"1504:32:7"},{"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"1542:76:7","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2020,"name":"EnforcedPause","nameLocation":"1629:13:7","nodeType":"ErrorDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[],"src":"1642:2:7"},"src":"1623:22:7"},{"documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"1651:80:7","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2023,"name":"ExpectedPause","nameLocation":"1742:13:7","nodeType":"ErrorDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[],"src":"1755:2:7"},"src":"1736:22:7"},{"body":{"id":2030,"nodeType":"Block","src":"1969:47:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2026,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1979:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2028,"nodeType":"ExpressionStatement","src":"1979:19:7"},{"id":2029,"nodeType":"PlaceholderStatement","src":"2008:1:7"}]},"documentation":{"id":2024,"nodeType":"StructuredDocumentation","src":"1764:175:7","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2031,"name":"whenNotPaused","nameLocation":"1953:13:7","nodeType":"ModifierDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[],"src":"1966:2:7"},"src":"1944:72:7","virtual":false,"visibility":"internal"},{"body":{"id":2038,"nodeType":"Block","src":"2216:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2034,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"2226:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2036,"nodeType":"ExpressionStatement","src":"2226:16:7"},{"id":2037,"nodeType":"PlaceholderStatement","src":"2252:1:7"}]},"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"2022:167:7","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2039,"name":"whenPaused","nameLocation":"2203:10:7","nodeType":"ModifierDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[],"src":"2213:2:7"},"src":"2194:66:7","virtual":false,"visibility":"internal"},{"body":{"id":2044,"nodeType":"Block","src":"2319:7:7","statements":[]},"id":2045,"implemented":true,"kind":"function","modifiers":[{"id":2042,"kind":"modifierInvocation","modifierName":{"id":2041,"name":"onlyInitializing","nameLocations":["2302:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2302:16:7"},"nodeType":"ModifierInvocation","src":"2302:16:7"}],"name":"__Pausable_init","nameLocation":"2275:15:7","nodeType":"FunctionDefinition","parameters":{"id":2040,"nodeType":"ParameterList","parameters":[],"src":"2290:2:7"},"returnParameters":{"id":2043,"nodeType":"ParameterList","parameters":[],"src":"2319:0:7"},"scope":2141,"src":"2266:60:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"2395:7:7","statements":[]},"id":2051,"implemented":true,"kind":"function","modifiers":[{"id":2048,"kind":"modifierInvocation","modifierName":{"id":2047,"name":"onlyInitializing","nameLocations":["2378:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2378:16:7"},"nodeType":"ModifierInvocation","src":"2378:16:7"}],"name":"__Pausable_init_unchained","nameLocation":"2341:25:7","nodeType":"FunctionDefinition","parameters":{"id":2046,"nodeType":"ParameterList","parameters":[],"src":"2366:2:7"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[],"src":"2395:0:7"},"scope":2141,"src":"2332:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2066,"nodeType":"Block","src":"2549:92:7","statements":[{"assignments":[2059],"declarations":[{"constant":false,"id":2059,"mutability":"mutable","name":"$","nameLocation":"2583:1:7","nodeType":"VariableDeclaration","scope":2066,"src":"2559:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2058,"nodeType":"UserDefinedTypeName","pathNode":{"id":2057,"name":"PausableStorage","nameLocations":["2559:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1996,"src":"2559:15:7"},"referencedDeclaration":1996,"src":"2559:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2062,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2060,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2587:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1996_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2559:49:7"},{"expression":{"expression":{"id":2063,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2625:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2627:7:7","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1995,"src":"2625:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2056,"id":2065,"nodeType":"Return","src":"2618:16:7"}]},"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"2407:84:7","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2067,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2505:6:7","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[],"src":"2511:2:7"},"returnParameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2067,"src":"2543:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2054,"name":"bool","nodeType":"ElementaryTypeName","src":"2543:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2542:6:7"},"scope":2141,"src":"2496:145:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2078,"nodeType":"Block","src":"2760:77:7","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2071,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2774:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2774:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2077,"nodeType":"IfStatement","src":"2770:61:7","trueBody":{"id":2076,"nodeType":"Block","src":"2784:47:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2073,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"2805:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2805:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2075,"nodeType":"RevertStatement","src":"2798:22:7"}]}}]},"documentation":{"id":2068,"nodeType":"StructuredDocumentation","src":"2647:57:7","text":" @dev Throws if the contract is paused."},"id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2718:17:7","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[],"src":"2735:2:7"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[],"src":"2760:0:7"},"scope":2141,"src":"2709:128:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2091,"nodeType":"Block","src":"2957:78:7","statements":[{"condition":{"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2971:9:7","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2083,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2972:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2090,"nodeType":"IfStatement","src":"2967:62:7","trueBody":{"id":2089,"nodeType":"Block","src":"2982:47:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2086,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"3003:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3003:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2088,"nodeType":"RevertStatement","src":"2996:22:7"}]}}]},"documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"2843:61:7","text":" @dev Throws if the contract is not paused."},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2918:14:7","nodeType":"FunctionDefinition","parameters":{"id":2081,"nodeType":"ParameterList","parameters":[],"src":"2932:2:7"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[],"src":"2957:0:7"},"scope":2141,"src":"2909:126:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2115,"nodeType":"Block","src":"3219:127:7","statements":[{"assignments":[2100],"declarations":[{"constant":false,"id":2100,"mutability":"mutable","name":"$","nameLocation":"3253:1:7","nodeType":"VariableDeclaration","scope":2115,"src":"3229:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2099,"nodeType":"UserDefinedTypeName","pathNode":{"id":2098,"name":"PausableStorage","nameLocations":["3229:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1996,"src":"3229:15:7"},"referencedDeclaration":1996,"src":"3229:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2103,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2101,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"3257:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1996_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3229:49:7"},{"expression":{"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2104,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"3288:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3290:7:7","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1995,"src":"3288:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3300:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3288:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2109,"nodeType":"ExpressionStatement","src":"3288:16:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3326:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2110,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"3319:6:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2114,"nodeType":"EmitStatement","src":"3314:25:7"}]},"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"3041:124:7","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2116,"implemented":true,"kind":"function","modifiers":[{"id":2096,"kind":"modifierInvocation","modifierName":{"id":2095,"name":"whenNotPaused","nameLocations":["3205:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":2031,"src":"3205:13:7"},"nodeType":"ModifierInvocation","src":"3205:13:7"}],"name":"_pause","nameLocation":"3179:6:7","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[],"src":"3185:2:7"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[],"src":"3219:0:7"},"scope":2141,"src":"3170:176:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2139,"nodeType":"Block","src":"3526:130:7","statements":[{"assignments":[2124],"declarations":[{"constant":false,"id":2124,"mutability":"mutable","name":"$","nameLocation":"3560:1:7","nodeType":"VariableDeclaration","scope":2139,"src":"3536:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2123,"nodeType":"UserDefinedTypeName","pathNode":{"id":2122,"name":"PausableStorage","nameLocations":["3536:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1996,"src":"3536:15:7"},"referencedDeclaration":1996,"src":"3536:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2127,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2125,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"3564:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1996_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3536:49:7"},{"expression":{"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2128,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"3595:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1996_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3597:7:7","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1995,"src":"3595:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3607:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3595:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2133,"nodeType":"ExpressionStatement","src":"3595:17:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2135,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3636:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2134,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3627:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3627:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2138,"nodeType":"EmitStatement","src":"3622:27:7"}]},"documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"3352:121:7","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2140,"implemented":true,"kind":"function","modifiers":[{"id":2120,"kind":"modifierInvocation","modifierName":{"id":2119,"name":"whenPaused","nameLocations":["3515:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":2039,"src":"3515:10:7"},"nodeType":"ModifierInvocation","src":"3515:10:7"}],"name":"_unpause","nameLocation":"3487:8:7","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[],"src":"3495:2:7"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[],"src":"3526:0:7"},"scope":2141,"src":"3478:178:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2142,"src":"701:2957:7","usedErrors":[211,214,2020,2023],"usedEvents":[219,2012,2017]}],"src":"102:3557:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[2181],"IERC165":[5900],"Initializable":[462]},"id":2182,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2143,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2182,"sourceUnit":5901,"src":"140:80:8","symbolAliases":[{"foreign":{"id":2144,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"148:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2182,"sourceUnit":463,"src":"221:66:8","symbolAliases":[{"foreign":{"id":2146,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"229:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2149,"name":"Initializable","nameLocations":["808:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"808:13:8"},"id":2150,"nodeType":"InheritanceSpecifier","src":"808:13:8"},{"baseName":{"id":2151,"name":"IERC165","nameLocations":["823:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":5900,"src":"823:7:8"},"id":2152,"nodeType":"InheritanceSpecifier","src":"823:7:8"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2148,"nodeType":"StructuredDocumentation","src":"289:479:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2181,"linearizedBaseContracts":[2181,5900,462],"name":"ERC165Upgradeable","nameLocation":"787:17:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":2157,"nodeType":"Block","src":"888:7:8","statements":[]},"id":2158,"implemented":true,"kind":"function","modifiers":[{"id":2155,"kind":"modifierInvocation","modifierName":{"id":2154,"name":"onlyInitializing","nameLocations":["871:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"871:16:8"},"nodeType":"ModifierInvocation","src":"871:16:8"}],"name":"__ERC165_init","nameLocation":"846:13:8","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[],"src":"859:2:8"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[],"src":"888:0:8"},"scope":2181,"src":"837:58:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2163,"nodeType":"Block","src":"962:7:8","statements":[]},"id":2164,"implemented":true,"kind":"function","modifiers":[{"id":2161,"kind":"modifierInvocation","modifierName":{"id":2160,"name":"onlyInitializing","nameLocations":["945:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"945:16:8"},"nodeType":"ModifierInvocation","src":"945:16:8"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:8","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[],"src":"933:2:8"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"962:0:8"},"scope":2181,"src":"901:68:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5899],"body":{"id":2179,"nodeType":"Block","src":"1117:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2172,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"1134:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2174,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"1154:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5900_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5900_$","typeString":"type(contract IERC165)"}],"id":2173,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5900","typeString":"type(contract IERC165)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2171,"id":2178,"nodeType":"Return","src":"1127:47:8"}]},"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"974:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:8","nodeType":"FunctionDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:8","nodeType":"VariableDeclaration","scope":2180,"src":"1062:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2166,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:8"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2180,"src":"1111:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2169,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:8"},"scope":2181,"src":"1035:146:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2182,"src":"769:414:8","usedErrors":[211,214],"usedEvents":[219]}],"src":"114:1070:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[2202]},"id":2203,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2183,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"133:101:9","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":2202,"linearizedBaseContracts":[2202],"name":"IERC1967","nameLocation":"245:8:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2185,"nodeType":"StructuredDocumentation","src":"260:68:9","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":2189,"name":"Upgraded","nameLocation":"339:8:9","nodeType":"EventDefinition","parameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"364:14:9","nodeType":"VariableDeclaration","scope":2189,"src":"348:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"347:32:9"},"src":"333:47:9"},{"anonymous":false,"documentation":{"id":2190,"nodeType":"StructuredDocumentation","src":"386:67:9","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":2196,"name":"AdminChanged","nameLocation":"464:12:9","nodeType":"EventDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"485:13:9","nodeType":"VariableDeclaration","scope":2196,"src":"477:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2194,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"508:8:9","nodeType":"VariableDeclaration","scope":2196,"src":"500:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2193,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:41:9"},"src":"458:60:9"},{"anonymous":false,"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"524:59:9","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":2201,"name":"BeaconUpgraded","nameLocation":"594:14:9","nodeType":"EventDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"625:6:9","nodeType":"VariableDeclaration","scope":2201,"src":"609:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"608:24:9"},"src":"588:45:9"}],"scope":2203,"src":"235:400:9","usedErrors":[],"usedEvents":[2189,2196,2201]}],"src":"107:529:9"},"id":9},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[2212]},"id":2213,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2204,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"139:204:10","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":2212,"linearizedBaseContracts":[2212],"name":"IERC1822Proxiable","nameLocation":"354:17:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"378:438:10","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":2211,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"830:13:10","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[],"src":"843:2:10"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2211,"src":"869:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"869:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"868:9:10"},"scope":2212,"src":"821:57:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2213,"src":"344:536:10","usedErrors":[],"usedEvents":[]}],"src":"113:768:10"},"id":10},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[2349],"IERC20Errors":[2254],"IERC721Errors":[2302]},"id":2350,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2214,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2215,"nodeType":"StructuredDocumentation","src":"138:141:11","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":2254,"linearizedBaseContracts":[2254],"name":"IERC20Errors","nameLocation":"290:12:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2216,"nodeType":"StructuredDocumentation","src":"309:309:11","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":2224,"name":"ERC20InsufficientBalance","nameLocation":"629:24:11","nodeType":"ErrorDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"sender","nameLocation":"662:6:11","nodeType":"VariableDeclaration","scope":2224,"src":"654:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2217,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"balance","nameLocation":"678:7:11","nodeType":"VariableDeclaration","scope":2224,"src":"670:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"needed","nameLocation":"695:6:11","nodeType":"VariableDeclaration","scope":2224,"src":"687:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:11"},"src":"623:80:11"},{"documentation":{"id":2225,"nodeType":"StructuredDocumentation","src":"709:152:11","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":2229,"name":"ERC20InvalidSender","nameLocation":"872:18:11","nodeType":"ErrorDefinition","parameters":{"id":2228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"sender","nameLocation":"899:6:11","nodeType":"VariableDeclaration","scope":2229,"src":"891:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2226,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:11"},"src":"866:41:11"},{"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"913:159:11","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":2234,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:11","nodeType":"ErrorDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:11","nodeType":"VariableDeclaration","scope":2234,"src":"1104:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2231,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:11"},"src":"1077:45:11"},{"documentation":{"id":2235,"nodeType":"StructuredDocumentation","src":"1128:345:11","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":2243,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:11","nodeType":"ErrorDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"spender","nameLocation":"1519:7:11","nodeType":"VariableDeclaration","scope":2243,"src":"1511:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:11","nodeType":"VariableDeclaration","scope":2243,"src":"1528:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"needed","nameLocation":"1555:6:11","nodeType":"VariableDeclaration","scope":2243,"src":"1547:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:11"},"src":"1478:85:11"},{"documentation":{"id":2244,"nodeType":"StructuredDocumentation","src":"1569:174:11","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":2248,"name":"ERC20InvalidApprover","nameLocation":"1754:20:11","nodeType":"ErrorDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"approver","nameLocation":"1783:8:11","nodeType":"VariableDeclaration","scope":2248,"src":"1775:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:11"},"src":"1748:45:11"},{"documentation":{"id":2249,"nodeType":"StructuredDocumentation","src":"1799:195:11","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":2253,"name":"ERC20InvalidSpender","nameLocation":"2005:19:11","nodeType":"ErrorDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"spender","nameLocation":"2033:7:11","nodeType":"VariableDeclaration","scope":2253,"src":"2025:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2250,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:11"},"src":"1999:43:11"}],"scope":2350,"src":"280:1764:11","usedErrors":[2224,2229,2234,2243,2248,2253],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2255,"nodeType":"StructuredDocumentation","src":"2046:143:11","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":2302,"linearizedBaseContracts":[2302],"name":"IERC721Errors","nameLocation":"2200:13:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"2220:219:11","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":2260,"name":"ERC721InvalidOwner","nameLocation":"2450:18:11","nodeType":"ErrorDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"owner","nameLocation":"2477:5:11","nodeType":"VariableDeclaration","scope":2260,"src":"2469:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:11"},"src":"2444:40:11"},{"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"2490:132:11","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":2265,"name":"ERC721NonexistentToken","nameLocation":"2633:22:11","nodeType":"ErrorDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:11","nodeType":"VariableDeclaration","scope":2265,"src":"2656:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:11"},"src":"2627:46:11"},{"documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"2679:289:11","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":2274,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:11","nodeType":"ErrorDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"sender","nameLocation":"3008:6:11","nodeType":"VariableDeclaration","scope":2274,"src":"3000:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:11","nodeType":"VariableDeclaration","scope":2274,"src":"3016:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"owner","nameLocation":"3041:5:11","nodeType":"VariableDeclaration","scope":2274,"src":"3033:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:11"},"src":"2973:75:11"},{"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"3054:152:11","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":2279,"name":"ERC721InvalidSender","nameLocation":"3217:19:11","nodeType":"ErrorDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"sender","nameLocation":"3245:6:11","nodeType":"VariableDeclaration","scope":2279,"src":"3237:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:11"},"src":"3211:42:11"},{"documentation":{"id":2280,"nodeType":"StructuredDocumentation","src":"3259:159:11","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":2284,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:11","nodeType":"ErrorDefinition","parameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:11","nodeType":"VariableDeclaration","scope":2284,"src":"3451:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2281,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:11"},"src":"3423:46:11"},{"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"3475:247:11","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":2291,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:11","nodeType":"ErrorDefinition","parameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"operator","nameLocation":"3768:8:11","nodeType":"VariableDeclaration","scope":2291,"src":"3760:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2289,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:11","nodeType":"VariableDeclaration","scope":2291,"src":"3778:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2288,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:11"},"src":"3727:68:11"},{"documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"3801:174:11","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":2296,"name":"ERC721InvalidApprover","nameLocation":"3986:21:11","nodeType":"ErrorDefinition","parameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"approver","nameLocation":"4016:8:11","nodeType":"VariableDeclaration","scope":2296,"src":"4008:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:11"},"src":"3980:46:11"},{"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"4032:197:11","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":2301,"name":"ERC721InvalidOperator","nameLocation":"4240:21:11","nodeType":"ErrorDefinition","parameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"operator","nameLocation":"4270:8:11","nodeType":"VariableDeclaration","scope":2301,"src":"4262:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2298,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:11"},"src":"4234:46:11"}],"scope":2350,"src":"2190:2092:11","usedErrors":[2260,2265,2274,2279,2284,2291,2296,2301],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"4284:145:11","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":2349,"linearizedBaseContracts":[2349],"name":"IERC1155Errors","nameLocation":"4440:14:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"4461:361:11","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":2314,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:11","nodeType":"ErrorDefinition","parameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"sender","nameLocation":"4868:6:11","nodeType":"VariableDeclaration","scope":2314,"src":"4860:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2305,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2308,"mutability":"mutable","name":"balance","nameLocation":"4884:7:11","nodeType":"VariableDeclaration","scope":2314,"src":"4876:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2310,"mutability":"mutable","name":"needed","nameLocation":"4901:6:11","nodeType":"VariableDeclaration","scope":2314,"src":"4893:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:11","nodeType":"VariableDeclaration","scope":2314,"src":"4909:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:11"},"src":"4827:99:11"},{"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"4932:152:11","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":2319,"name":"ERC1155InvalidSender","nameLocation":"5095:20:11","nodeType":"ErrorDefinition","parameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"sender","nameLocation":"5124:6:11","nodeType":"VariableDeclaration","scope":2319,"src":"5116:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2316,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:11"},"src":"5089:43:11"},{"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"5138:159:11","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":2324,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:11","nodeType":"ErrorDefinition","parameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:11","nodeType":"VariableDeclaration","scope":2324,"src":"5331:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2321,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:11"},"src":"5302:47:11"},{"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"5355:256:11","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":2331,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:11","nodeType":"ErrorDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"operator","nameLocation":"5659:8:11","nodeType":"VariableDeclaration","scope":2331,"src":"5651:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2326,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2329,"mutability":"mutable","name":"owner","nameLocation":"5677:5:11","nodeType":"VariableDeclaration","scope":2331,"src":"5669:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2328,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:11"},"src":"5616:68:11"},{"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"5690:174:11","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":2336,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:11","nodeType":"ErrorDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"approver","nameLocation":"5906:8:11","nodeType":"VariableDeclaration","scope":2336,"src":"5898:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:11"},"src":"5869:47:11"},{"documentation":{"id":2337,"nodeType":"StructuredDocumentation","src":"5922:197:11","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":2341,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:11","nodeType":"ErrorDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"operator","nameLocation":"6161:8:11","nodeType":"VariableDeclaration","scope":2341,"src":"6153:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:11"},"src":"6124:47:11"},{"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"6177:280:11","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":2348,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:11","nodeType":"ErrorDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:11","nodeType":"VariableDeclaration","scope":2348,"src":"6494:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:11","nodeType":"VariableDeclaration","scope":2348,"src":"6513:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:11"},"src":"6462:73:11"}],"scope":2350,"src":"4430:2107:11","usedErrors":[2314,2319,2324,2331,2336,2341,2348],"usedEvents":[]}],"src":"112:6426:11"},"id":11},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[3248],"ERC1967Utils":[2643],"IBeacon":[2653],"IERC1967":[2202],"StorageSlot":[4486]},"id":2644,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2351,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"114:24:12"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":2353,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2644,"sourceUnit":2654,"src":"140:46:12","symbolAliases":[{"foreign":{"id":2352,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"148:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":2355,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2644,"sourceUnit":2203,"src":"187:55:12","symbolAliases":[{"foreign":{"id":2354,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"195:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":2357,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2644,"sourceUnit":3249,"src":"243:48:12","symbolAliases":[{"foreign":{"id":2356,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"251:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":2359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2644,"sourceUnit":4487,"src":"292:56:12","symbolAliases":[{"foreign":{"id":2358,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"300:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"350:145:12","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":2643,"linearizedBaseContracts":[2643],"name":"ERC1967Utils","nameLocation":"504:12:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"523:170:12","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":2364,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:12","nodeType":"VariableDeclaration","scope":2643,"src":"763:114:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:12","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":2365,"nodeType":"StructuredDocumentation","src":"884:69:12","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":2369,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:12","nodeType":"ErrorDefinition","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:12","nodeType":"VariableDeclaration","scope":2369,"src":"993:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2366,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:12"},"src":"958:59:12"},{"documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"1023:60:12","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":2374,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:12","nodeType":"ErrorDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"admin","nameLocation":"1122:5:12","nodeType":"VariableDeclaration","scope":2374,"src":"1114:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2371,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:12"},"src":"1088:41:12"},{"documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"1135:61:12","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":2379,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:12","nodeType":"ErrorDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:12","nodeType":"VariableDeclaration","scope":2379,"src":"1228:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2376,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:12"},"src":"1201:43:12"},{"documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"1250:82:12","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":2382,"name":"ERC1967NonPayable","nameLocation":"1343:17:12","nodeType":"ErrorDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[],"src":"1360:2:12"},"src":"1337:26:12"},{"body":{"id":2394,"nodeType":"Block","src":"1502:77:12","statements":[{"expression":{"expression":{"arguments":[{"id":2390,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"1546:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2388,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1519:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4486_$","typeString":"type(library StorageSlot)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4397,"src":"1519:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4368_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4368_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4367,"src":"1519:53:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2387,"id":2393,"nodeType":"Return","src":"1512:60:12"}]},"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"1369:67:12","text":" @dev Returns the current implementation address."},"id":2395,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:12","nodeType":"FunctionDefinition","parameters":{"id":2384,"nodeType":"ParameterList","parameters":[],"src":"1467:2:12"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"1493:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2385,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:12"},"scope":2643,"src":"1441:138:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2421,"nodeType":"Block","src":"1734:218:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2401,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"1748:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:12","memberName":"code","nodeType":"MemberAccess","src":"1748:22:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:12","memberName":"length","nodeType":"MemberAccess","src":"1748:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2411,"nodeType":"IfStatement","src":"1744:119:12","trueBody":{"id":2410,"nodeType":"Block","src":"1784:79:12","statements":[{"errorCall":{"arguments":[{"id":2407,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"1834:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2406,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"1805:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2409,"nodeType":"RevertStatement","src":"1798:54:12"}]}},{"expression":{"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2415,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"1899:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2412,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1872:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4486_$","typeString":"type(library StorageSlot)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4397,"src":"1872:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4368_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4368_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4367,"src":"1872:53:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2418,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"1928:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2420,"nodeType":"ExpressionStatement","src":"1872:73:12"}]},"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"1585:81:12","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":2422,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:12","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:12","nodeType":"VariableDeclaration","scope":2422,"src":"1699:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:12"},"returnParameters":{"id":2400,"nodeType":"ParameterList","parameters":[],"src":"1734:0:12"},"scope":2643,"src":"1671:281:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2457,"nodeType":"Block","src":"2345:263:12","statements":[{"expression":{"arguments":[{"id":2431,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"2374:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2430,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"2355:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2433,"nodeType":"ExpressionStatement","src":"2355:37:12"},{"eventCall":{"arguments":[{"id":2437,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"2425:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2434,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"2407:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2202_$","typeString":"type(contract IERC1967)"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:12","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":2189,"src":"2407:17:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2439,"nodeType":"EmitStatement","src":"2402:41:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2440,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"2458:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:12","memberName":"length","nodeType":"MemberAccess","src":"2458:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2455,"nodeType":"Block","src":"2559:43:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2452,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"2573:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2454,"nodeType":"ExpressionStatement","src":"2573:18:12"}]},"id":2456,"nodeType":"IfStatement","src":"2454:148:12","trueBody":{"id":2451,"nodeType":"Block","src":"2475:78:12","statements":[{"expression":{"arguments":[{"id":2447,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"2518:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2448,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"2537:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2444,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"2489:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3248_$","typeString":"type(library Address)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:12","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3165,"src":"2489:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2450,"nodeType":"ExpressionStatement","src":"2489:53:12"}]}}]},"documentation":{"id":2423,"nodeType":"StructuredDocumentation","src":"1958:301:12","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:12","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:12","nodeType":"VariableDeclaration","scope":2458,"src":"2290:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2424,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"data","nameLocation":"2330:4:12","nodeType":"VariableDeclaration","scope":2458,"src":"2317:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2426,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:12"},"returnParameters":{"id":2429,"nodeType":"ParameterList","parameters":[],"src":"2345:0:12"},"scope":2643,"src":"2264:344:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"2614:145:12","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":2462,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:12","nodeType":"VariableDeclaration","scope":2643,"src":"2829:105:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:12","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":2474,"nodeType":"Block","src":"3339:68:12","statements":[{"expression":{"expression":{"arguments":[{"id":2470,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"3383:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2468,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"3356:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4486_$","typeString":"type(library StorageSlot)"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4397,"src":"3356:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4368_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4368_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4367,"src":"3356:44:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2467,"id":2473,"nodeType":"Return","src":"3349:51:12"}]},"documentation":{"id":2463,"nodeType":"StructuredDocumentation","src":"2941:341:12","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":2475,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:12","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[],"src":"3304:2:12"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2475,"src":"3330:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2465,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:12"},"scope":2643,"src":"3287:120:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2505,"nodeType":"Block","src":"3535:172:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2481,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"3549:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2482,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:12","typeDescriptions":{}}},"id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2495,"nodeType":"IfStatement","src":"3545:91:12","trueBody":{"id":2494,"nodeType":"Block","src":"3573:63:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2488,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:12","typeDescriptions":{}}},"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2487,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"3594:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2493,"nodeType":"RevertStatement","src":"3587:38:12"}]}},{"expression":{"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2499,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"3672:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2496,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"3645:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4486_$","typeString":"type(library StorageSlot)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4397,"src":"3645:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4368_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4368_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4367,"src":"3645:44:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2502,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"3692:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2504,"nodeType":"ExpressionStatement","src":"3645:55:12"}]},"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"3413:72:12","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:12","nodeType":"FunctionDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:12","nodeType":"VariableDeclaration","scope":2506,"src":"3509:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:12"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"3535:0:12"},"scope":2643,"src":"3490:217:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2524,"nodeType":"Block","src":"3875:94:12","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2515,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"3912:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2517,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"3924:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2512,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"3890:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2202_$","typeString":"type(contract IERC1967)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:12","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":2196,"src":"3890:21:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2519,"nodeType":"EmitStatement","src":"3885:48:12"},{"expression":{"arguments":[{"id":2521,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"3953:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2520,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3943:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2523,"nodeType":"ExpressionStatement","src":"3943:19:12"}]},"documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"3713:109:12","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":2525,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:12","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:12","nodeType":"VariableDeclaration","scope":2525,"src":"3848:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2508,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:12"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[],"src":"3875:0:12"},"scope":2643,"src":"3827:142:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2526,"nodeType":"StructuredDocumentation","src":"3975:201:12","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":2529,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:12","nodeType":"VariableDeclaration","scope":2643,"src":"4246:106:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:12","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":2541,"nodeType":"Block","src":"4468:69:12","statements":[{"expression":{"expression":{"arguments":[{"id":2537,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"4512:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2535,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"4485:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4486_$","typeString":"type(library StorageSlot)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4397,"src":"4485:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4368_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4368_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4367,"src":"4485:45:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2534,"id":2540,"nodeType":"Return","src":"4478:52:12"}]},"documentation":{"id":2530,"nodeType":"StructuredDocumentation","src":"4359:51:12","text":" @dev Returns the current beacon."},"id":2542,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:12","nodeType":"FunctionDefinition","parameters":{"id":2531,"nodeType":"ParameterList","parameters":[],"src":"4433:2:12"},"returnParameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2542,"src":"4459:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2532,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:12"},"scope":2643,"src":"4415:122:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2587,"nodeType":"Block","src":"4667:390:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2548,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"4681:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:12","memberName":"code","nodeType":"MemberAccess","src":"4681:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:12","memberName":"length","nodeType":"MemberAccess","src":"4681:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2558,"nodeType":"IfStatement","src":"4677:95:12","trueBody":{"id":2557,"nodeType":"Block","src":"4709:63:12","statements":[{"errorCall":{"arguments":[{"id":2554,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"4751:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2553,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"4730:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2556,"nodeType":"RevertStatement","src":"4723:38:12"}]}},{"expression":{"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2562,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"4809:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2559,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"4782:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4486_$","typeString":"type(library StorageSlot)"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4397,"src":"4782:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4368_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4368_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4367,"src":"4782:45:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2565,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"4830:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2567,"nodeType":"ExpressionStatement","src":"4782:57:12"},{"assignments":[2569],"declarations":[{"constant":false,"id":2569,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:12","nodeType":"VariableDeclaration","scope":2587,"src":"4850:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2568,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2575,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2571,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"4889:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2570,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"4881:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2653_$","typeString":"type(contract IBeacon)"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2653","typeString":"contract IBeacon"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:12","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2652,"src":"4881:33:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2576,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"4930:20:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:12","memberName":"code","nodeType":"MemberAccess","src":"4930:25:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:12","memberName":"length","nodeType":"MemberAccess","src":"4930:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2586,"nodeType":"IfStatement","src":"4926:125:12","trueBody":{"id":2585,"nodeType":"Block","src":"4969:82:12","statements":[{"errorCall":{"arguments":[{"id":2582,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"5019:20:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2581,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"4990:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2584,"nodeType":"RevertStatement","src":"4983:57:12"}]}}]},"documentation":{"id":2543,"nodeType":"StructuredDocumentation","src":"4543:72:12","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":2588,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:12","nodeType":"FunctionDefinition","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:12","nodeType":"VariableDeclaration","scope":2588,"src":"4640:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:12"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[],"src":"4667:0:12"},"scope":2643,"src":"4620:437:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2627,"nodeType":"Block","src":"5661:263:12","statements":[{"expression":{"arguments":[{"id":2597,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"5682:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2596,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"5671:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2599,"nodeType":"ExpressionStatement","src":"5671:21:12"},{"eventCall":{"arguments":[{"id":2603,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"5731:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2600,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"5707:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2202_$","typeString":"type(contract IERC1967)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:12","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":2201,"src":"5707:23:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2605,"nodeType":"EmitStatement","src":"5702:39:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2606,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"5756:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:12","memberName":"length","nodeType":"MemberAccess","src":"5756:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2625,"nodeType":"Block","src":"5875:43:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2622,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"5889:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2624,"nodeType":"ExpressionStatement","src":"5889:18:12"}]},"id":2626,"nodeType":"IfStatement","src":"5752:166:12","trueBody":{"id":2621,"nodeType":"Block","src":"5773:96:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2614,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"5824:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2613,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"5816:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2653_$","typeString":"type(contract IBeacon)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2653","typeString":"contract IBeacon"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:12","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2652,"src":"5816:33:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2618,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"5853:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2610,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"5787:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3248_$","typeString":"type(library Address)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:12","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3165,"src":"5787:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2620,"nodeType":"ExpressionStatement","src":"5787:71:12"}]}}]},"documentation":{"id":2589,"nodeType":"StructuredDocumentation","src":"5063:514:12","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":2628,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:12","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2591,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:12","nodeType":"VariableDeclaration","scope":2628,"src":"5614:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2590,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2593,"mutability":"mutable","name":"data","nameLocation":"5646:4:12","nodeType":"VariableDeclaration","scope":2628,"src":"5633:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2592,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:12"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"5661:0:12"},"scope":2643,"src":"5582:342:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2641,"nodeType":"Block","src":"6149:86:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:12","memberName":"value","nodeType":"MemberAccess","src":"6163:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2640,"nodeType":"IfStatement","src":"6159:70:12","trueBody":{"id":2639,"nodeType":"Block","src":"6178:51:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2636,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"6199:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2638,"nodeType":"RevertStatement","src":"6192:26:12"}]}}]},"documentation":{"id":2629,"nodeType":"StructuredDocumentation","src":"5930:178:12","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:12","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[],"src":"6138:2:12"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[],"src":"6149:0:12"},"scope":2643,"src":"6113:122:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2644,"src":"496:5741:12","usedErrors":[2369,2374,2379,2382],"usedEvents":[]}],"src":"114:6124:12"},"id":12},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[2653]},"id":2654,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2645,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"134:79:13","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":2653,"linearizedBaseContracts":[2653],"name":"IBeacon","nameLocation":"224:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2647,"nodeType":"StructuredDocumentation","src":"238:168:13","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":2652,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:13","nodeType":"FunctionDefinition","parameters":{"id":2648,"nodeType":"ParameterList","parameters":[],"src":"434:2:13"},"returnParameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2652,"src":"460:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:13"},"scope":2653,"src":"411:58:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2654,"src":"214:257:13","usedErrors":[],"usedEvents":[]}],"src":"108:364:13"},"id":13},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[2776],"IERC165":[5900]},"id":2777,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2655,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2657,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2777,"sourceUnit":5901,"src":"136:62:14","symbolAliases":[{"foreign":{"id":2656,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"144:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2659,"name":"IERC165","nameLocations":["359:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":5900,"src":"359:7:14"},"id":2660,"nodeType":"InheritanceSpecifier","src":"359:7:14"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":2658,"nodeType":"StructuredDocumentation","src":"200:136:14","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":2776,"linearizedBaseContracts":[2776,5900],"name":"IERC1155","nameLocation":"347:8:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2661,"nodeType":"StructuredDocumentation","src":"373:125:14","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":2673,"name":"TransferSingle","nameLocation":"509:14:14","nodeType":"EventDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2663,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:14","nodeType":"VariableDeclaration","scope":2673,"src":"524:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2662,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2665,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:14","nodeType":"VariableDeclaration","scope":2673,"src":"550:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2664,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2667,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:14","nodeType":"VariableDeclaration","scope":2673,"src":"572:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2666,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2669,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:14","nodeType":"VariableDeclaration","scope":2673,"src":"592:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2671,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:14","nodeType":"VariableDeclaration","scope":2673,"src":"604:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:14"},"src":"503:116:14"},{"anonymous":false,"documentation":{"id":2674,"nodeType":"StructuredDocumentation","src":"625:144:14","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":2688,"name":"TransferBatch","nameLocation":"780:13:14","nodeType":"EventDefinition","parameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:14","nodeType":"VariableDeclaration","scope":2688,"src":"803:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2675,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2678,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:14","nodeType":"VariableDeclaration","scope":2688,"src":"837:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2677,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2680,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:14","nodeType":"VariableDeclaration","scope":2688,"src":"867:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2679,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2683,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:14","nodeType":"VariableDeclaration","scope":2688,"src":"895:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2682,"nodeType":"ArrayTypeName","src":"895:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2686,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:14","nodeType":"VariableDeclaration","scope":2688,"src":"918:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2684,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2685,"nodeType":"ArrayTypeName","src":"918:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:14"},"src":"774:167:14"},{"anonymous":false,"documentation":{"id":2689,"nodeType":"StructuredDocumentation","src":"947:147:14","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2697,"name":"ApprovalForAll","nameLocation":"1105:14:14","nodeType":"EventDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2691,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:14","nodeType":"VariableDeclaration","scope":2697,"src":"1120:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2690,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2693,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:14","nodeType":"VariableDeclaration","scope":2697,"src":"1145:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2692,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2695,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:14","nodeType":"VariableDeclaration","scope":2697,"src":"1171:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2694,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:14"},"src":"1099:87:14"},{"anonymous":false,"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"1192:343:14","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":2704,"name":"URI","nameLocation":"1546:3:14","nodeType":"EventDefinition","parameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:14","nodeType":"VariableDeclaration","scope":2704,"src":"1550:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2699,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2702,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:14","nodeType":"VariableDeclaration","scope":2704,"src":"1564:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:14"},"src":"1540:44:14"},{"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"1590:90:14","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":2714,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:14","nodeType":"FunctionDefinition","parameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"account","nameLocation":"1712:7:14","nodeType":"VariableDeclaration","scope":2714,"src":"1704:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2706,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2709,"mutability":"mutable","name":"id","nameLocation":"1729:2:14","nodeType":"VariableDeclaration","scope":2714,"src":"1721:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:14"},"returnParameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2714,"src":"1756:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:14"},"scope":2776,"src":"1685:80:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"1771:188:14","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":2727,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:14","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:14","nodeType":"VariableDeclaration","scope":2727,"src":"1997:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2717,"nodeType":"ArrayTypeName","src":"1997:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"ids","nameLocation":"2053:3:14","nodeType":"VariableDeclaration","scope":2727,"src":"2034:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2720,"nodeType":"ArrayTypeName","src":"2034:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:14"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2727,"src":"2086:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2724,"nodeType":"ArrayTypeName","src":"2086:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:14"},"scope":2776,"src":"1964:140:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"2110:254:14","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":2735,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:14","nodeType":"FunctionDefinition","parameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"operator","nameLocation":"2404:8:14","nodeType":"VariableDeclaration","scope":2735,"src":"2396:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2732,"mutability":"mutable","name":"approved","nameLocation":"2419:8:14","nodeType":"VariableDeclaration","scope":2735,"src":"2414:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2731,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:14"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[],"src":"2437:0:14"},"scope":2776,"src":"2369:69:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2736,"nodeType":"StructuredDocumentation","src":"2444:135:14","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":2745,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:14","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"account","nameLocation":"2618:7:14","nodeType":"VariableDeclaration","scope":2745,"src":"2610:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2737,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"operator","nameLocation":"2635:8:14","nodeType":"VariableDeclaration","scope":2745,"src":"2627:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2739,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:14"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2745,"src":"2668:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2742,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:14"},"scope":2776,"src":"2584:90:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2746,"nodeType":"StructuredDocumentation","src":"2680:927:14","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":2759,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:14","nodeType":"FunctionDefinition","parameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"from","nameLocation":"3646:4:14","nodeType":"VariableDeclaration","scope":2759,"src":"3638:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"to","nameLocation":"3660:2:14","nodeType":"VariableDeclaration","scope":2759,"src":"3652:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"id","nameLocation":"3672:2:14","nodeType":"VariableDeclaration","scope":2759,"src":"3664:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2754,"mutability":"mutable","name":"value","nameLocation":"3684:5:14","nodeType":"VariableDeclaration","scope":2759,"src":"3676:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2756,"mutability":"mutable","name":"data","nameLocation":"3706:4:14","nodeType":"VariableDeclaration","scope":2759,"src":"3691:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2755,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:14"},"returnParameters":{"id":2758,"nodeType":"ParameterList","parameters":[],"src":"3720:0:14"},"scope":2776,"src":"3612:109:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2760,"nodeType":"StructuredDocumentation","src":"3727:831:14","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":2775,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:14","nodeType":"FunctionDefinition","parameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"from","nameLocation":"4611:4:14","nodeType":"VariableDeclaration","scope":2775,"src":"4603:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"to","nameLocation":"4633:2:14","nodeType":"VariableDeclaration","scope":2775,"src":"4625:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2763,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2767,"mutability":"mutable","name":"ids","nameLocation":"4664:3:14","nodeType":"VariableDeclaration","scope":2775,"src":"4645:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2765,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2766,"nodeType":"ArrayTypeName","src":"4645:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"values","nameLocation":"4696:6:14","nodeType":"VariableDeclaration","scope":2775,"src":"4677:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2769,"nodeType":"ArrayTypeName","src":"4677:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2772,"mutability":"mutable","name":"data","nameLocation":"4727:4:14","nodeType":"VariableDeclaration","scope":2775,"src":"4712:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2771,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:14"},"returnParameters":{"id":2774,"nodeType":"ParameterList","parameters":[],"src":"4746:0:14"},"scope":2776,"src":"4563:184:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2777,"src":"337:4412:14","usedErrors":[],"usedEvents":[2673,2688,2697,2704]}],"src":"110:4640:14"},"id":14},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[2818],"IERC165":[5900]},"id":2819,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2778,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2819,"sourceUnit":5901,"src":"144:62:15","symbolAliases":[{"foreign":{"id":2779,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"152:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2782,"name":"IERC165","nameLocations":["357:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":5900,"src":"357:7:15"},"id":2783,"nodeType":"InheritanceSpecifier","src":"357:7:15"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"208:118:15","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":2818,"linearizedBaseContracts":[2818,5900],"name":"IERC1155Receiver","nameLocation":"337:16:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2784,"nodeType":"StructuredDocumentation","src":"371:827:15","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":2799,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:15","nodeType":"FunctionDefinition","parameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"operator","nameLocation":"1247:8:15","nodeType":"VariableDeclaration","scope":2799,"src":"1239:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2788,"mutability":"mutable","name":"from","nameLocation":"1273:4:15","nodeType":"VariableDeclaration","scope":2799,"src":"1265:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2787,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2790,"mutability":"mutable","name":"id","nameLocation":"1295:2:15","nodeType":"VariableDeclaration","scope":2799,"src":"1287:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2789,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2792,"mutability":"mutable","name":"value","nameLocation":"1315:5:15","nodeType":"VariableDeclaration","scope":2799,"src":"1307:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2794,"mutability":"mutable","name":"data","nameLocation":"1345:4:15","nodeType":"VariableDeclaration","scope":2799,"src":"1330:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2793,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:15"},"returnParameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2799,"src":"1374:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2796,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:15"},"scope":2818,"src":"1203:179:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2800,"nodeType":"StructuredDocumentation","src":"1388:995:15","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":2817,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:15","nodeType":"FunctionDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"operator","nameLocation":"2437:8:15","nodeType":"VariableDeclaration","scope":2817,"src":"2429:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2801,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2804,"mutability":"mutable","name":"from","nameLocation":"2463:4:15","nodeType":"VariableDeclaration","scope":2817,"src":"2455:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2803,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"ids","nameLocation":"2496:3:15","nodeType":"VariableDeclaration","scope":2817,"src":"2477:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2806,"nodeType":"ArrayTypeName","src":"2477:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"values","nameLocation":"2528:6:15","nodeType":"VariableDeclaration","scope":2817,"src":"2509:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2809,"nodeType":"ArrayTypeName","src":"2509:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2812,"mutability":"mutable","name":"data","nameLocation":"2559:4:15","nodeType":"VariableDeclaration","scope":2817,"src":"2544:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2811,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:15"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2817,"src":"2588:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2814,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:15"},"scope":2818,"src":"2388:208:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2819,"src":"327:2271:15","usedErrors":[],"usedEvents":[]}],"src":"118:2481:15"},"id":15},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[2776],"IERC1155MetadataURI":[2834]},"id":2835,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2820,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":2822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2835,"sourceUnit":2777,"src":"158:41:16","symbolAliases":[{"foreign":{"id":2821,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"166:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2824,"name":"IERC1155","nameLocations":["399:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2776,"src":"399:8:16"},"id":2825,"nodeType":"InheritanceSpecifier","src":"399:8:16"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":2823,"nodeType":"StructuredDocumentation","src":"201:164:16","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":2834,"linearizedBaseContracts":[2834,2776,5900],"name":"IERC1155MetadataURI","nameLocation":"376:19:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"414:192:16","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":2833,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:16","nodeType":"FunctionDefinition","parameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"id","nameLocation":"632:2:16","nodeType":"VariableDeclaration","scope":2833,"src":"624:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:16"},"returnParameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2833,"src":"659:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2830,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:16"},"scope":2834,"src":"611:63:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2835,"src":"366:310:16","usedErrors":[],"usedEvents":[2673,2688,2697,2704]}],"src":"132:545:16"},"id":16},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[2988],"IERC1155Errors":[2349],"IERC1155Receiver":[2818]},"id":2989,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2836,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":2838,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2989,"sourceUnit":2819,"src":"146:57:17","symbolAliases":[{"foreign":{"id":2837,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"154:16:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2840,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2989,"sourceUnit":2350,"src":"204:70:17","symbolAliases":[{"foreign":{"id":2839,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"212:14:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2841,"nodeType":"StructuredDocumentation","src":"276:162:17","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":2988,"linearizedBaseContracts":[2988],"name":"ERC1155Utils","nameLocation":"447:12:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":2912,"nodeType":"Block","src":"1191:774:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2857,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"1205:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:17","memberName":"code","nodeType":"MemberAccess","src":"1205:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:17","memberName":"length","nodeType":"MemberAccess","src":"1205:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2911,"nodeType":"IfStatement","src":"1201:758:17","trueBody":{"id":2910,"nodeType":"Block","src":"1225:734:17","statements":[{"clauses":[{"block":{"id":2888,"nodeType":"Block","src":"1341:221:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2875,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"1363:8:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2876,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"1375:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2818_$","typeString":"type(contract IERC1155Receiver)"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:17","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2799,"src":"1375:34:17","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:17","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2887,"nodeType":"IfStatement","src":"1359:189:17","trueBody":{"id":2886,"nodeType":"Block","src":"1420:128:17","statements":[{"errorCall":{"arguments":[{"id":2883,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"1526:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2880,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1488:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2349_$","typeString":"type(contract IERC1155Errors)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:17","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2324,"src":"1488:37:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2885,"nodeType":"RevertStatement","src":"1481:48:17"}]}}]},"errorName":"","id":2889,"nodeType":"TryCatchClause","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"response","nameLocation":"1331:8:17","nodeType":"VariableDeclaration","scope":2889,"src":"1324:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2872,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:17"},"src":"1315:247:17"},{"block":{"id":2907,"nodeType":"Block","src":"1591:358:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2893,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"1613:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:17","memberName":"length","nodeType":"MemberAccess","src":"1613:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2905,"nodeType":"Block","src":"1784:151:17","statements":[{"AST":{"nativeSrc":"1831:86:17","nodeType":"YulBlock","src":"1831:86:17","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1868:2:17","nodeType":"YulLiteral","src":"1868:2:17","type":"","value":"32"},{"name":"reason","nativeSrc":"1872:6:17","nodeType":"YulIdentifier","src":"1872:6:17"}],"functionName":{"name":"add","nativeSrc":"1864:3:17","nodeType":"YulIdentifier","src":"1864:3:17"},"nativeSrc":"1864:15:17","nodeType":"YulFunctionCall","src":"1864:15:17"},{"arguments":[{"name":"reason","nativeSrc":"1887:6:17","nodeType":"YulIdentifier","src":"1887:6:17"}],"functionName":{"name":"mload","nativeSrc":"1881:5:17","nodeType":"YulIdentifier","src":"1881:5:17"},"nativeSrc":"1881:13:17","nodeType":"YulFunctionCall","src":"1881:13:17"}],"functionName":{"name":"revert","nativeSrc":"1857:6:17","nodeType":"YulIdentifier","src":"1857:6:17"},"nativeSrc":"1857:38:17","nodeType":"YulFunctionCall","src":"1857:38:17"},"nativeSrc":"1857:38:17","nodeType":"YulExpressionStatement","src":"1857:38:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2891,"isOffset":false,"isSlot":false,"src":"1872:6:17","valueSize":1},{"declaration":2891,"isOffset":false,"isSlot":false,"src":"1887:6:17","valueSize":1}],"flags":["memory-safe"],"id":2904,"nodeType":"InlineAssembly","src":"1806:111:17"}]},"id":2906,"nodeType":"IfStatement","src":"1609:326:17","trueBody":{"id":2903,"nodeType":"Block","src":"1633:145:17","statements":[{"errorCall":{"arguments":[{"id":2900,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"1756:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2897,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1718:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2349_$","typeString":"type(contract IERC1155Errors)"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:17","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2324,"src":"1718:37:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2902,"nodeType":"RevertStatement","src":"1711:48:17"}]}}]},"errorName":"","id":2908,"nodeType":"TryCatchClause","parameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"reason","nameLocation":"1583:6:17","nodeType":"VariableDeclaration","scope":2908,"src":"1570:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2890,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:17"},"src":"1563:386:17"}],"externalCall":{"arguments":[{"id":2866,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"1282:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2867,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"1292:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2868,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"1298:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"1302:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2870,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"1309:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2863,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"1260:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2862,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"1243:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2818_$","typeString":"type(contract IERC1155Receiver)"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$2818","typeString":"contract IERC1155Receiver"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:17","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2799,"src":"1243:38:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:17","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2909,"nodeType":"TryStatement","src":"1239:710:17"}]}}]},"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"466:535:17","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:17","nodeType":"FunctionDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"operator","nameLocation":"1055:8:17","nodeType":"VariableDeclaration","scope":2913,"src":"1047:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"from","nameLocation":"1081:4:17","nodeType":"VariableDeclaration","scope":2913,"src":"1073:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2845,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"to","nameLocation":"1103:2:17","nodeType":"VariableDeclaration","scope":2913,"src":"1095:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2847,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"id","nameLocation":"1123:2:17","nodeType":"VariableDeclaration","scope":2913,"src":"1115:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"value","nameLocation":"1143:5:17","nodeType":"VariableDeclaration","scope":2913,"src":"1135:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"data","nameLocation":"1171:4:17","nodeType":"VariableDeclaration","scope":2913,"src":"1158:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2853,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:17"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[],"src":"1191:0:17"},"scope":2988,"src":"1006:959:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2986,"nodeType":"Block","src":"2731:816:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2931,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"2745:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2748:4:17","memberName":"code","nodeType":"MemberAccess","src":"2745:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2753:6:17","memberName":"length","nodeType":"MemberAccess","src":"2745:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2762:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2745:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2985,"nodeType":"IfStatement","src":"2741:800:17","trueBody":{"id":2984,"nodeType":"Block","src":"2765:776:17","statements":[{"clauses":[{"block":{"id":2962,"nodeType":"Block","src":"2918:226:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"2940:8:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2950,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"2952:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2818_$","typeString":"type(contract IERC1155Receiver)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2969:22:17","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2817,"src":"2952:39:17","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2992:8:17","memberName":"selector","nodeType":"MemberAccess","src":"2952:48:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2940:60:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2961,"nodeType":"IfStatement","src":"2936:194:17","trueBody":{"id":2960,"nodeType":"Block","src":"3002:128:17","statements":[{"errorCall":{"arguments":[{"id":2957,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"3108:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2954,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3070:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2349_$","typeString":"type(contract IERC1155Errors)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3085:22:17","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2324,"src":"3070:37:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2959,"nodeType":"RevertStatement","src":"3063:48:17"}]}}]},"errorName":"","id":2963,"nodeType":"TryCatchClause","parameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"response","nameLocation":"2895:8:17","nodeType":"VariableDeclaration","scope":2963,"src":"2888:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2946,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2888:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2870:47:17"},"src":"2862:282:17"},{"block":{"id":2981,"nodeType":"Block","src":"3173:358:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2967,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"3195:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:6:17","memberName":"length","nodeType":"MemberAccess","src":"3195:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3195:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2979,"nodeType":"Block","src":"3366:151:17","statements":[{"AST":{"nativeSrc":"3413:86:17","nodeType":"YulBlock","src":"3413:86:17","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3450:2:17","nodeType":"YulLiteral","src":"3450:2:17","type":"","value":"32"},{"name":"reason","nativeSrc":"3454:6:17","nodeType":"YulIdentifier","src":"3454:6:17"}],"functionName":{"name":"add","nativeSrc":"3446:3:17","nodeType":"YulIdentifier","src":"3446:3:17"},"nativeSrc":"3446:15:17","nodeType":"YulFunctionCall","src":"3446:15:17"},{"arguments":[{"name":"reason","nativeSrc":"3469:6:17","nodeType":"YulIdentifier","src":"3469:6:17"}],"functionName":{"name":"mload","nativeSrc":"3463:5:17","nodeType":"YulIdentifier","src":"3463:5:17"},"nativeSrc":"3463:13:17","nodeType":"YulFunctionCall","src":"3463:13:17"}],"functionName":{"name":"revert","nativeSrc":"3439:6:17","nodeType":"YulIdentifier","src":"3439:6:17"},"nativeSrc":"3439:38:17","nodeType":"YulFunctionCall","src":"3439:38:17"},"nativeSrc":"3439:38:17","nodeType":"YulExpressionStatement","src":"3439:38:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2965,"isOffset":false,"isSlot":false,"src":"3454:6:17","valueSize":1},{"declaration":2965,"isOffset":false,"isSlot":false,"src":"3469:6:17","valueSize":1}],"flags":["memory-safe"],"id":2978,"nodeType":"InlineAssembly","src":"3388:111:17"}]},"id":2980,"nodeType":"IfStatement","src":"3191:326:17","trueBody":{"id":2977,"nodeType":"Block","src":"3215:145:17","statements":[{"errorCall":{"arguments":[{"id":2974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"3338:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2971,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3300:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2349_$","typeString":"type(contract IERC1155Errors)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3315:22:17","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2324,"src":"3300:37:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3300:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2976,"nodeType":"RevertStatement","src":"3293:48:17"}]}}]},"errorName":"","id":2982,"nodeType":"TryCatchClause","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"reason","nameLocation":"3165:6:17","nodeType":"VariableDeclaration","scope":2982,"src":"3152:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2964,"name":"bytes","nodeType":"ElementaryTypeName","src":"3152:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3151:21:17"},"src":"3145:386:17"}],"externalCall":{"arguments":[{"id":2940,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"2827:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2941,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"2837:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2942,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"2843:3:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2943,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"2848:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2944,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"2856:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2937,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"2800:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2936,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"2783:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2818_$","typeString":"type(contract IERC1155Receiver)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$2818","typeString":"contract IERC1155Receiver"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:22:17","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2817,"src":"2783:43:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:78:17","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2983,"nodeType":"TryStatement","src":"2779:752:17"}]}}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"1971:545:17","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":2987,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2530:27:17","nodeType":"FunctionDefinition","parameters":{"id":2929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"operator","nameLocation":"2575:8:17","nodeType":"VariableDeclaration","scope":2987,"src":"2567:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"from","nameLocation":"2601:4:17","nodeType":"VariableDeclaration","scope":2987,"src":"2593:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2917,"name":"address","nodeType":"ElementaryTypeName","src":"2593:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"to","nameLocation":"2623:2:17","nodeType":"VariableDeclaration","scope":2987,"src":"2615:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2919,"name":"address","nodeType":"ElementaryTypeName","src":"2615:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2923,"mutability":"mutable","name":"ids","nameLocation":"2652:3:17","nodeType":"VariableDeclaration","scope":2987,"src":"2635:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2922,"nodeType":"ArrayTypeName","src":"2635:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2926,"mutability":"mutable","name":"values","nameLocation":"2682:6:17","nodeType":"VariableDeclaration","scope":2987,"src":"2665:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2925,"nodeType":"ArrayTypeName","src":"2665:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"data","nameLocation":"2711:4:17","nodeType":"VariableDeclaration","scope":2987,"src":"2698:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2927,"name":"bytes","nodeType":"ElementaryTypeName","src":"2698:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2557:164:17"},"returnParameters":{"id":2930,"nodeType":"ParameterList","parameters":[],"src":"2731:0:17"},"scope":2988,"src":"2521:1026:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2989,"src":"439:3110:17","usedErrors":[],"usedEvents":[]}],"src":"120:3430:17"},"id":17},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3248],"Errors":[4180]},"id":3249,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2990,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":2992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3249,"sourceUnit":4181,"src":"127:36:18","symbolAliases":[{"foreign":{"id":2991,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"135:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2993,"nodeType":"StructuredDocumentation","src":"165:67:18","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3248,"linearizedBaseContracts":[3248],"name":"Address","nameLocation":"241:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2994,"nodeType":"StructuredDocumentation","src":"255:75:18","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2998,"name":"AddressEmptyCode","nameLocation":"341:16:18","nodeType":"ErrorDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"target","nameLocation":"366:6:18","nodeType":"VariableDeclaration","scope":2998,"src":"358:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2995,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:18"},"src":"335:39:18"},{"body":{"id":3045,"nodeType":"Block","src":"1361:294:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3008,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3248","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3248","typeString":"library Address"}],"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3006,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:18","typeDescriptions":{}}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:18","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3011,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"1399:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3025,"nodeType":"IfStatement","src":"1371:125:18","trueBody":{"id":3024,"nodeType":"Block","src":"1407:89:18","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3018,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3248","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3248","typeString":"library Address"}],"id":3017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3016,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:18","typeDescriptions":{}}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:18","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3021,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"1478:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3013,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"1428:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4180_$","typeString":"type(library Errors)"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:18","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":4168,"src":"1428:26:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3023,"nodeType":"RevertStatement","src":"1421:64:18"}]}},{"assignments":[3027,3029],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"success","nameLocation":"1512:7:18","nodeType":"VariableDeclaration","scope":3045,"src":"1507:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3026,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3029,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:18","nodeType":"VariableDeclaration","scope":3045,"src":"1521:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3028,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3036,"initialValue":{"arguments":[{"hexValue":"","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3030,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"1548:9:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:18","memberName":"call","nodeType":"MemberAccess","src":"1548:14:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3032,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"1570:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:18"},{"condition":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:18","subExpression":{"id":3037,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"1596:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3044,"nodeType":"IfStatement","src":"1591:58:18","trueBody":{"id":3043,"nodeType":"Block","src":"1605:44:18","statements":[{"expression":{"arguments":[{"id":3040,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1627:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3039,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"1619:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3042,"nodeType":"ExpressionStatement","src":"1619:19:18"}]}}]},"documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"380:905:18","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3046,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:18","nodeType":"FunctionDefinition","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:18","nodeType":"VariableDeclaration","scope":3046,"src":"1309:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3000,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"amount","nameLocation":"1344:6:18","nodeType":"VariableDeclaration","scope":3046,"src":"1336:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:18"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[],"src":"1361:0:18"},"scope":3248,"src":"1290:365:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3062,"nodeType":"Block","src":"2589:62:18","statements":[{"expression":{"arguments":[{"id":3057,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"2628:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3058,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"2636:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3056,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"2606:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3055,"id":3061,"nodeType":"Return","src":"2599:45:18"}]},"documentation":{"id":3047,"nodeType":"StructuredDocumentation","src":"1661:834:18","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":3063,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:18","nodeType":"FunctionDefinition","parameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"target","nameLocation":"2530:6:18","nodeType":"VariableDeclaration","scope":3063,"src":"2522:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3048,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"data","nameLocation":"2551:4:18","nodeType":"VariableDeclaration","scope":3063,"src":"2538:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3050,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:18"},"returnParameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3063,"src":"2575:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3053,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:18"},"scope":3248,"src":"2500:151:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3112,"nodeType":"Block","src":"3088:294:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3077,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3248","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3248","typeString":"library Address"}],"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3075,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:18","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:18","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3126:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3094,"nodeType":"IfStatement","src":"3098:123:18","trueBody":{"id":3093,"nodeType":"Block","src":"3133:88:18","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3087,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3248","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3248","typeString":"library Address"}],"id":3086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3085,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:18","typeDescriptions":{}}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:18","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3204:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3082,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"3154:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4180_$","typeString":"type(library Errors)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:18","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":4168,"src":"3154:26:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3092,"nodeType":"RevertStatement","src":"3147:63:18"}]}},{"assignments":[3096,3098],"declarations":[{"constant":false,"id":3096,"mutability":"mutable","name":"success","nameLocation":"3236:7:18","nodeType":"VariableDeclaration","scope":3112,"src":"3231:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3095,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3098,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:18","nodeType":"VariableDeclaration","scope":3112,"src":"3245:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3097,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3105,"initialValue":{"arguments":[{"id":3103,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3298:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3099,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"3272:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:18","memberName":"call","nodeType":"MemberAccess","src":"3272:11:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3291:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:18"},{"expression":{"arguments":[{"id":3107,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"3347:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3108,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"3355:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3109,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"3364:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3106,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"3320:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3074,"id":3111,"nodeType":"Return","src":"3313:62:18"}]},"documentation":{"id":3064,"nodeType":"StructuredDocumentation","src":"2657:313:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":3113,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:18","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"target","nameLocation":"3014:6:18","nodeType":"VariableDeclaration","scope":3113,"src":"3006:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3068,"mutability":"mutable","name":"data","nameLocation":"3035:4:18","nodeType":"VariableDeclaration","scope":3113,"src":"3022:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3067,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3070,"mutability":"mutable","name":"value","nameLocation":"3049:5:18","nodeType":"VariableDeclaration","scope":3113,"src":"3041:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:18"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3113,"src":"3074:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3072,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:18"},"scope":3248,"src":"2975:407:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3138,"nodeType":"Block","src":"3621:154:18","statements":[{"assignments":[3124,3126],"declarations":[{"constant":false,"id":3124,"mutability":"mutable","name":"success","nameLocation":"3637:7:18","nodeType":"VariableDeclaration","scope":3138,"src":"3632:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3123,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3126,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:18","nodeType":"VariableDeclaration","scope":3138,"src":"3646:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3125,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3131,"initialValue":{"arguments":[{"id":3129,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"3691:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3127,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"3673:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:18","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:18","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:18"},{"expression":{"arguments":[{"id":3133,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"3740:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3134,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"3748:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3135,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"3757:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3132,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"3713:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3122,"id":3137,"nodeType":"Return","src":"3706:62:18"}]},"documentation":{"id":3114,"nodeType":"StructuredDocumentation","src":"3388:128:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":3139,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:18","nodeType":"FunctionDefinition","parameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"target","nameLocation":"3557:6:18","nodeType":"VariableDeclaration","scope":3139,"src":"3549:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"data","nameLocation":"3578:4:18","nodeType":"VariableDeclaration","scope":3139,"src":"3565:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3117,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:18"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3139,"src":"3607:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3120,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:18"},"scope":3248,"src":"3521:254:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3164,"nodeType":"Block","src":"4013:156:18","statements":[{"assignments":[3150,3152],"declarations":[{"constant":false,"id":3150,"mutability":"mutable","name":"success","nameLocation":"4029:7:18","nodeType":"VariableDeclaration","scope":3164,"src":"4024:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3149,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3152,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:18","nodeType":"VariableDeclaration","scope":3164,"src":"4038:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3151,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3157,"initialValue":{"arguments":[{"id":3155,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"4085:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3153,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"4065:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:18","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:18","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:18"},{"expression":{"arguments":[{"id":3159,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"4134:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3160,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"4142:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3161,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"4151:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3158,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"4107:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3148,"id":3163,"nodeType":"Return","src":"4100:62:18"}]},"documentation":{"id":3140,"nodeType":"StructuredDocumentation","src":"3781:130:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:18","nodeType":"FunctionDefinition","parameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"target","nameLocation":"3954:6:18","nodeType":"VariableDeclaration","scope":3165,"src":"3946:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3141,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3144,"mutability":"mutable","name":"data","nameLocation":"3975:4:18","nodeType":"VariableDeclaration","scope":3165,"src":"3962:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3143,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:18"},"returnParameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3165,"src":"3999:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3146,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:18"},"scope":3248,"src":"3916:253:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3204,"nodeType":"Block","src":"4595:424:18","statements":[{"condition":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:18","subExpression":{"id":3177,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"4610:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3202,"nodeType":"Block","src":"4669:344:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3184,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"4857:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:18","memberName":"length","nodeType":"MemberAccess","src":"4857:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3188,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"4883:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:18","memberName":"code","nodeType":"MemberAccess","src":"4883:11:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:18","memberName":"length","nodeType":"MemberAccess","src":"4883:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3199,"nodeType":"IfStatement","src":"4853:119:18","trueBody":{"id":3198,"nodeType":"Block","src":"4908:64:18","statements":[{"errorCall":{"arguments":[{"id":3195,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"4950:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3194,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"4933:16:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3197,"nodeType":"RevertStatement","src":"4926:31:18"}]}},{"expression":{"id":3200,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"4992:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3176,"id":3201,"nodeType":"Return","src":"4985:17:18"}]},"id":3203,"nodeType":"IfStatement","src":"4605:408:18","trueBody":{"id":3183,"nodeType":"Block","src":"4619:44:18","statements":[{"expression":{"arguments":[{"id":3180,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"4641:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3179,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"4633:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3182,"nodeType":"ExpressionStatement","src":"4633:19:18"}]}}]},"documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"4175:257:18","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":3205,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:18","nodeType":"FunctionDefinition","parameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"target","nameLocation":"4490:6:18","nodeType":"VariableDeclaration","scope":3205,"src":"4482:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3167,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"success","nameLocation":"4511:7:18","nodeType":"VariableDeclaration","scope":3205,"src":"4506:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3169,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:18","nodeType":"VariableDeclaration","scope":3205,"src":"4528:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3171,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:18"},"returnParameters":{"id":3176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3205,"src":"4581:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3174,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:18"},"scope":3248,"src":"4437:582:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3226,"nodeType":"Block","src":"5323:122:18","statements":[{"condition":{"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:18","subExpression":{"id":3215,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"5338:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3224,"nodeType":"Block","src":"5397:42:18","statements":[{"expression":{"id":3222,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"5418:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3214,"id":3223,"nodeType":"Return","src":"5411:17:18"}]},"id":3225,"nodeType":"IfStatement","src":"5333:106:18","trueBody":{"id":3221,"nodeType":"Block","src":"5347:44:18","statements":[{"expression":{"arguments":[{"id":3218,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"5369:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3217,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"5361:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3220,"nodeType":"ExpressionStatement","src":"5361:19:18"}]}}]},"documentation":{"id":3206,"nodeType":"StructuredDocumentation","src":"5025:191:18","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":3227,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:18","nodeType":"FunctionDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"success","nameLocation":"5252:7:18","nodeType":"VariableDeclaration","scope":3227,"src":"5247:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3207,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3210,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:18","nodeType":"VariableDeclaration","scope":3227,"src":"5261:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3209,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:18"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3227,"src":"5309:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3212,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:18"},"scope":3248,"src":"5221:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3246,"nodeType":"Block","src":"5614:432:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3233,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"5690:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:18","memberName":"length","nodeType":"MemberAccess","src":"5690:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3244,"nodeType":"Block","src":"5989:51:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3239,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"6010:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4180_$","typeString":"type(library Errors)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6017:10:18","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":4171,"src":"6010:17:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6010:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3243,"nodeType":"RevertStatement","src":"6003:26:18"}]},"id":3245,"nodeType":"IfStatement","src":"5686:354:18","trueBody":{"id":3238,"nodeType":"Block","src":"5713:270:18","statements":[{"AST":{"nativeSrc":"5840:133:18","nodeType":"YulBlock","src":"5840:133:18","statements":[{"nativeSrc":"5858:40:18","nodeType":"YulVariableDeclaration","src":"5858:40:18","value":{"arguments":[{"name":"returndata","nativeSrc":"5887:10:18","nodeType":"YulIdentifier","src":"5887:10:18"}],"functionName":{"name":"mload","nativeSrc":"5881:5:18","nodeType":"YulIdentifier","src":"5881:5:18"},"nativeSrc":"5881:17:18","nodeType":"YulFunctionCall","src":"5881:17:18"},"variables":[{"name":"returndata_size","nativeSrc":"5862:15:18","nodeType":"YulTypedName","src":"5862:15:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5926:2:18","nodeType":"YulLiteral","src":"5926:2:18","type":"","value":"32"},{"name":"returndata","nativeSrc":"5930:10:18","nodeType":"YulIdentifier","src":"5930:10:18"}],"functionName":{"name":"add","nativeSrc":"5922:3:18","nodeType":"YulIdentifier","src":"5922:3:18"},"nativeSrc":"5922:19:18","nodeType":"YulFunctionCall","src":"5922:19:18"},{"name":"returndata_size","nativeSrc":"5943:15:18","nodeType":"YulIdentifier","src":"5943:15:18"}],"functionName":{"name":"revert","nativeSrc":"5915:6:18","nodeType":"YulIdentifier","src":"5915:6:18"},"nativeSrc":"5915:44:18","nodeType":"YulFunctionCall","src":"5915:44:18"},"nativeSrc":"5915:44:18","nodeType":"YulExpressionStatement","src":"5915:44:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3230,"isOffset":false,"isSlot":false,"src":"5887:10:18","valueSize":1},{"declaration":3230,"isOffset":false,"isSlot":false,"src":"5930:10:18","valueSize":1}],"flags":["memory-safe"],"id":3237,"nodeType":"InlineAssembly","src":"5815:158:18"}]}}]},"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"5451:103:18","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":3247,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:18","nodeType":"FunctionDefinition","parameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:18","nodeType":"VariableDeclaration","scope":3247,"src":"5576:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3229,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:18"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[],"src":"5614:0:18"},"scope":3248,"src":"5559:487:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3249,"src":"233:5815:18","usedErrors":[2998],"usedEvents":[]}],"src":"101:5948:18"},"id":18},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[4126],"Comparators":[4158],"Math":[7521],"SlotDerivation":[4362],"StorageSlot":[4486]},"id":4127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3250,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":3252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4127,"sourceUnit":4159,"src":"209:46:19","symbolAliases":[{"foreign":{"id":3251,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"217:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":3254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4127,"sourceUnit":4363,"src":"256:52:19","symbolAliases":[{"foreign":{"id":3253,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"264:14:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":3256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4127,"sourceUnit":4487,"src":"309:46:19","symbolAliases":[{"foreign":{"id":3255,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"317:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4127,"sourceUnit":7522,"src":"356:37:19","symbolAliases":[{"foreign":{"id":3257,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"364:4:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"395:63:19","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":4126,"linearizedBaseContracts":[4126],"name":"Arrays","nameLocation":"467:6:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3262,"libraryName":{"id":3260,"name":"SlotDerivation","nameLocations":["486:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":4362,"src":"486:14:19"},"nodeType":"UsingForDirective","src":"480:33:19","typeName":{"id":3261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":3265,"libraryName":{"id":3263,"name":"StorageSlot","nameLocations":["524:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4486,"src":"524:11:19"},"nodeType":"UsingForDirective","src":"518:30:19","typeName":{"id":3264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":3297,"nodeType":"Block","src":"1628:83:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3287,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"1656:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3286,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"1649:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3290,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"1669:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3289,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"1664:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3292,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"1677:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3285,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"1638:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3294,"nodeType":"ExpressionStatement","src":"1638:44:19"},{"expression":{"id":3295,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"1699:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3284,"id":3296,"nodeType":"Return","src":"1692:12:19"}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"554:915:19","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3298,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:19","nodeType":"FunctionDefinition","parameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"array","nameLocation":"1514:5:19","nodeType":"VariableDeclaration","scope":3298,"src":"1497:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3268,"nodeType":"ArrayTypeName","src":"1497:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"comp","nameLocation":"1576:4:19","nodeType":"VariableDeclaration","scope":3298,"src":"1529:51:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3278,"nodeType":"FunctionTypeName","parameterTypes":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3278,"src":"1538:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3278,"src":"1547:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:19"},"returnParameterTypes":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3278,"src":"1570:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3275,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:19"},"src":"1529:51:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:19"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3298,"src":"1610:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3282,"nodeType":"ArrayTypeName","src":"1610:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:19"},"scope":4126,"src":"1474:237:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3316,"nodeType":"Block","src":"1894:66:19","statements":[{"expression":{"arguments":[{"id":3309,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"1909:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3310,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"1916:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4158_$","typeString":"type(library Comparators)"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:19","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4143,"src":"1916:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3308,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3298,3317,3349,3370,3402,3423],"referencedDeclaration":3298,"src":"1904:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3313,"nodeType":"ExpressionStatement","src":"1904:27:19"},{"expression":{"id":3314,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"1948:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3307,"id":3315,"nodeType":"Return","src":"1941:12:19"}]},"documentation":{"id":3299,"nodeType":"StructuredDocumentation","src":"1717:93:19","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:19","nodeType":"FunctionDefinition","parameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"array","nameLocation":"1846:5:19","nodeType":"VariableDeclaration","scope":3317,"src":"1829:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3301,"nodeType":"ArrayTypeName","src":"1829:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:19"},"returnParameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"1876:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3305,"nodeType":"ArrayTypeName","src":"1876:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:19"},"scope":4126,"src":"1815:145:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3348,"nodeType":"Block","src":"3040:97:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3339,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"3075:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3338,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3574,3586],"referencedDeclaration":3574,"src":"3055:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3342,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"3102:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":3341,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3612,3638],"referencedDeclaration":3612,"src":"3083:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3337,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3298,3317,3349,3370,3402,3423],"referencedDeclaration":3298,"src":"3050:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3345,"nodeType":"ExpressionStatement","src":"3050:58:19"},{"expression":{"id":3346,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"3125:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3336,"id":3347,"nodeType":"Return","src":"3118:12:19"}]},"documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"1966:915:19","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3349,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:19","nodeType":"FunctionDefinition","parameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"array","nameLocation":"2926:5:19","nodeType":"VariableDeclaration","scope":3349,"src":"2909:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3319,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3320,"nodeType":"ArrayTypeName","src":"2909:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"comp","nameLocation":"2988:4:19","nodeType":"VariableDeclaration","scope":3349,"src":"2941:51:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3330,"nodeType":"FunctionTypeName","parameterTypes":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3330,"src":"2950:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3322,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3330,"src":"2959:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3324,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:19"},"returnParameterTypes":{"id":3329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3330,"src":"2982:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3327,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:19"},"src":"2941:51:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:19"},"returnParameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3349,"src":"3022:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3333,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3334,"nodeType":"ArrayTypeName","src":"3022:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:19"},"scope":4126,"src":"2886:251:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3369,"nodeType":"Block","src":"3320:87:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3361,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"3355:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3360,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3574,3586],"referencedDeclaration":3574,"src":"3335:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3363,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"3363:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4158_$","typeString":"type(library Comparators)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:19","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4143,"src":"3363:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3359,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3298,3317,3349,3370,3402,3423],"referencedDeclaration":3298,"src":"3330:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3366,"nodeType":"ExpressionStatement","src":"3330:48:19"},{"expression":{"id":3367,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"3395:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3358,"id":3368,"nodeType":"Return","src":"3388:12:19"}]},"documentation":{"id":3350,"nodeType":"StructuredDocumentation","src":"3143:93:19","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":3370,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:19","nodeType":"FunctionDefinition","parameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3353,"mutability":"mutable","name":"array","nameLocation":"3272:5:19","nodeType":"VariableDeclaration","scope":3370,"src":"3255:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3351,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3352,"nodeType":"ArrayTypeName","src":"3255:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:19"},"returnParameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3370,"src":"3302:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3355,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3356,"nodeType":"ArrayTypeName","src":"3302:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:19"},"scope":4126,"src":"3241:166:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3401,"nodeType":"Block","src":"4487:97:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3392,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"4522:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3391,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3574,3586],"referencedDeclaration":3586,"src":"4502:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3395,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"4549:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":3394,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3612,3638],"referencedDeclaration":3638,"src":"4530:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3390,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3298,3317,3349,3370,3402,3423],"referencedDeclaration":3298,"src":"4497:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3398,"nodeType":"ExpressionStatement","src":"4497:58:19"},{"expression":{"id":3399,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"4572:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3389,"id":3400,"nodeType":"Return","src":"4565:12:19"}]},"documentation":{"id":3371,"nodeType":"StructuredDocumentation","src":"3413:915:19","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:19","nodeType":"FunctionDefinition","parameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"array","nameLocation":"4373:5:19","nodeType":"VariableDeclaration","scope":3402,"src":"4356:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3373,"nodeType":"ArrayTypeName","src":"4356:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3384,"mutability":"mutable","name":"comp","nameLocation":"4435:4:19","nodeType":"VariableDeclaration","scope":3402,"src":"4388:51:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3383,"nodeType":"FunctionTypeName","parameterTypes":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"4397:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"4406:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:19"},"returnParameterTypes":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"4429:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3380,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:19"},"src":"4388:51:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:19"},"returnParameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3402,"src":"4469:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3387,"nodeType":"ArrayTypeName","src":"4469:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:19"},"scope":4126,"src":"4333:251:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3422,"nodeType":"Block","src":"4767:87:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3414,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"4802:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3413,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3574,3586],"referencedDeclaration":3586,"src":"4782:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3416,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"4810:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4158_$","typeString":"type(library Comparators)"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:19","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4143,"src":"4810:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3412,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3298,3317,3349,3370,3402,3423],"referencedDeclaration":3298,"src":"4777:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3419,"nodeType":"ExpressionStatement","src":"4777:48:19"},{"expression":{"id":3420,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"4842:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3411,"id":3421,"nodeType":"Return","src":"4835:12:19"}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"4590:93:19","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":3423,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:19","nodeType":"FunctionDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3406,"mutability":"mutable","name":"array","nameLocation":"4719:5:19","nodeType":"VariableDeclaration","scope":3423,"src":"4702:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3405,"nodeType":"ArrayTypeName","src":"4702:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:19"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3423,"src":"4749:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3409,"nodeType":"ArrayTypeName","src":"4749:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:19"},"scope":4126,"src":"4688:166:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3510,"nodeType":"Block","src":"5470:889:19","statements":[{"id":3509,"nodeType":"UncheckedBlock","src":"5480:873:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"5508:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3442,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5514:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3447,"nodeType":"IfStatement","src":"5504:31:19","trueBody":{"functionReturnParameters":3440,"id":3446,"nodeType":"Return","src":"5528:7:19"}},{"assignments":[3449],"declarations":[{"constant":false,"id":3449,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:19","nodeType":"VariableDeclaration","scope":3509,"src":"5591:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3448,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3453,"initialValue":{"arguments":[{"id":3451,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5614:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3450,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"5607:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:19"},{"assignments":[3455],"declarations":[{"constant":false,"id":3455,"mutability":"mutable","name":"pos","nameLocation":"5715:3:19","nodeType":"VariableDeclaration","scope":3509,"src":"5707:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3457,"initialValue":{"id":3456,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5721:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:19"},{"body":{"id":3488,"nodeType":"Block","src":"5795:331:19","statements":[{"condition":{"arguments":[{"arguments":[{"id":3473,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"5829:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3472,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"5822:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3475,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"5834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3471,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"5817:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3487,"nodeType":"IfStatement","src":"5813:299:19","trueBody":{"id":3486,"nodeType":"Block","src":"5842:270:19","statements":[{"expression":{"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3477,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"6046:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3480,"nodeType":"ExpressionStatement","src":"6046:11:19"},{"expression":{"arguments":[{"id":3482,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"6085:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3483,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"6090:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3481,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"6079:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3485,"nodeType":"ExpressionStatement","src":"6079:14:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3464,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"5773:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3465,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"5778:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3489,"initializationExpression":{"assignments":[3459],"declarations":[{"constant":false,"id":3459,"mutability":"mutable","name":"it","nameLocation":"5754:2:19","nodeType":"VariableDeclaration","scope":3489,"src":"5746:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3463,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3460,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5759:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:19"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3467,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"5783:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3470,"nodeType":"ExpressionStatement","src":"5783:10:19"},"nodeType":"ForStatement","src":"5741:385:19"},{"expression":{"arguments":[{"id":3491,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"6146:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3492,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"6153:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3490,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"6140:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3494,"nodeType":"ExpressionStatement","src":"6140:17:19"},{"expression":{"arguments":[{"id":3496,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"6207:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3497,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"6214:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3498,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"6219:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3495,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"6196:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3500,"nodeType":"ExpressionStatement","src":"6196:28:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3502,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"6284:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3505,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"6296:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3506,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"6301:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3501,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"6273:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3508,"nodeType":"ExpressionStatement","src":"6273:33:19"}]}]},"documentation":{"id":3424,"nodeType":"StructuredDocumentation","src":"4860:491:19","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":3511,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:19","nodeType":"FunctionDefinition","parameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"begin","nameLocation":"5384:5:19","nodeType":"VariableDeclaration","scope":3511,"src":"5376:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3428,"mutability":"mutable","name":"end","nameLocation":"5399:3:19","nodeType":"VariableDeclaration","scope":3511,"src":"5391:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3427,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3438,"mutability":"mutable","name":"comp","nameLocation":"5451:4:19","nodeType":"VariableDeclaration","scope":3511,"src":"5404:51:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3437,"nodeType":"FunctionTypeName","parameterTypes":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3437,"src":"5413:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3437,"src":"5422:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:19"},"returnParameterTypes":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3437,"src":"5445:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3434,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:19"},"src":"5404:51:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:19"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[],"src":"5470:0:19"},"scope":4126,"src":"5356:1003:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3521,"nodeType":"Block","src":"6532:88:19","statements":[{"AST":{"nativeSrc":"6567:47:19","nodeType":"YulBlock","src":"6567:47:19","statements":[{"nativeSrc":"6581:23:19","nodeType":"YulAssignment","src":"6581:23:19","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:19","nodeType":"YulIdentifier","src":"6592:5:19"},{"kind":"number","nativeSrc":"6599:4:19","nodeType":"YulLiteral","src":"6599:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:19","nodeType":"YulIdentifier","src":"6588:3:19"},"nativeSrc":"6588:16:19","nodeType":"YulFunctionCall","src":"6588:16:19"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:19","nodeType":"YulIdentifier","src":"6581:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3515,"isOffset":false,"isSlot":false,"src":"6592:5:19","valueSize":1},{"declaration":3518,"isOffset":false,"isSlot":false,"src":"6581:3:19","valueSize":1}],"flags":["memory-safe"],"id":3520,"nodeType":"InlineAssembly","src":"6542:72:19"}]},"documentation":{"id":3512,"nodeType":"StructuredDocumentation","src":"6365:87:19","text":" @dev Pointer to the memory location of the first element of `array`."},"id":3522,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:19","nodeType":"FunctionDefinition","parameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"mutability":"mutable","name":"array","nameLocation":"6490:5:19","nodeType":"VariableDeclaration","scope":3522,"src":"6473:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3514,"nodeType":"ArrayTypeName","src":"6473:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:19"},"returnParameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:19","nodeType":"VariableDeclaration","scope":3522,"src":"6519:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:19"},"scope":4126,"src":"6457:163:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3541,"nodeType":"Block","src":"6892:93:19","statements":[{"id":3540,"nodeType":"UncheckedBlock","src":"6902:77:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3532,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"6940:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3531,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"6933:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3534,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"6949:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:19","memberName":"length","nodeType":"MemberAccess","src":"6949:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":3536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3530,"id":3539,"nodeType":"Return","src":"6926:42:19"}]}]},"documentation":{"id":3523,"nodeType":"StructuredDocumentation","src":"6626:188:19","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:19","nodeType":"FunctionDefinition","parameters":{"id":3527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3526,"mutability":"mutable","name":"array","nameLocation":"6850:5:19","nodeType":"VariableDeclaration","scope":3542,"src":"6833:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3525,"nodeType":"ArrayTypeName","src":"6833:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:19"},"returnParameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:19","nodeType":"VariableDeclaration","scope":3542,"src":"6879:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:19"},"scope":4126,"src":"6819:166:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3551,"nodeType":"Block","src":"7136:68:19","statements":[{"AST":{"nativeSrc":"7155:43:19","nodeType":"YulBlock","src":"7155:43:19","statements":[{"nativeSrc":"7169:19:19","nodeType":"YulAssignment","src":"7169:19:19","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:19","nodeType":"YulIdentifier","src":"7184:3:19"}],"functionName":{"name":"mload","nativeSrc":"7178:5:19","nodeType":"YulIdentifier","src":"7178:5:19"},"nativeSrc":"7178:10:19","nodeType":"YulFunctionCall","src":"7178:10:19"},"variableNames":[{"name":"value","nativeSrc":"7169:5:19","nodeType":"YulIdentifier","src":"7169:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3545,"isOffset":false,"isSlot":false,"src":"7184:3:19","valueSize":1},{"declaration":3548,"isOffset":false,"isSlot":false,"src":"7169:5:19","valueSize":1}],"id":3550,"nodeType":"InlineAssembly","src":"7146:52:19"}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"6991:74:19","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":3552,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:19","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:19","nodeType":"VariableDeclaration","scope":3552,"src":"7086:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:19"},"returnParameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"value","nameLocation":"7129:5:19","nodeType":"VariableDeclaration","scope":3552,"src":"7121:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:19"},"scope":4126,"src":"7070:134:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3561,"nodeType":"Block","src":"7348:178:19","statements":[{"AST":{"nativeSrc":"7367:153:19","nodeType":"YulBlock","src":"7367:153:19","statements":[{"nativeSrc":"7381:25:19","nodeType":"YulVariableDeclaration","src":"7381:25:19","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:19","nodeType":"YulIdentifier","src":"7401:4:19"}],"functionName":{"name":"mload","nativeSrc":"7395:5:19","nodeType":"YulIdentifier","src":"7395:5:19"},"nativeSrc":"7395:11:19","nodeType":"YulFunctionCall","src":"7395:11:19"},"variables":[{"name":"value1","nativeSrc":"7385:6:19","nodeType":"YulTypedName","src":"7385:6:19","type":""}]},{"nativeSrc":"7419:25:19","nodeType":"YulVariableDeclaration","src":"7419:25:19","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:19","nodeType":"YulIdentifier","src":"7439:4:19"}],"functionName":{"name":"mload","nativeSrc":"7433:5:19","nodeType":"YulIdentifier","src":"7433:5:19"},"nativeSrc":"7433:11:19","nodeType":"YulFunctionCall","src":"7433:11:19"},"variables":[{"name":"value2","nativeSrc":"7423:6:19","nodeType":"YulTypedName","src":"7423:6:19","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:19","nodeType":"YulIdentifier","src":"7464:4:19"},{"name":"value2","nativeSrc":"7470:6:19","nodeType":"YulIdentifier","src":"7470:6:19"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:19","nodeType":"YulIdentifier","src":"7457:6:19"},"nativeSrc":"7457:20:19","nodeType":"YulFunctionCall","src":"7457:20:19"},"nativeSrc":"7457:20:19","nodeType":"YulExpressionStatement","src":"7457:20:19"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:19","nodeType":"YulIdentifier","src":"7497:4:19"},{"name":"value1","nativeSrc":"7503:6:19","nodeType":"YulIdentifier","src":"7503:6:19"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:19","nodeType":"YulIdentifier","src":"7490:6:19"},"nativeSrc":"7490:20:19","nodeType":"YulFunctionCall","src":"7490:20:19"},"nativeSrc":"7490:20:19","nodeType":"YulExpressionStatement","src":"7490:20:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3555,"isOffset":false,"isSlot":false,"src":"7401:4:19","valueSize":1},{"declaration":3555,"isOffset":false,"isSlot":false,"src":"7464:4:19","valueSize":1},{"declaration":3557,"isOffset":false,"isSlot":false,"src":"7439:4:19","valueSize":1},{"declaration":3557,"isOffset":false,"isSlot":false,"src":"7497:4:19","valueSize":1}],"id":3560,"nodeType":"InlineAssembly","src":"7358:162:19"}]},"documentation":{"id":3553,"nodeType":"StructuredDocumentation","src":"7210:77:19","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":3562,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:19","nodeType":"FunctionDefinition","parameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:19","nodeType":"VariableDeclaration","scope":3562,"src":"7307:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:19","nodeType":"VariableDeclaration","scope":3562,"src":"7321:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:19"},"returnParameters":{"id":3559,"nodeType":"ParameterList","parameters":[],"src":"7348:0:19"},"scope":4126,"src":"7292:234:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3573,"nodeType":"Block","src":"7713:64:19","statements":[{"AST":{"nativeSrc":"7732:39:19","nodeType":"YulBlock","src":"7732:39:19","statements":[{"nativeSrc":"7746:15:19","nodeType":"YulAssignment","src":"7746:15:19","value":{"name":"input","nativeSrc":"7756:5:19","nodeType":"YulIdentifier","src":"7756:5:19"},"variableNames":[{"name":"output","nativeSrc":"7746:6:19","nodeType":"YulIdentifier","src":"7746:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3566,"isOffset":false,"isSlot":false,"src":"7756:5:19","valueSize":1},{"declaration":3570,"isOffset":false,"isSlot":false,"src":"7746:6:19","valueSize":1}],"id":3572,"nodeType":"InlineAssembly","src":"7723:48:19"}]},"documentation":{"id":3563,"nodeType":"StructuredDocumentation","src":"7532:76:19","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":3574,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:19","nodeType":"FunctionDefinition","parameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"input","nameLocation":"7659:5:19","nodeType":"VariableDeclaration","scope":3574,"src":"7642:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3564,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3565,"nodeType":"ArrayTypeName","src":"7642:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:19"},"returnParameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"output","nameLocation":"7705:6:19","nodeType":"VariableDeclaration","scope":3574,"src":"7688:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3569,"nodeType":"ArrayTypeName","src":"7688:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:19"},"scope":4126,"src":"7613:164:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3585,"nodeType":"Block","src":"7964:64:19","statements":[{"AST":{"nativeSrc":"7983:39:19","nodeType":"YulBlock","src":"7983:39:19","statements":[{"nativeSrc":"7997:15:19","nodeType":"YulAssignment","src":"7997:15:19","value":{"name":"input","nativeSrc":"8007:5:19","nodeType":"YulIdentifier","src":"8007:5:19"},"variableNames":[{"name":"output","nativeSrc":"7997:6:19","nodeType":"YulIdentifier","src":"7997:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3578,"isOffset":false,"isSlot":false,"src":"8007:5:19","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"7997:6:19","valueSize":1}],"id":3584,"nodeType":"InlineAssembly","src":"7974:48:19"}]},"documentation":{"id":3575,"nodeType":"StructuredDocumentation","src":"7783:76:19","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":3586,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:19","nodeType":"FunctionDefinition","parameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"input","nameLocation":"7910:5:19","nodeType":"VariableDeclaration","scope":3586,"src":"7893:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3577,"nodeType":"ArrayTypeName","src":"7893:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:19"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"output","nameLocation":"7956:6:19","nodeType":"VariableDeclaration","scope":3586,"src":"7939:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3581,"nodeType":"ArrayTypeName","src":"7939:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:19"},"scope":4126,"src":"7864:164:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3611,"nodeType":"Block","src":"8290:64:19","statements":[{"AST":{"nativeSrc":"8309:39:19","nodeType":"YulBlock","src":"8309:39:19","statements":[{"nativeSrc":"8323:15:19","nodeType":"YulAssignment","src":"8323:15:19","value":{"name":"input","nativeSrc":"8333:5:19","nodeType":"YulIdentifier","src":"8333:5:19"},"variableNames":[{"name":"output","nativeSrc":"8323:6:19","nodeType":"YulIdentifier","src":"8323:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3597,"isOffset":false,"isSlot":false,"src":"8333:5:19","valueSize":1},{"declaration":3608,"isOffset":false,"isSlot":false,"src":"8323:6:19","valueSize":1}],"id":3610,"nodeType":"InlineAssembly","src":"8300:48:19"}]},"documentation":{"id":3587,"nodeType":"StructuredDocumentation","src":"8034:78:19","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":3612,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:19","nodeType":"FunctionDefinition","parameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"input","nameLocation":"8201:5:19","nodeType":"VariableDeclaration","scope":3612,"src":"8154:52:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3596,"nodeType":"FunctionTypeName","parameterTypes":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3596,"src":"8163:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3588,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3596,"src":"8172:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3590,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:19"},"returnParameterTypes":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3596,"src":"8195:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3593,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:19"},"src":"8154:52:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:19"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"output","nameLocation":"8282:6:19","nodeType":"VariableDeclaration","scope":3612,"src":"8235:53:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3607,"nodeType":"FunctionTypeName","parameterTypes":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3607,"src":"8244:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3599,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3607,"src":"8253:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:19"},"returnParameterTypes":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3607,"src":"8276:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3604,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:19"},"src":"8235:53:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:19"},"scope":4126,"src":"8117:237:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3637,"nodeType":"Block","src":"8616:64:19","statements":[{"AST":{"nativeSrc":"8635:39:19","nodeType":"YulBlock","src":"8635:39:19","statements":[{"nativeSrc":"8649:15:19","nodeType":"YulAssignment","src":"8649:15:19","value":{"name":"input","nativeSrc":"8659:5:19","nodeType":"YulIdentifier","src":"8659:5:19"},"variableNames":[{"name":"output","nativeSrc":"8649:6:19","nodeType":"YulIdentifier","src":"8649:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3623,"isOffset":false,"isSlot":false,"src":"8659:5:19","valueSize":1},{"declaration":3634,"isOffset":false,"isSlot":false,"src":"8649:6:19","valueSize":1}],"id":3636,"nodeType":"InlineAssembly","src":"8626:48:19"}]},"documentation":{"id":3613,"nodeType":"StructuredDocumentation","src":"8360:78:19","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":3638,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:19","nodeType":"FunctionDefinition","parameters":{"id":3624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"input","nameLocation":"8527:5:19","nodeType":"VariableDeclaration","scope":3638,"src":"8480:52:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3622,"nodeType":"FunctionTypeName","parameterTypes":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3622,"src":"8489:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3622,"src":"8498:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:19"},"returnParameterTypes":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3622,"src":"8521:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3619,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:19"},"src":"8480:52:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:19"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"output","nameLocation":"8608:6:19","nodeType":"VariableDeclaration","scope":3638,"src":"8561:53:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3633,"nodeType":"FunctionTypeName","parameterTypes":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3633,"src":"8570:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3633,"src":"8579:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:19"},"returnParameterTypes":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3633,"src":"8602:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3630,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:19"},"src":"8561:53:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:19"},"scope":4126,"src":"8443:237:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3720,"nodeType":"Block","src":"9405:834:19","statements":[{"assignments":[3650],"declarations":[{"constant":false,"id":3650,"mutability":"mutable","name":"low","nameLocation":"9423:3:19","nodeType":"VariableDeclaration","scope":3720,"src":"9415:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3652,"initialValue":{"hexValue":"30","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:19"},{"assignments":[3654],"declarations":[{"constant":false,"id":3654,"mutability":"mutable","name":"high","nameLocation":"9448:4:19","nodeType":"VariableDeclaration","scope":3720,"src":"9440:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3657,"initialValue":{"expression":{"id":3655,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"9455:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:19","memberName":"length","nodeType":"MemberAccess","src":"9455:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3658,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"9482:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3664,"nodeType":"IfStatement","src":"9478:48:19","trueBody":{"id":3663,"nodeType":"Block","src":"9493:33:19","statements":[{"expression":{"hexValue":"30","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3648,"id":3662,"nodeType":"Return","src":"9507:8:19"}]}},{"body":{"id":3696,"nodeType":"Block","src":"9555:423:19","statements":[{"assignments":[3669],"declarations":[{"constant":false,"id":3669,"mutability":"mutable","name":"mid","nameLocation":"9577:3:19","nodeType":"VariableDeclaration","scope":3696,"src":"9569:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3675,"initialValue":{"arguments":[{"id":3672,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"9596:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3673,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"9601:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3670,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"9583:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7521_$","typeString":"type(library Math)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6250,"src":"9583:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3677,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"9844:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3678,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"9851:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3676,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4001,4027,4053],"referencedDeclaration":4053,"src":"9831:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4377_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4377_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4376,"src":"9831:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3681,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"9864:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3694,"nodeType":"Block","src":"9922:46:19","statements":[{"expression":{"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3688,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"9940:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3689,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"9946:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3693,"nodeType":"ExpressionStatement","src":"9940:13:19"}]},"id":3695,"nodeType":"IfStatement","src":"9827:141:19","trueBody":{"id":3687,"nodeType":"Block","src":"9873:43:19","statements":[{"expression":{"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3683,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"9891:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3684,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"9898:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3686,"nodeType":"ExpressionStatement","src":"9891:10:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"9543:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3666,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"9549:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3697,"nodeType":"WhileStatement","src":"9536:442:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"10095:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3702,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"10119:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"10126:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3701,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4001,4027,4053],"referencedDeclaration":4053,"src":"10106:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4377_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4377_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4376,"src":"10106:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3708,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"10144:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3718,"nodeType":"Block","src":"10198:35:19","statements":[{"expression":{"id":3716,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"10219:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3648,"id":3717,"nodeType":"Return","src":"10212:10:19"}]},"id":3719,"nodeType":"IfStatement","src":"10091:142:19","trueBody":{"id":3715,"nodeType":"Block","src":"10153:39:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3711,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"10174:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3648,"id":3714,"nodeType":"Return","src":"10167:14:19"}]}}]},"documentation":{"id":3639,"nodeType":"StructuredDocumentation","src":"8686:616:19","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":3721,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:19","nodeType":"FunctionDefinition","parameters":{"id":3645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"array","nameLocation":"9349:5:19","nodeType":"VariableDeclaration","scope":3721,"src":"9331:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3641,"nodeType":"ArrayTypeName","src":"9331:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3644,"mutability":"mutable","name":"element","nameLocation":"9364:7:19","nodeType":"VariableDeclaration","scope":3721,"src":"9356:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3643,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:19"},"returnParameters":{"id":3648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3721,"src":"9396:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3646,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:19"},"scope":4126,"src":"9307:932:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3784,"nodeType":"Block","src":"10756:709:19","statements":[{"assignments":[3733],"declarations":[{"constant":false,"id":3733,"mutability":"mutable","name":"low","nameLocation":"10774:3:19","nodeType":"VariableDeclaration","scope":3784,"src":"10766:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3735,"initialValue":{"hexValue":"30","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:19"},{"assignments":[3737],"declarations":[{"constant":false,"id":3737,"mutability":"mutable","name":"high","nameLocation":"10799:4:19","nodeType":"VariableDeclaration","scope":3784,"src":"10791:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3740,"initialValue":{"expression":{"id":3738,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"10806:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:19","memberName":"length","nodeType":"MemberAccess","src":"10806:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3741,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"10833:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3747,"nodeType":"IfStatement","src":"10829:48:19","trueBody":{"id":3746,"nodeType":"Block","src":"10844:33:19","statements":[{"expression":{"hexValue":"30","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3731,"id":3745,"nodeType":"Return","src":"10858:8:19"}]}},{"body":{"id":3780,"nodeType":"Block","src":"10906:532:19","statements":[{"assignments":[3752],"declarations":[{"constant":false,"id":3752,"mutability":"mutable","name":"mid","nameLocation":"10928:3:19","nodeType":"VariableDeclaration","scope":3780,"src":"10920:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3758,"initialValue":{"arguments":[{"id":3755,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"10947:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3756,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"10952:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3753,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"10934:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7521_$","typeString":"type(library Math)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6250,"src":"10934:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3760,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"11195:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3761,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"11202:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3759,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4001,4027,4053],"referencedDeclaration":4053,"src":"11182:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4377_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4377_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4376,"src":"11182:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3764,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"11215:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3778,"nodeType":"Block","src":"11385:43:19","statements":[{"expression":{"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3774,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"11403:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3775,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"11410:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3777,"nodeType":"ExpressionStatement","src":"11403:10:19"}]},"id":3779,"nodeType":"IfStatement","src":"11178:250:19","trueBody":{"id":3773,"nodeType":"Block","src":"11224:155:19","statements":[{"id":3772,"nodeType":"UncheckedBlock","src":"11301:64:19","statements":[{"expression":{"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3766,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"11333:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3767,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"11339:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3771,"nodeType":"ExpressionStatement","src":"11333:13:19"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3748,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"10894:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3749,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"10900:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3781,"nodeType":"WhileStatement","src":"10887:551:19"},{"expression":{"id":3782,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"11455:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3731,"id":3783,"nodeType":"Return","src":"11448:10:19"}]},"documentation":{"id":3722,"nodeType":"StructuredDocumentation","src":"10245:412:19","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3785,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:19","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"array","nameLocation":"10700:5:19","nodeType":"VariableDeclaration","scope":3785,"src":"10682:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3723,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3724,"nodeType":"ArrayTypeName","src":"10682:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"element","nameLocation":"10715:7:19","nodeType":"VariableDeclaration","scope":3785,"src":"10707:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:19"},"returnParameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3785,"src":"10747:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:19"},"scope":4126,"src":"10662:803:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3848,"nodeType":"Block","src":"11982:709:19","statements":[{"assignments":[3797],"declarations":[{"constant":false,"id":3797,"mutability":"mutable","name":"low","nameLocation":"12000:3:19","nodeType":"VariableDeclaration","scope":3848,"src":"11992:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3799,"initialValue":{"hexValue":"30","id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:19"},{"assignments":[3801],"declarations":[{"constant":false,"id":3801,"mutability":"mutable","name":"high","nameLocation":"12025:4:19","nodeType":"VariableDeclaration","scope":3848,"src":"12017:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3804,"initialValue":{"expression":{"id":3802,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"12032:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:19","memberName":"length","nodeType":"MemberAccess","src":"12032:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3805,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"12059:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3811,"nodeType":"IfStatement","src":"12055:48:19","trueBody":{"id":3810,"nodeType":"Block","src":"12070:33:19","statements":[{"expression":{"hexValue":"30","id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3795,"id":3809,"nodeType":"Return","src":"12084:8:19"}]}},{"body":{"id":3844,"nodeType":"Block","src":"12132:532:19","statements":[{"assignments":[3816],"declarations":[{"constant":false,"id":3816,"mutability":"mutable","name":"mid","nameLocation":"12154:3:19","nodeType":"VariableDeclaration","scope":3844,"src":"12146:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3822,"initialValue":{"arguments":[{"id":3819,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"12173:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3820,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"12178:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3817,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"12160:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7521_$","typeString":"type(library Math)"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6250,"src":"12160:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3824,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"12421:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3825,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"12428:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3823,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4001,4027,4053],"referencedDeclaration":4053,"src":"12408:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4377_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4377_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4376,"src":"12408:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3828,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"12441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3842,"nodeType":"Block","src":"12499:155:19","statements":[{"id":3841,"nodeType":"UncheckedBlock","src":"12576:64:19","statements":[{"expression":{"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3835,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"12608:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3836,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"12614:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3840,"nodeType":"ExpressionStatement","src":"12608:13:19"}]}]},"id":3843,"nodeType":"IfStatement","src":"12404:250:19","trueBody":{"id":3834,"nodeType":"Block","src":"12450:43:19","statements":[{"expression":{"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3830,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"12468:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3831,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"12475:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3833,"nodeType":"ExpressionStatement","src":"12468:10:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3812,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"12120:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3813,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"12126:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3845,"nodeType":"WhileStatement","src":"12113:551:19"},{"expression":{"id":3846,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"12681:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3795,"id":3847,"nodeType":"Return","src":"12674:10:19"}]},"documentation":{"id":3786,"nodeType":"StructuredDocumentation","src":"11471:412:19","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3849,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:19","nodeType":"FunctionDefinition","parameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"array","nameLocation":"11926:5:19","nodeType":"VariableDeclaration","scope":3849,"src":"11908:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3787,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3788,"nodeType":"ArrayTypeName","src":"11908:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"element","nameLocation":"11941:7:19","nodeType":"VariableDeclaration","scope":3849,"src":"11933:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:19"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3849,"src":"11973:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:19"},"scope":4126,"src":"11888:803:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3911,"nodeType":"Block","src":"12875:709:19","statements":[{"assignments":[3861],"declarations":[{"constant":false,"id":3861,"mutability":"mutable","name":"low","nameLocation":"12893:3:19","nodeType":"VariableDeclaration","scope":3911,"src":"12885:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3860,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3863,"initialValue":{"hexValue":"30","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:19"},{"assignments":[3865],"declarations":[{"constant":false,"id":3865,"mutability":"mutable","name":"high","nameLocation":"12918:4:19","nodeType":"VariableDeclaration","scope":3911,"src":"12910:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3864,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3868,"initialValue":{"expression":{"id":3866,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12925:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:19","memberName":"length","nodeType":"MemberAccess","src":"12925:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3869,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"12952:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3875,"nodeType":"IfStatement","src":"12948:48:19","trueBody":{"id":3874,"nodeType":"Block","src":"12963:33:19","statements":[{"expression":{"hexValue":"30","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3859,"id":3873,"nodeType":"Return","src":"12977:8:19"}]}},{"body":{"id":3907,"nodeType":"Block","src":"13025:532:19","statements":[{"assignments":[3880],"declarations":[{"constant":false,"id":3880,"mutability":"mutable","name":"mid","nameLocation":"13047:3:19","nodeType":"VariableDeclaration","scope":3907,"src":"13039:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3886,"initialValue":{"arguments":[{"id":3883,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"13066:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3884,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"13071:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3881,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"13053:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7521_$","typeString":"type(library Math)"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6250,"src":"13053:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3888,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"13320:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3889,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"13327:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3887,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4066,4079,4092],"referencedDeclaration":4092,"src":"13301:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3891,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"13334:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3905,"nodeType":"Block","src":"13504:43:19","statements":[{"expression":{"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3901,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"13522:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3902,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"13529:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3904,"nodeType":"ExpressionStatement","src":"13522:10:19"}]},"id":3906,"nodeType":"IfStatement","src":"13297:250:19","trueBody":{"id":3900,"nodeType":"Block","src":"13343:155:19","statements":[{"id":3899,"nodeType":"UncheckedBlock","src":"13420:64:19","statements":[{"expression":{"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3893,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"13452:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3894,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"13458:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3898,"nodeType":"ExpressionStatement","src":"13452:13:19"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3876,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"13013:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3877,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"13019:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3908,"nodeType":"WhileStatement","src":"13006:551:19"},{"expression":{"id":3909,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"13574:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3859,"id":3910,"nodeType":"Return","src":"13567:10:19"}]},"documentation":{"id":3850,"nodeType":"StructuredDocumentation","src":"12697:74:19","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":3912,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:19","nodeType":"FunctionDefinition","parameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"array","nameLocation":"12819:5:19","nodeType":"VariableDeclaration","scope":3912,"src":"12802:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3852,"nodeType":"ArrayTypeName","src":"12802:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"element","nameLocation":"12834:7:19","nodeType":"VariableDeclaration","scope":3912,"src":"12826:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:19"},"returnParameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3912,"src":"12866:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3857,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:19"},"scope":4126,"src":"12776:808:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3974,"nodeType":"Block","src":"13768:709:19","statements":[{"assignments":[3924],"declarations":[{"constant":false,"id":3924,"mutability":"mutable","name":"low","nameLocation":"13786:3:19","nodeType":"VariableDeclaration","scope":3974,"src":"13778:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3926,"initialValue":{"hexValue":"30","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:19"},{"assignments":[3928],"declarations":[{"constant":false,"id":3928,"mutability":"mutable","name":"high","nameLocation":"13811:4:19","nodeType":"VariableDeclaration","scope":3974,"src":"13803:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3927,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3931,"initialValue":{"expression":{"id":3929,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"13818:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:19","memberName":"length","nodeType":"MemberAccess","src":"13818:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"13845:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3938,"nodeType":"IfStatement","src":"13841:48:19","trueBody":{"id":3937,"nodeType":"Block","src":"13856:33:19","statements":[{"expression":{"hexValue":"30","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3922,"id":3936,"nodeType":"Return","src":"13870:8:19"}]}},{"body":{"id":3970,"nodeType":"Block","src":"13918:532:19","statements":[{"assignments":[3943],"declarations":[{"constant":false,"id":3943,"mutability":"mutable","name":"mid","nameLocation":"13940:3:19","nodeType":"VariableDeclaration","scope":3970,"src":"13932:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3949,"initialValue":{"arguments":[{"id":3946,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"13959:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3947,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"13964:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3944,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"13946:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7521_$","typeString":"type(library Math)"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6250,"src":"13946:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3951,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"14213:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3952,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"14220:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3950,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4066,4079,4092],"referencedDeclaration":4092,"src":"14194:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3954,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"14227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3968,"nodeType":"Block","src":"14285:155:19","statements":[{"id":3967,"nodeType":"UncheckedBlock","src":"14362:64:19","statements":[{"expression":{"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3961,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"14394:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3962,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"14400:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3966,"nodeType":"ExpressionStatement","src":"14394:13:19"}]}]},"id":3969,"nodeType":"IfStatement","src":"14190:250:19","trueBody":{"id":3960,"nodeType":"Block","src":"14236:43:19","statements":[{"expression":{"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3956,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"14254:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3957,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"14261:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3959,"nodeType":"ExpressionStatement","src":"14254:10:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3939,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"13906:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3940,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"13912:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3971,"nodeType":"WhileStatement","src":"13899:551:19"},{"expression":{"id":3972,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"14467:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3922,"id":3973,"nodeType":"Return","src":"14460:10:19"}]},"documentation":{"id":3913,"nodeType":"StructuredDocumentation","src":"13590:74:19","text":" @dev Same as {upperBound}, but with an array in memory."},"id":3975,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:19","nodeType":"FunctionDefinition","parameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3916,"mutability":"mutable","name":"array","nameLocation":"13712:5:19","nodeType":"VariableDeclaration","scope":3975,"src":"13695:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3915,"nodeType":"ArrayTypeName","src":"13695:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3918,"mutability":"mutable","name":"element","nameLocation":"13727:7:19","nodeType":"VariableDeclaration","scope":3975,"src":"13719:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:19"},"returnParameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3975,"src":"13759:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:19"},"scope":4126,"src":"13669:808:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4000,"nodeType":"Block","src":"14793:167:19","statements":[{"assignments":[3988],"declarations":[{"constant":false,"id":3988,"mutability":"mutable","name":"slot","nameLocation":"14811:4:19","nodeType":"VariableDeclaration","scope":4000,"src":"14803:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3989,"nodeType":"VariableDeclarationStatement","src":"14803:12:19"},{"AST":{"nativeSrc":"14850:40:19","nodeType":"YulBlock","src":"14850:40:19","statements":[{"nativeSrc":"14864:16:19","nodeType":"YulAssignment","src":"14864:16:19","value":{"name":"arr.slot","nativeSrc":"14872:8:19","nodeType":"YulIdentifier","src":"14872:8:19"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:19","nodeType":"YulIdentifier","src":"14864:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3979,"isOffset":false,"isSlot":true,"src":"14872:8:19","suffix":"slot","valueSize":1},{"declaration":3988,"isOffset":false,"isSlot":false,"src":"14864:4:19","valueSize":1}],"flags":["memory-safe"],"id":3990,"nodeType":"InlineAssembly","src":"14825:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3995,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"14932:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3991,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"14906:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4277,"src":"14906:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"14906:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:19","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4397,"src":"14906:45:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4368_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4368_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":3986,"id":3999,"nodeType":"Return","src":"14899:54:19"}]},"documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"14483:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4001,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:19","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"arr","nameLocation":"14719:3:19","nodeType":"VariableDeclaration","scope":4001,"src":"14701:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3977,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3978,"nodeType":"ArrayTypeName","src":"14701:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"pos","nameLocation":"14732:3:19","nodeType":"VariableDeclaration","scope":4001,"src":"14724:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:19"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4001,"src":"14760:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4368_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3984,"nodeType":"UserDefinedTypeName","pathNode":{"id":3983,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:19","14772:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4368,"src":"14760:23:19"},"referencedDeclaration":4368,"src":"14760:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4368_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:19"},"scope":4126,"src":"14679:281:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4026,"nodeType":"Block","src":"15276:167:19","statements":[{"assignments":[4014],"declarations":[{"constant":false,"id":4014,"mutability":"mutable","name":"slot","nameLocation":"15294:4:19","nodeType":"VariableDeclaration","scope":4026,"src":"15286:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4015,"nodeType":"VariableDeclarationStatement","src":"15286:12:19"},{"AST":{"nativeSrc":"15333:40:19","nodeType":"YulBlock","src":"15333:40:19","statements":[{"nativeSrc":"15347:16:19","nodeType":"YulAssignment","src":"15347:16:19","value":{"name":"arr.slot","nativeSrc":"15355:8:19","nodeType":"YulIdentifier","src":"15355:8:19"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:19","nodeType":"YulIdentifier","src":"15347:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4005,"isOffset":false,"isSlot":true,"src":"15355:8:19","suffix":"slot","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"15347:4:19","valueSize":1}],"flags":["memory-safe"],"id":4016,"nodeType":"InlineAssembly","src":"15308:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4021,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"15415:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4017,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"15389:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4277,"src":"15389:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"15389:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:19","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":4419,"src":"15389:45:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$4374_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4374_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":4012,"id":4025,"nodeType":"Return","src":"15382:54:19"}]},"documentation":{"id":4002,"nodeType":"StructuredDocumentation","src":"14966:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4027,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:19","nodeType":"FunctionDefinition","parameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"arr","nameLocation":"15202:3:19","nodeType":"VariableDeclaration","scope":4027,"src":"15184:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4004,"nodeType":"ArrayTypeName","src":"15184:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4007,"mutability":"mutable","name":"pos","nameLocation":"15215:3:19","nodeType":"VariableDeclaration","scope":4027,"src":"15207:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:19"},"returnParameters":{"id":4012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4027,"src":"15243:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4374_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4010,"nodeType":"UserDefinedTypeName","pathNode":{"id":4009,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:19","15255:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4374,"src":"15243:23:19"},"referencedDeclaration":4374,"src":"15243:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4374_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:19"},"scope":4126,"src":"15162:281:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4052,"nodeType":"Block","src":"15759:167:19","statements":[{"assignments":[4040],"declarations":[{"constant":false,"id":4040,"mutability":"mutable","name":"slot","nameLocation":"15777:4:19","nodeType":"VariableDeclaration","scope":4052,"src":"15769:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4041,"nodeType":"VariableDeclarationStatement","src":"15769:12:19"},{"AST":{"nativeSrc":"15816:40:19","nodeType":"YulBlock","src":"15816:40:19","statements":[{"nativeSrc":"15830:16:19","nodeType":"YulAssignment","src":"15830:16:19","value":{"name":"arr.slot","nativeSrc":"15838:8:19","nodeType":"YulIdentifier","src":"15838:8:19"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:19","nodeType":"YulIdentifier","src":"15830:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4031,"isOffset":false,"isSlot":true,"src":"15838:8:19","suffix":"slot","valueSize":1},{"declaration":4040,"isOffset":false,"isSlot":false,"src":"15830:4:19","valueSize":1}],"flags":["memory-safe"],"id":4042,"nodeType":"InlineAssembly","src":"15791:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4047,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"15898:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4043,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"15872:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4277,"src":"15872:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"15872:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:19","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":4430,"src":"15872:45:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$4377_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4377_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":4038,"id":4051,"nodeType":"Return","src":"15865:54:19"}]},"documentation":{"id":4028,"nodeType":"StructuredDocumentation","src":"15449:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4053,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:19","nodeType":"FunctionDefinition","parameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"arr","nameLocation":"15685:3:19","nodeType":"VariableDeclaration","scope":4053,"src":"15667:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4029,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4030,"nodeType":"ArrayTypeName","src":"15667:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4033,"mutability":"mutable","name":"pos","nameLocation":"15698:3:19","nodeType":"VariableDeclaration","scope":4053,"src":"15690:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:19"},"returnParameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4053,"src":"15726:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4377_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4036,"nodeType":"UserDefinedTypeName","pathNode":{"id":4035,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:19","15738:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4377,"src":"15726:23:19"},"referencedDeclaration":4377,"src":"15726:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4377_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:19"},"scope":4126,"src":"15645:281:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4065,"nodeType":"Block","src":"16227:98:19","statements":[{"AST":{"nativeSrc":"16246:73:19","nodeType":"YulBlock","src":"16246:73:19","statements":[{"nativeSrc":"16260:49:19","nodeType":"YulAssignment","src":"16260:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16281:3:19","nodeType":"YulIdentifier","src":"16281:3:19"},{"kind":"number","nativeSrc":"16286:4:19","nodeType":"YulLiteral","src":"16286:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16277:3:19","nodeType":"YulIdentifier","src":"16277:3:19"},"nativeSrc":"16277:14:19","nodeType":"YulFunctionCall","src":"16277:14:19"},{"arguments":[{"name":"pos","nativeSrc":"16297:3:19","nodeType":"YulIdentifier","src":"16297:3:19"},{"kind":"number","nativeSrc":"16302:4:19","nodeType":"YulLiteral","src":"16302:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16293:3:19","nodeType":"YulIdentifier","src":"16293:3:19"},"nativeSrc":"16293:14:19","nodeType":"YulFunctionCall","src":"16293:14:19"}],"functionName":{"name":"add","nativeSrc":"16273:3:19","nodeType":"YulIdentifier","src":"16273:3:19"},"nativeSrc":"16273:35:19","nodeType":"YulFunctionCall","src":"16273:35:19"}],"functionName":{"name":"mload","nativeSrc":"16267:5:19","nodeType":"YulIdentifier","src":"16267:5:19"},"nativeSrc":"16267:42:19","nodeType":"YulFunctionCall","src":"16267:42:19"},"variableNames":[{"name":"res","nativeSrc":"16260:3:19","nodeType":"YulIdentifier","src":"16260:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4057,"isOffset":false,"isSlot":false,"src":"16281:3:19","valueSize":1},{"declaration":4059,"isOffset":false,"isSlot":false,"src":"16297:3:19","valueSize":1},{"declaration":4062,"isOffset":false,"isSlot":false,"src":"16260:3:19","valueSize":1}],"id":4064,"nodeType":"InlineAssembly","src":"16237:82:19"}]},"documentation":{"id":4054,"nodeType":"StructuredDocumentation","src":"15932:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4066,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:19","nodeType":"FunctionDefinition","parameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4057,"mutability":"mutable","name":"arr","nameLocation":"16173:3:19","nodeType":"VariableDeclaration","scope":4066,"src":"16156:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4055,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4056,"nodeType":"ArrayTypeName","src":"16156:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"pos","nameLocation":"16186:3:19","nodeType":"VariableDeclaration","scope":4066,"src":"16178:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:19"},"returnParameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"res","nameLocation":"16222:3:19","nodeType":"VariableDeclaration","scope":4066,"src":"16214:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4061,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:19"},"scope":4126,"src":"16128:197:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4078,"nodeType":"Block","src":"16626:98:19","statements":[{"AST":{"nativeSrc":"16645:73:19","nodeType":"YulBlock","src":"16645:73:19","statements":[{"nativeSrc":"16659:49:19","nodeType":"YulAssignment","src":"16659:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16680:3:19","nodeType":"YulIdentifier","src":"16680:3:19"},{"kind":"number","nativeSrc":"16685:4:19","nodeType":"YulLiteral","src":"16685:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16676:3:19","nodeType":"YulIdentifier","src":"16676:3:19"},"nativeSrc":"16676:14:19","nodeType":"YulFunctionCall","src":"16676:14:19"},{"arguments":[{"name":"pos","nativeSrc":"16696:3:19","nodeType":"YulIdentifier","src":"16696:3:19"},{"kind":"number","nativeSrc":"16701:4:19","nodeType":"YulLiteral","src":"16701:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16692:3:19","nodeType":"YulIdentifier","src":"16692:3:19"},"nativeSrc":"16692:14:19","nodeType":"YulFunctionCall","src":"16692:14:19"}],"functionName":{"name":"add","nativeSrc":"16672:3:19","nodeType":"YulIdentifier","src":"16672:3:19"},"nativeSrc":"16672:35:19","nodeType":"YulFunctionCall","src":"16672:35:19"}],"functionName":{"name":"mload","nativeSrc":"16666:5:19","nodeType":"YulIdentifier","src":"16666:5:19"},"nativeSrc":"16666:42:19","nodeType":"YulFunctionCall","src":"16666:42:19"},"variableNames":[{"name":"res","nativeSrc":"16659:3:19","nodeType":"YulIdentifier","src":"16659:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4070,"isOffset":false,"isSlot":false,"src":"16680:3:19","valueSize":1},{"declaration":4072,"isOffset":false,"isSlot":false,"src":"16696:3:19","valueSize":1},{"declaration":4075,"isOffset":false,"isSlot":false,"src":"16659:3:19","valueSize":1}],"id":4077,"nodeType":"InlineAssembly","src":"16636:82:19"}]},"documentation":{"id":4067,"nodeType":"StructuredDocumentation","src":"16331:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4079,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:19","nodeType":"FunctionDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"arr","nameLocation":"16572:3:19","nodeType":"VariableDeclaration","scope":4079,"src":"16555:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4069,"nodeType":"ArrayTypeName","src":"16555:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4072,"mutability":"mutable","name":"pos","nameLocation":"16585:3:19","nodeType":"VariableDeclaration","scope":4079,"src":"16577:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:19"},"returnParameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"res","nameLocation":"16621:3:19","nodeType":"VariableDeclaration","scope":4079,"src":"16613:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:19"},"scope":4126,"src":"16527:197:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4091,"nodeType":"Block","src":"17025:98:19","statements":[{"AST":{"nativeSrc":"17044:73:19","nodeType":"YulBlock","src":"17044:73:19","statements":[{"nativeSrc":"17058:49:19","nodeType":"YulAssignment","src":"17058:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17079:3:19","nodeType":"YulIdentifier","src":"17079:3:19"},{"kind":"number","nativeSrc":"17084:4:19","nodeType":"YulLiteral","src":"17084:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17075:3:19","nodeType":"YulIdentifier","src":"17075:3:19"},"nativeSrc":"17075:14:19","nodeType":"YulFunctionCall","src":"17075:14:19"},{"arguments":[{"name":"pos","nativeSrc":"17095:3:19","nodeType":"YulIdentifier","src":"17095:3:19"},{"kind":"number","nativeSrc":"17100:4:19","nodeType":"YulLiteral","src":"17100:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17091:3:19","nodeType":"YulIdentifier","src":"17091:3:19"},"nativeSrc":"17091:14:19","nodeType":"YulFunctionCall","src":"17091:14:19"}],"functionName":{"name":"add","nativeSrc":"17071:3:19","nodeType":"YulIdentifier","src":"17071:3:19"},"nativeSrc":"17071:35:19","nodeType":"YulFunctionCall","src":"17071:35:19"}],"functionName":{"name":"mload","nativeSrc":"17065:5:19","nodeType":"YulIdentifier","src":"17065:5:19"},"nativeSrc":"17065:42:19","nodeType":"YulFunctionCall","src":"17065:42:19"},"variableNames":[{"name":"res","nativeSrc":"17058:3:19","nodeType":"YulIdentifier","src":"17058:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4083,"isOffset":false,"isSlot":false,"src":"17079:3:19","valueSize":1},{"declaration":4085,"isOffset":false,"isSlot":false,"src":"17095:3:19","valueSize":1},{"declaration":4088,"isOffset":false,"isSlot":false,"src":"17058:3:19","valueSize":1}],"id":4090,"nodeType":"InlineAssembly","src":"17035:82:19"}]},"documentation":{"id":4080,"nodeType":"StructuredDocumentation","src":"16730:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4092,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:19","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"arr","nameLocation":"16971:3:19","nodeType":"VariableDeclaration","scope":4092,"src":"16954:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4081,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4082,"nodeType":"ArrayTypeName","src":"16954:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4085,"mutability":"mutable","name":"pos","nameLocation":"16984:3:19","nodeType":"VariableDeclaration","scope":4092,"src":"16976:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4084,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:19"},"returnParameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"res","nameLocation":"17020:3:19","nodeType":"VariableDeclaration","scope":4092,"src":"17012:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:19"},"scope":4126,"src":"16926:197:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4102,"nodeType":"Block","src":"17439:88:19","statements":[{"AST":{"nativeSrc":"17474:47:19","nodeType":"YulBlock","src":"17474:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17495:10:19","nodeType":"YulIdentifier","src":"17495:10:19"},{"name":"len","nativeSrc":"17507:3:19","nodeType":"YulIdentifier","src":"17507:3:19"}],"functionName":{"name":"sstore","nativeSrc":"17488:6:19","nodeType":"YulIdentifier","src":"17488:6:19"},"nativeSrc":"17488:23:19","nodeType":"YulFunctionCall","src":"17488:23:19"},"nativeSrc":"17488:23:19","nodeType":"YulExpressionStatement","src":"17488:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4096,"isOffset":false,"isSlot":true,"src":"17495:10:19","suffix":"slot","valueSize":1},{"declaration":4098,"isOffset":false,"isSlot":false,"src":"17507:3:19","valueSize":1}],"flags":["memory-safe"],"id":4101,"nodeType":"InlineAssembly","src":"17449:72:19"}]},"documentation":{"id":4093,"nodeType":"StructuredDocumentation","src":"17129:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4103,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17376:15:19","nodeType":"FunctionDefinition","parameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"array","nameLocation":"17410:5:19","nodeType":"VariableDeclaration","scope":4103,"src":"17392:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4094,"name":"address","nodeType":"ElementaryTypeName","src":"17392:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4095,"nodeType":"ArrayTypeName","src":"17392:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4098,"mutability":"mutable","name":"len","nameLocation":"17425:3:19","nodeType":"VariableDeclaration","scope":4103,"src":"17417:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4097,"name":"uint256","nodeType":"ElementaryTypeName","src":"17417:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17391:38:19"},"returnParameters":{"id":4100,"nodeType":"ParameterList","parameters":[],"src":"17439:0:19"},"scope":4126,"src":"17367:160:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4113,"nodeType":"Block","src":"17843:88:19","statements":[{"AST":{"nativeSrc":"17878:47:19","nodeType":"YulBlock","src":"17878:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17899:10:19","nodeType":"YulIdentifier","src":"17899:10:19"},{"name":"len","nativeSrc":"17911:3:19","nodeType":"YulIdentifier","src":"17911:3:19"}],"functionName":{"name":"sstore","nativeSrc":"17892:6:19","nodeType":"YulIdentifier","src":"17892:6:19"},"nativeSrc":"17892:23:19","nodeType":"YulFunctionCall","src":"17892:23:19"},"nativeSrc":"17892:23:19","nodeType":"YulExpressionStatement","src":"17892:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4107,"isOffset":false,"isSlot":true,"src":"17899:10:19","suffix":"slot","valueSize":1},{"declaration":4109,"isOffset":false,"isSlot":false,"src":"17911:3:19","valueSize":1}],"flags":["memory-safe"],"id":4112,"nodeType":"InlineAssembly","src":"17853:72:19"}]},"documentation":{"id":4104,"nodeType":"StructuredDocumentation","src":"17533:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4114,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17780:15:19","nodeType":"FunctionDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"mutability":"mutable","name":"array","nameLocation":"17814:5:19","nodeType":"VariableDeclaration","scope":4114,"src":"17796:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17796:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4106,"nodeType":"ArrayTypeName","src":"17796:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4109,"mutability":"mutable","name":"len","nameLocation":"17829:3:19","nodeType":"VariableDeclaration","scope":4114,"src":"17821:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4108,"name":"uint256","nodeType":"ElementaryTypeName","src":"17821:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17795:38:19"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[],"src":"17843:0:19"},"scope":4126,"src":"17771:160:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4124,"nodeType":"Block","src":"18247:88:19","statements":[{"AST":{"nativeSrc":"18282:47:19","nodeType":"YulBlock","src":"18282:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"18303:10:19","nodeType":"YulIdentifier","src":"18303:10:19"},{"name":"len","nativeSrc":"18315:3:19","nodeType":"YulIdentifier","src":"18315:3:19"}],"functionName":{"name":"sstore","nativeSrc":"18296:6:19","nodeType":"YulIdentifier","src":"18296:6:19"},"nativeSrc":"18296:23:19","nodeType":"YulFunctionCall","src":"18296:23:19"},"nativeSrc":"18296:23:19","nodeType":"YulExpressionStatement","src":"18296:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4118,"isOffset":false,"isSlot":true,"src":"18303:10:19","suffix":"slot","valueSize":1},{"declaration":4120,"isOffset":false,"isSlot":false,"src":"18315:3:19","valueSize":1}],"flags":["memory-safe"],"id":4123,"nodeType":"InlineAssembly","src":"18257:72:19"}]},"documentation":{"id":4115,"nodeType":"StructuredDocumentation","src":"17937:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4125,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18184:15:19","nodeType":"FunctionDefinition","parameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"array","nameLocation":"18218:5:19","nodeType":"VariableDeclaration","scope":4125,"src":"18200:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"18200:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4117,"nodeType":"ArrayTypeName","src":"18200:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4120,"mutability":"mutable","name":"len","nameLocation":"18233:3:19","nodeType":"VariableDeclaration","scope":4125,"src":"18225:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"18225:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18199:38:19"},"returnParameters":{"id":4122,"nodeType":"ParameterList","parameters":[],"src":"18247:0:19"},"scope":4126,"src":"18175:160:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4127,"src":"459:17878:19","usedErrors":[],"usedEvents":[]}],"src":"183:18155:19"},"id":19},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[4158]},"id":4159,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4128,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":4129,"nodeType":"StructuredDocumentation","src":"131:92:20","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":4158,"linearizedBaseContracts":[4158],"name":"Comparators","nameLocation":"232:11:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":4142,"nodeType":"Block","src":"313:29:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4138,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"330:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4139,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"334:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4137,"id":4141,"nodeType":"Return","src":"323:12:20"}]},"id":4143,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:20","nodeType":"FunctionDefinition","parameters":{"id":4134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"a","nameLocation":"270:1:20","nodeType":"VariableDeclaration","scope":4143,"src":"262:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4130,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4133,"mutability":"mutable","name":"b","nameLocation":"281:1:20","nodeType":"VariableDeclaration","scope":4143,"src":"273:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:20"},"returnParameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4143,"src":"307:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4135,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:20"},"scope":4158,"src":"250:92:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4156,"nodeType":"Block","src":"411:29:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"428:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4153,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"432:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4151,"id":4155,"nodeType":"Return","src":"421:12:20"}]},"id":4157,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:20","nodeType":"FunctionDefinition","parameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"a","nameLocation":"368:1:20","nodeType":"VariableDeclaration","scope":4157,"src":"360:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4147,"mutability":"mutable","name":"b","nameLocation":"379:1:20","nodeType":"VariableDeclaration","scope":4157,"src":"371:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4146,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:20"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4157,"src":"405:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4149,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:20"},"scope":4158,"src":"348:92:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4159,"src":"224:218:20","usedErrors":[],"usedEvents":[]}],"src":"105:338:20"},"id":20},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[4180]},"id":4181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4160,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":4161,"nodeType":"StructuredDocumentation","src":"126:284:21","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":4180,"linearizedBaseContracts":[4180],"name":"Errors","nameLocation":"419:6:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4162,"nodeType":"StructuredDocumentation","src":"432:94:21","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":4168,"name":"InsufficientBalance","nameLocation":"537:19:21","nodeType":"ErrorDefinition","parameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"balance","nameLocation":"565:7:21","nodeType":"VariableDeclaration","scope":4168,"src":"557:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4163,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4166,"mutability":"mutable","name":"needed","nameLocation":"582:6:21","nodeType":"VariableDeclaration","scope":4168,"src":"574:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4165,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:21"},"src":"531:59:21"},{"documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"596:89:21","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":4171,"name":"FailedCall","nameLocation":"696:10:21","nodeType":"ErrorDefinition","parameters":{"id":4170,"nodeType":"ParameterList","parameters":[],"src":"706:2:21"},"src":"690:19:21"},{"documentation":{"id":4172,"nodeType":"StructuredDocumentation","src":"715:46:21","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":4174,"name":"FailedDeployment","nameLocation":"772:16:21","nodeType":"ErrorDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[],"src":"788:2:21"},"src":"766:25:21"},{"documentation":{"id":4175,"nodeType":"StructuredDocumentation","src":"797:58:21","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":4179,"name":"MissingPrecompile","nameLocation":"866:17:21","nodeType":"ErrorDefinition","parameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4179,"src":"884:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4176,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:21"},"src":"860:33:21"}],"scope":4181,"src":"411:484:21","usedErrors":[4168,4171,4174,4179],"usedEvents":[]}],"src":"100:796:21"},"id":21},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[4232]},"id":4233,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4182,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":4183,"nodeType":"StructuredDocumentation","src":"125:489:22","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":4232,"linearizedBaseContracts":[4232],"name":"Panic","nameLocation":"665:5:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":4184,"nodeType":"StructuredDocumentation","src":"677:36:22","text":"@dev generic / unspecified error"},"id":4187,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:22","nodeType":"VariableDeclaration","scope":4232,"src":"718:40:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":4186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":4188,"nodeType":"StructuredDocumentation","src":"764:37:22","text":"@dev used by the assert() builtin"},"id":4191,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:22","nodeType":"VariableDeclaration","scope":4232,"src":"806:39:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4189,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":4192,"nodeType":"StructuredDocumentation","src":"851:41:22","text":"@dev arithmetic underflow or overflow"},"id":4195,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:22","nodeType":"VariableDeclaration","scope":4232,"src":"897:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:22","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":4196,"nodeType":"StructuredDocumentation","src":"950:35:22","text":"@dev division or modulo by zero"},"id":4199,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:22","nodeType":"VariableDeclaration","scope":4232,"src":"990:49:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4197,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:22","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":4200,"nodeType":"StructuredDocumentation","src":"1045:30:22","text":"@dev enum conversion error"},"id":4203,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:22","nodeType":"VariableDeclaration","scope":4232,"src":"1080:54:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:22","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":4204,"nodeType":"StructuredDocumentation","src":"1140:36:22","text":"@dev invalid encoding in storage"},"id":4207,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:22","nodeType":"VariableDeclaration","scope":4232,"src":"1181:55:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":4206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:22","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":4208,"nodeType":"StructuredDocumentation","src":"1242:24:22","text":"@dev empty array pop"},"id":4211,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:22","nodeType":"VariableDeclaration","scope":4232,"src":"1271:48:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:22","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":4212,"nodeType":"StructuredDocumentation","src":"1325:35:22","text":"@dev array out of bounds access"},"id":4215,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:22","nodeType":"VariableDeclaration","scope":4232,"src":"1365:52:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:22","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":4216,"nodeType":"StructuredDocumentation","src":"1423:65:22","text":"@dev resource error (too large allocation or too large array)"},"id":4219,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:22","nodeType":"VariableDeclaration","scope":4232,"src":"1493:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:22","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":4220,"nodeType":"StructuredDocumentation","src":"1546:42:22","text":"@dev calling invalid internal function"},"id":4223,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:22","nodeType":"VariableDeclaration","scope":4232,"src":"1593:58:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:22","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":4230,"nodeType":"Block","src":"1819:151:22","statements":[{"AST":{"nativeSrc":"1854:110:22","nodeType":"YulBlock","src":"1854:110:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:22","nodeType":"YulLiteral","src":"1875:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:22","nodeType":"YulLiteral","src":"1881:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:22","nodeType":"YulIdentifier","src":"1868:6:22"},"nativeSrc":"1868:24:22","nodeType":"YulFunctionCall","src":"1868:24:22"},"nativeSrc":"1868:24:22","nodeType":"YulExpressionStatement","src":"1868:24:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:22","nodeType":"YulLiteral","src":"1912:4:22","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:22","nodeType":"YulIdentifier","src":"1918:4:22"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:22","nodeType":"YulIdentifier","src":"1905:6:22"},"nativeSrc":"1905:18:22","nodeType":"YulFunctionCall","src":"1905:18:22"},"nativeSrc":"1905:18:22","nodeType":"YulExpressionStatement","src":"1905:18:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:22","nodeType":"YulLiteral","src":"1943:4:22","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:22","nodeType":"YulLiteral","src":"1949:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:22","nodeType":"YulIdentifier","src":"1936:6:22"},"nativeSrc":"1936:18:22","nodeType":"YulFunctionCall","src":"1936:18:22"},"nativeSrc":"1936:18:22","nodeType":"YulExpressionStatement","src":"1936:18:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":4226,"isOffset":false,"isSlot":false,"src":"1918:4:22","valueSize":1}],"flags":["memory-safe"],"id":4229,"nodeType":"InlineAssembly","src":"1829:135:22"}]},"documentation":{"id":4224,"nodeType":"StructuredDocumentation","src":"1658:113:22","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":4231,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:22","nodeType":"FunctionDefinition","parameters":{"id":4227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4226,"mutability":"mutable","name":"code","nameLocation":"1799:4:22","nodeType":"VariableDeclaration","scope":4231,"src":"1791:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4225,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:22"},"returnParameters":{"id":4228,"nodeType":"ParameterList","parameters":[],"src":"1819:0:22"},"scope":4232,"src":"1776:194:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4233,"src":"657:1315:22","usedErrors":[],"usedEvents":[]}],"src":"99:1874:22"},"id":22},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[4362]},"id":4363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4234,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":4235,"nodeType":"StructuredDocumentation","src":"225:1373:23","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":4362,"linearizedBaseContracts":[4362],"name":"SlotDerivation","nameLocation":"1607:14:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":4244,"nodeType":"Block","src":"1790:194:23","statements":[{"AST":{"nativeSrc":"1825:153:23","nodeType":"YulBlock","src":"1825:153:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:4:23","nodeType":"YulLiteral","src":"1846:4:23","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1870:9:23","nodeType":"YulIdentifier","src":"1870:9:23"},{"kind":"number","nativeSrc":"1881:4:23","nodeType":"YulLiteral","src":"1881:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1866:3:23","nodeType":"YulIdentifier","src":"1866:3:23"},"nativeSrc":"1866:20:23","nodeType":"YulFunctionCall","src":"1866:20:23"},{"arguments":[{"name":"namespace","nativeSrc":"1894:9:23","nodeType":"YulIdentifier","src":"1894:9:23"}],"functionName":{"name":"mload","nativeSrc":"1888:5:23","nodeType":"YulIdentifier","src":"1888:5:23"},"nativeSrc":"1888:16:23","nodeType":"YulFunctionCall","src":"1888:16:23"}],"functionName":{"name":"keccak256","nativeSrc":"1856:9:23","nodeType":"YulIdentifier","src":"1856:9:23"},"nativeSrc":"1856:49:23","nodeType":"YulFunctionCall","src":"1856:49:23"},{"kind":"number","nativeSrc":"1907:1:23","nodeType":"YulLiteral","src":"1907:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1852:3:23","nodeType":"YulIdentifier","src":"1852:3:23"},"nativeSrc":"1852:57:23","nodeType":"YulFunctionCall","src":"1852:57:23"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:23","nodeType":"YulIdentifier","src":"1839:6:23"},"nativeSrc":"1839:71:23","nodeType":"YulFunctionCall","src":"1839:71:23"},"nativeSrc":"1839:71:23","nodeType":"YulExpressionStatement","src":"1839:71:23"},{"nativeSrc":"1923:45:23","nodeType":"YulAssignment","src":"1923:45:23","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1945:4:23","nodeType":"YulLiteral","src":"1945:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1951:4:23","nodeType":"YulLiteral","src":"1951:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1935:9:23","nodeType":"YulIdentifier","src":"1935:9:23"},"nativeSrc":"1935:21:23","nodeType":"YulFunctionCall","src":"1935:21:23"},{"arguments":[{"kind":"number","nativeSrc":"1962:4:23","nodeType":"YulLiteral","src":"1962:4:23","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1958:3:23","nodeType":"YulIdentifier","src":"1958:3:23"},"nativeSrc":"1958:9:23","nodeType":"YulFunctionCall","src":"1958:9:23"}],"functionName":{"name":"and","nativeSrc":"1931:3:23","nodeType":"YulIdentifier","src":"1931:3:23"},"nativeSrc":"1931:37:23","nodeType":"YulFunctionCall","src":"1931:37:23"},"variableNames":[{"name":"slot","nativeSrc":"1923:4:23","nodeType":"YulIdentifier","src":"1923:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4238,"isOffset":false,"isSlot":false,"src":"1870:9:23","valueSize":1},{"declaration":4238,"isOffset":false,"isSlot":false,"src":"1894:9:23","valueSize":1},{"declaration":4241,"isOffset":false,"isSlot":false,"src":"1923:4:23","valueSize":1}],"flags":["memory-safe"],"id":4243,"nodeType":"InlineAssembly","src":"1800:178:23"}]},"documentation":{"id":4236,"nodeType":"StructuredDocumentation","src":"1628:74:23","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":4245,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:23","nodeType":"FunctionDefinition","parameters":{"id":4239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4238,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:23","nodeType":"VariableDeclaration","scope":4245,"src":"1728:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4237,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:23"},"returnParameters":{"id":4242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4241,"mutability":"mutable","name":"slot","nameLocation":"1784:4:23","nodeType":"VariableDeclaration","scope":4245,"src":"1776:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:23"},"scope":4362,"src":"1707:277:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4266,"nodeType":"Block","src":"2176:86:23","statements":[{"id":4265,"nodeType":"UncheckedBlock","src":"2186:70:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4259,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"2233:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:23","typeDescriptions":{}}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4261,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"2241:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:23","typeDescriptions":{}}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4254,"id":4264,"nodeType":"Return","src":"2210:35:23"}]}]},"documentation":{"id":4246,"nodeType":"StructuredDocumentation","src":"1990:99:23","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":4267,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:23","nodeType":"FunctionDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"slot","nameLocation":"2118:4:23","nodeType":"VariableDeclaration","scope":4267,"src":"2110:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"pos","nameLocation":"2132:3:23","nodeType":"VariableDeclaration","scope":4267,"src":"2124:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:23"},"returnParameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4253,"mutability":"mutable","name":"result","nameLocation":"2168:6:23","nodeType":"VariableDeclaration","scope":4267,"src":"2160:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:23"},"scope":4362,"src":"2094:168:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4276,"nodeType":"Block","src":"2465:127:23","statements":[{"AST":{"nativeSrc":"2500:86:23","nodeType":"YulBlock","src":"2500:86:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:4:23","nodeType":"YulLiteral","src":"2521:4:23","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2527:4:23","nodeType":"YulIdentifier","src":"2527:4:23"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:23","nodeType":"YulIdentifier","src":"2514:6:23"},"nativeSrc":"2514:18:23","nodeType":"YulFunctionCall","src":"2514:18:23"},"nativeSrc":"2514:18:23","nodeType":"YulExpressionStatement","src":"2514:18:23"},{"nativeSrc":"2545:31:23","nodeType":"YulAssignment","src":"2545:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"2565:4:23","nodeType":"YulLiteral","src":"2565:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2571:4:23","nodeType":"YulLiteral","src":"2571:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2555:9:23","nodeType":"YulIdentifier","src":"2555:9:23"},"nativeSrc":"2555:21:23","nodeType":"YulFunctionCall","src":"2555:21:23"},"variableNames":[{"name":"result","nativeSrc":"2545:6:23","nodeType":"YulIdentifier","src":"2545:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4273,"isOffset":false,"isSlot":false,"src":"2545:6:23","valueSize":1},{"declaration":4270,"isOffset":false,"isSlot":false,"src":"2527:4:23","valueSize":1}],"flags":["memory-safe"],"id":4275,"nodeType":"InlineAssembly","src":"2475:111:23"}]},"documentation":{"id":4268,"nodeType":"StructuredDocumentation","src":"2268:118:23","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":4277,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:23","nodeType":"FunctionDefinition","parameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"slot","nameLocation":"2420:4:23","nodeType":"VariableDeclaration","scope":4277,"src":"2412:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:23"},"returnParameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"result","nameLocation":"2457:6:23","nodeType":"VariableDeclaration","scope":4277,"src":"2449:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:23"},"scope":4362,"src":"2391:201:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4288,"nodeType":"Block","src":"2770:179:23","statements":[{"AST":{"nativeSrc":"2805:138:23","nodeType":"YulBlock","src":"2805:138:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2826:4:23","nodeType":"YulLiteral","src":"2826:4:23","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2836:3:23","nodeType":"YulIdentifier","src":"2836:3:23"},{"arguments":[{"kind":"number","nativeSrc":"2845:2:23","nodeType":"YulLiteral","src":"2845:2:23","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2853:1:23","nodeType":"YulLiteral","src":"2853:1:23","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2849:3:23","nodeType":"YulIdentifier","src":"2849:3:23"},"nativeSrc":"2849:6:23","nodeType":"YulFunctionCall","src":"2849:6:23"}],"functionName":{"name":"shr","nativeSrc":"2841:3:23","nodeType":"YulIdentifier","src":"2841:3:23"},"nativeSrc":"2841:15:23","nodeType":"YulFunctionCall","src":"2841:15:23"}],"functionName":{"name":"and","nativeSrc":"2832:3:23","nodeType":"YulIdentifier","src":"2832:3:23"},"nativeSrc":"2832:25:23","nodeType":"YulFunctionCall","src":"2832:25:23"}],"functionName":{"name":"mstore","nativeSrc":"2819:6:23","nodeType":"YulIdentifier","src":"2819:6:23"},"nativeSrc":"2819:39:23","nodeType":"YulFunctionCall","src":"2819:39:23"},"nativeSrc":"2819:39:23","nodeType":"YulExpressionStatement","src":"2819:39:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:4:23","nodeType":"YulLiteral","src":"2878:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2884:4:23","nodeType":"YulIdentifier","src":"2884:4:23"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:23","nodeType":"YulIdentifier","src":"2871:6:23"},"nativeSrc":"2871:18:23","nodeType":"YulFunctionCall","src":"2871:18:23"},"nativeSrc":"2871:18:23","nodeType":"YulExpressionStatement","src":"2871:18:23"},{"nativeSrc":"2902:31:23","nodeType":"YulAssignment","src":"2902:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"2922:4:23","nodeType":"YulLiteral","src":"2922:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2928:4:23","nodeType":"YulLiteral","src":"2928:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2912:9:23","nodeType":"YulIdentifier","src":"2912:9:23"},"nativeSrc":"2912:21:23","nodeType":"YulFunctionCall","src":"2912:21:23"},"variableNames":[{"name":"result","nativeSrc":"2902:6:23","nodeType":"YulIdentifier","src":"2902:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4282,"isOffset":false,"isSlot":false,"src":"2836:3:23","valueSize":1},{"declaration":4285,"isOffset":false,"isSlot":false,"src":"2902:6:23","valueSize":1},{"declaration":4280,"isOffset":false,"isSlot":false,"src":"2884:4:23","valueSize":1}],"flags":["memory-safe"],"id":4287,"nodeType":"InlineAssembly","src":"2780:163:23"}]},"documentation":{"id":4278,"nodeType":"StructuredDocumentation","src":"2598:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4289,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:23","nodeType":"FunctionDefinition","parameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"slot","nameLocation":"2712:4:23","nodeType":"VariableDeclaration","scope":4289,"src":"2704:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4282,"mutability":"mutable","name":"key","nameLocation":"2726:3:23","nodeType":"VariableDeclaration","scope":4289,"src":"2718:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4281,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:23"},"returnParameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"result","nameLocation":"2762:6:23","nodeType":"VariableDeclaration","scope":4289,"src":"2754:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:23"},"scope":4362,"src":"2681:268:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4300,"nodeType":"Block","src":"3124:173:23","statements":[{"AST":{"nativeSrc":"3159:132:23","nodeType":"YulBlock","src":"3159:132:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3180:4:23","nodeType":"YulLiteral","src":"3180:4:23","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3200:3:23","nodeType":"YulIdentifier","src":"3200:3:23"}],"functionName":{"name":"iszero","nativeSrc":"3193:6:23","nodeType":"YulIdentifier","src":"3193:6:23"},"nativeSrc":"3193:11:23","nodeType":"YulFunctionCall","src":"3193:11:23"}],"functionName":{"name":"iszero","nativeSrc":"3186:6:23","nodeType":"YulIdentifier","src":"3186:6:23"},"nativeSrc":"3186:19:23","nodeType":"YulFunctionCall","src":"3186:19:23"}],"functionName":{"name":"mstore","nativeSrc":"3173:6:23","nodeType":"YulIdentifier","src":"3173:6:23"},"nativeSrc":"3173:33:23","nodeType":"YulFunctionCall","src":"3173:33:23"},"nativeSrc":"3173:33:23","nodeType":"YulExpressionStatement","src":"3173:33:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3226:4:23","nodeType":"YulLiteral","src":"3226:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3232:4:23","nodeType":"YulIdentifier","src":"3232:4:23"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:23","nodeType":"YulIdentifier","src":"3219:6:23"},"nativeSrc":"3219:18:23","nodeType":"YulFunctionCall","src":"3219:18:23"},"nativeSrc":"3219:18:23","nodeType":"YulExpressionStatement","src":"3219:18:23"},{"nativeSrc":"3250:31:23","nodeType":"YulAssignment","src":"3250:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"3270:4:23","nodeType":"YulLiteral","src":"3270:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3276:4:23","nodeType":"YulLiteral","src":"3276:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3260:9:23","nodeType":"YulIdentifier","src":"3260:9:23"},"nativeSrc":"3260:21:23","nodeType":"YulFunctionCall","src":"3260:21:23"},"variableNames":[{"name":"result","nativeSrc":"3250:6:23","nodeType":"YulIdentifier","src":"3250:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4294,"isOffset":false,"isSlot":false,"src":"3200:3:23","valueSize":1},{"declaration":4297,"isOffset":false,"isSlot":false,"src":"3250:6:23","valueSize":1},{"declaration":4292,"isOffset":false,"isSlot":false,"src":"3232:4:23","valueSize":1}],"flags":["memory-safe"],"id":4299,"nodeType":"InlineAssembly","src":"3134:157:23"}]},"documentation":{"id":4290,"nodeType":"StructuredDocumentation","src":"2955:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:23","nodeType":"FunctionDefinition","parameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4292,"mutability":"mutable","name":"slot","nameLocation":"3069:4:23","nodeType":"VariableDeclaration","scope":4301,"src":"3061:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"key","nameLocation":"3080:3:23","nodeType":"VariableDeclaration","scope":4301,"src":"3075:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4293,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:23"},"returnParameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"result","nameLocation":"3116:6:23","nodeType":"VariableDeclaration","scope":4301,"src":"3108:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:23"},"scope":4362,"src":"3038:259:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4312,"nodeType":"Block","src":"3475:157:23","statements":[{"AST":{"nativeSrc":"3510:116:23","nodeType":"YulBlock","src":"3510:116:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3531:4:23","nodeType":"YulLiteral","src":"3531:4:23","type":"","value":"0x00"},{"name":"key","nativeSrc":"3537:3:23","nodeType":"YulIdentifier","src":"3537:3:23"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:23","nodeType":"YulIdentifier","src":"3524:6:23"},"nativeSrc":"3524:17:23","nodeType":"YulFunctionCall","src":"3524:17:23"},"nativeSrc":"3524:17:23","nodeType":"YulExpressionStatement","src":"3524:17:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:4:23","nodeType":"YulLiteral","src":"3561:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3567:4:23","nodeType":"YulIdentifier","src":"3567:4:23"}],"functionName":{"name":"mstore","nativeSrc":"3554:6:23","nodeType":"YulIdentifier","src":"3554:6:23"},"nativeSrc":"3554:18:23","nodeType":"YulFunctionCall","src":"3554:18:23"},"nativeSrc":"3554:18:23","nodeType":"YulExpressionStatement","src":"3554:18:23"},{"nativeSrc":"3585:31:23","nodeType":"YulAssignment","src":"3585:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"3605:4:23","nodeType":"YulLiteral","src":"3605:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3611:4:23","nodeType":"YulLiteral","src":"3611:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3595:9:23","nodeType":"YulIdentifier","src":"3595:9:23"},"nativeSrc":"3595:21:23","nodeType":"YulFunctionCall","src":"3595:21:23"},"variableNames":[{"name":"result","nativeSrc":"3585:6:23","nodeType":"YulIdentifier","src":"3585:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4306,"isOffset":false,"isSlot":false,"src":"3537:3:23","valueSize":1},{"declaration":4309,"isOffset":false,"isSlot":false,"src":"3585:6:23","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"3567:4:23","valueSize":1}],"flags":["memory-safe"],"id":4311,"nodeType":"InlineAssembly","src":"3485:141:23"}]},"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"3303:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4313,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:23","nodeType":"FunctionDefinition","parameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"slot","nameLocation":"3417:4:23","nodeType":"VariableDeclaration","scope":4313,"src":"3409:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4306,"mutability":"mutable","name":"key","nameLocation":"3431:3:23","nodeType":"VariableDeclaration","scope":4313,"src":"3423:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:23"},"returnParameters":{"id":4310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"result","nameLocation":"3467:6:23","nodeType":"VariableDeclaration","scope":4313,"src":"3459:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:23"},"scope":4362,"src":"3386:246:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4324,"nodeType":"Block","src":"3810:157:23","statements":[{"AST":{"nativeSrc":"3845:116:23","nodeType":"YulBlock","src":"3845:116:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:4:23","nodeType":"YulLiteral","src":"3866:4:23","type":"","value":"0x00"},{"name":"key","nativeSrc":"3872:3:23","nodeType":"YulIdentifier","src":"3872:3:23"}],"functionName":{"name":"mstore","nativeSrc":"3859:6:23","nodeType":"YulIdentifier","src":"3859:6:23"},"nativeSrc":"3859:17:23","nodeType":"YulFunctionCall","src":"3859:17:23"},"nativeSrc":"3859:17:23","nodeType":"YulExpressionStatement","src":"3859:17:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:4:23","nodeType":"YulLiteral","src":"3896:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3902:4:23","nodeType":"YulIdentifier","src":"3902:4:23"}],"functionName":{"name":"mstore","nativeSrc":"3889:6:23","nodeType":"YulIdentifier","src":"3889:6:23"},"nativeSrc":"3889:18:23","nodeType":"YulFunctionCall","src":"3889:18:23"},"nativeSrc":"3889:18:23","nodeType":"YulExpressionStatement","src":"3889:18:23"},{"nativeSrc":"3920:31:23","nodeType":"YulAssignment","src":"3920:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"3940:4:23","nodeType":"YulLiteral","src":"3940:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3946:4:23","nodeType":"YulLiteral","src":"3946:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3930:9:23","nodeType":"YulIdentifier","src":"3930:9:23"},"nativeSrc":"3930:21:23","nodeType":"YulFunctionCall","src":"3930:21:23"},"variableNames":[{"name":"result","nativeSrc":"3920:6:23","nodeType":"YulIdentifier","src":"3920:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4318,"isOffset":false,"isSlot":false,"src":"3872:3:23","valueSize":1},{"declaration":4321,"isOffset":false,"isSlot":false,"src":"3920:6:23","valueSize":1},{"declaration":4316,"isOffset":false,"isSlot":false,"src":"3902:4:23","valueSize":1}],"flags":["memory-safe"],"id":4323,"nodeType":"InlineAssembly","src":"3820:141:23"}]},"documentation":{"id":4314,"nodeType":"StructuredDocumentation","src":"3638:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4325,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:23","nodeType":"FunctionDefinition","parameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"slot","nameLocation":"3752:4:23","nodeType":"VariableDeclaration","scope":4325,"src":"3744:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4318,"mutability":"mutable","name":"key","nameLocation":"3766:3:23","nodeType":"VariableDeclaration","scope":4325,"src":"3758:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:23"},"returnParameters":{"id":4322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4321,"mutability":"mutable","name":"result","nameLocation":"3802:6:23","nodeType":"VariableDeclaration","scope":4325,"src":"3794:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:23"},"scope":4362,"src":"3721:246:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4336,"nodeType":"Block","src":"4144:157:23","statements":[{"AST":{"nativeSrc":"4179:116:23","nodeType":"YulBlock","src":"4179:116:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4200:4:23","nodeType":"YulLiteral","src":"4200:4:23","type":"","value":"0x00"},{"name":"key","nativeSrc":"4206:3:23","nodeType":"YulIdentifier","src":"4206:3:23"}],"functionName":{"name":"mstore","nativeSrc":"4193:6:23","nodeType":"YulIdentifier","src":"4193:6:23"},"nativeSrc":"4193:17:23","nodeType":"YulFunctionCall","src":"4193:17:23"},"nativeSrc":"4193:17:23","nodeType":"YulExpressionStatement","src":"4193:17:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4230:4:23","nodeType":"YulLiteral","src":"4230:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4236:4:23","nodeType":"YulIdentifier","src":"4236:4:23"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:23","nodeType":"YulIdentifier","src":"4223:6:23"},"nativeSrc":"4223:18:23","nodeType":"YulFunctionCall","src":"4223:18:23"},"nativeSrc":"4223:18:23","nodeType":"YulExpressionStatement","src":"4223:18:23"},{"nativeSrc":"4254:31:23","nodeType":"YulAssignment","src":"4254:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"4274:4:23","nodeType":"YulLiteral","src":"4274:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4280:4:23","nodeType":"YulLiteral","src":"4280:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4264:9:23","nodeType":"YulIdentifier","src":"4264:9:23"},"nativeSrc":"4264:21:23","nodeType":"YulFunctionCall","src":"4264:21:23"},"variableNames":[{"name":"result","nativeSrc":"4254:6:23","nodeType":"YulIdentifier","src":"4254:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4330,"isOffset":false,"isSlot":false,"src":"4206:3:23","valueSize":1},{"declaration":4333,"isOffset":false,"isSlot":false,"src":"4254:6:23","valueSize":1},{"declaration":4328,"isOffset":false,"isSlot":false,"src":"4236:4:23","valueSize":1}],"flags":["memory-safe"],"id":4335,"nodeType":"InlineAssembly","src":"4154:141:23"}]},"documentation":{"id":4326,"nodeType":"StructuredDocumentation","src":"3973:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4337,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:23","nodeType":"FunctionDefinition","parameters":{"id":4331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"slot","nameLocation":"4087:4:23","nodeType":"VariableDeclaration","scope":4337,"src":"4079:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4330,"mutability":"mutable","name":"key","nameLocation":"4100:3:23","nodeType":"VariableDeclaration","scope":4337,"src":"4093:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4329,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:23"},"returnParameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4333,"mutability":"mutable","name":"result","nameLocation":"4136:6:23","nodeType":"VariableDeclaration","scope":4337,"src":"4128:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:23"},"scope":4362,"src":"4056:245:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4348,"nodeType":"Block","src":"4485:326:23","statements":[{"AST":{"nativeSrc":"4520:285:23","nodeType":"YulBlock","src":"4520:285:23","statements":[{"nativeSrc":"4534:24:23","nodeType":"YulVariableDeclaration","src":"4534:24:23","value":{"arguments":[{"name":"key","nativeSrc":"4554:3:23","nodeType":"YulIdentifier","src":"4554:3:23"}],"functionName":{"name":"mload","nativeSrc":"4548:5:23","nodeType":"YulIdentifier","src":"4548:5:23"},"nativeSrc":"4548:10:23","nodeType":"YulFunctionCall","src":"4548:10:23"},"variables":[{"name":"length","nativeSrc":"4538:6:23","nodeType":"YulTypedName","src":"4538:6:23","type":""}]},{"nativeSrc":"4571:27:23","nodeType":"YulVariableDeclaration","src":"4571:27:23","value":{"arguments":[{"name":"key","nativeSrc":"4588:3:23","nodeType":"YulIdentifier","src":"4588:3:23"},{"kind":"number","nativeSrc":"4593:4:23","nodeType":"YulLiteral","src":"4593:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4584:3:23","nodeType":"YulIdentifier","src":"4584:3:23"},"nativeSrc":"4584:14:23","nodeType":"YulFunctionCall","src":"4584:14:23"},"variables":[{"name":"begin","nativeSrc":"4575:5:23","nodeType":"YulTypedName","src":"4575:5:23","type":""}]},{"nativeSrc":"4611:29:23","nodeType":"YulVariableDeclaration","src":"4611:29:23","value":{"arguments":[{"name":"begin","nativeSrc":"4626:5:23","nodeType":"YulIdentifier","src":"4626:5:23"},{"name":"length","nativeSrc":"4633:6:23","nodeType":"YulIdentifier","src":"4633:6:23"}],"functionName":{"name":"add","nativeSrc":"4622:3:23","nodeType":"YulIdentifier","src":"4622:3:23"},"nativeSrc":"4622:18:23","nodeType":"YulFunctionCall","src":"4622:18:23"},"variables":[{"name":"end","nativeSrc":"4615:3:23","nodeType":"YulTypedName","src":"4615:3:23","type":""}]},{"nativeSrc":"4653:23:23","nodeType":"YulVariableDeclaration","src":"4653:23:23","value":{"arguments":[{"name":"end","nativeSrc":"4672:3:23","nodeType":"YulIdentifier","src":"4672:3:23"}],"functionName":{"name":"mload","nativeSrc":"4666:5:23","nodeType":"YulIdentifier","src":"4666:5:23"},"nativeSrc":"4666:10:23","nodeType":"YulFunctionCall","src":"4666:10:23"},"variables":[{"name":"cache","nativeSrc":"4657:5:23","nodeType":"YulTypedName","src":"4657:5:23","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4696:3:23","nodeType":"YulIdentifier","src":"4696:3:23"},{"name":"slot","nativeSrc":"4701:4:23","nodeType":"YulIdentifier","src":"4701:4:23"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:23","nodeType":"YulIdentifier","src":"4689:6:23"},"nativeSrc":"4689:17:23","nodeType":"YulFunctionCall","src":"4689:17:23"},"nativeSrc":"4689:17:23","nodeType":"YulExpressionStatement","src":"4689:17:23"},{"nativeSrc":"4719:45:23","nodeType":"YulAssignment","src":"4719:45:23","value":{"arguments":[{"name":"begin","nativeSrc":"4739:5:23","nodeType":"YulIdentifier","src":"4739:5:23"},{"arguments":[{"name":"length","nativeSrc":"4750:6:23","nodeType":"YulIdentifier","src":"4750:6:23"},{"kind":"number","nativeSrc":"4758:4:23","nodeType":"YulLiteral","src":"4758:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4746:3:23","nodeType":"YulIdentifier","src":"4746:3:23"},"nativeSrc":"4746:17:23","nodeType":"YulFunctionCall","src":"4746:17:23"}],"functionName":{"name":"keccak256","nativeSrc":"4729:9:23","nodeType":"YulIdentifier","src":"4729:9:23"},"nativeSrc":"4729:35:23","nodeType":"YulFunctionCall","src":"4729:35:23"},"variableNames":[{"name":"result","nativeSrc":"4719:6:23","nodeType":"YulIdentifier","src":"4719:6:23"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4784:3:23","nodeType":"YulIdentifier","src":"4784:3:23"},{"name":"cache","nativeSrc":"4789:5:23","nodeType":"YulIdentifier","src":"4789:5:23"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:23","nodeType":"YulIdentifier","src":"4777:6:23"},"nativeSrc":"4777:18:23","nodeType":"YulFunctionCall","src":"4777:18:23"},"nativeSrc":"4777:18:23","nodeType":"YulExpressionStatement","src":"4777:18:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":4342,"isOffset":false,"isSlot":false,"src":"4554:3:23","valueSize":1},{"declaration":4342,"isOffset":false,"isSlot":false,"src":"4588:3:23","valueSize":1},{"declaration":4345,"isOffset":false,"isSlot":false,"src":"4719:6:23","valueSize":1},{"declaration":4340,"isOffset":false,"isSlot":false,"src":"4701:4:23","valueSize":1}],"flags":["memory-safe"],"id":4347,"nodeType":"InlineAssembly","src":"4495:310:23"}]},"documentation":{"id":4338,"nodeType":"StructuredDocumentation","src":"4307:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4349,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:23","nodeType":"FunctionDefinition","parameters":{"id":4343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4340,"mutability":"mutable","name":"slot","nameLocation":"4421:4:23","nodeType":"VariableDeclaration","scope":4349,"src":"4413:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4342,"mutability":"mutable","name":"key","nameLocation":"4441:3:23","nodeType":"VariableDeclaration","scope":4349,"src":"4427:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4341,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:23"},"returnParameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"result","nameLocation":"4477:6:23","nodeType":"VariableDeclaration","scope":4349,"src":"4469:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:23"},"scope":4362,"src":"4390:421:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4360,"nodeType":"Block","src":"4994:326:23","statements":[{"AST":{"nativeSrc":"5029:285:23","nodeType":"YulBlock","src":"5029:285:23","statements":[{"nativeSrc":"5043:24:23","nodeType":"YulVariableDeclaration","src":"5043:24:23","value":{"arguments":[{"name":"key","nativeSrc":"5063:3:23","nodeType":"YulIdentifier","src":"5063:3:23"}],"functionName":{"name":"mload","nativeSrc":"5057:5:23","nodeType":"YulIdentifier","src":"5057:5:23"},"nativeSrc":"5057:10:23","nodeType":"YulFunctionCall","src":"5057:10:23"},"variables":[{"name":"length","nativeSrc":"5047:6:23","nodeType":"YulTypedName","src":"5047:6:23","type":""}]},{"nativeSrc":"5080:27:23","nodeType":"YulVariableDeclaration","src":"5080:27:23","value":{"arguments":[{"name":"key","nativeSrc":"5097:3:23","nodeType":"YulIdentifier","src":"5097:3:23"},{"kind":"number","nativeSrc":"5102:4:23","nodeType":"YulLiteral","src":"5102:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5093:3:23","nodeType":"YulIdentifier","src":"5093:3:23"},"nativeSrc":"5093:14:23","nodeType":"YulFunctionCall","src":"5093:14:23"},"variables":[{"name":"begin","nativeSrc":"5084:5:23","nodeType":"YulTypedName","src":"5084:5:23","type":""}]},{"nativeSrc":"5120:29:23","nodeType":"YulVariableDeclaration","src":"5120:29:23","value":{"arguments":[{"name":"begin","nativeSrc":"5135:5:23","nodeType":"YulIdentifier","src":"5135:5:23"},{"name":"length","nativeSrc":"5142:6:23","nodeType":"YulIdentifier","src":"5142:6:23"}],"functionName":{"name":"add","nativeSrc":"5131:3:23","nodeType":"YulIdentifier","src":"5131:3:23"},"nativeSrc":"5131:18:23","nodeType":"YulFunctionCall","src":"5131:18:23"},"variables":[{"name":"end","nativeSrc":"5124:3:23","nodeType":"YulTypedName","src":"5124:3:23","type":""}]},{"nativeSrc":"5162:23:23","nodeType":"YulVariableDeclaration","src":"5162:23:23","value":{"arguments":[{"name":"end","nativeSrc":"5181:3:23","nodeType":"YulIdentifier","src":"5181:3:23"}],"functionName":{"name":"mload","nativeSrc":"5175:5:23","nodeType":"YulIdentifier","src":"5175:5:23"},"nativeSrc":"5175:10:23","nodeType":"YulFunctionCall","src":"5175:10:23"},"variables":[{"name":"cache","nativeSrc":"5166:5:23","nodeType":"YulTypedName","src":"5166:5:23","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5205:3:23","nodeType":"YulIdentifier","src":"5205:3:23"},{"name":"slot","nativeSrc":"5210:4:23","nodeType":"YulIdentifier","src":"5210:4:23"}],"functionName":{"name":"mstore","nativeSrc":"5198:6:23","nodeType":"YulIdentifier","src":"5198:6:23"},"nativeSrc":"5198:17:23","nodeType":"YulFunctionCall","src":"5198:17:23"},"nativeSrc":"5198:17:23","nodeType":"YulExpressionStatement","src":"5198:17:23"},{"nativeSrc":"5228:45:23","nodeType":"YulAssignment","src":"5228:45:23","value":{"arguments":[{"name":"begin","nativeSrc":"5248:5:23","nodeType":"YulIdentifier","src":"5248:5:23"},{"arguments":[{"name":"length","nativeSrc":"5259:6:23","nodeType":"YulIdentifier","src":"5259:6:23"},{"kind":"number","nativeSrc":"5267:4:23","nodeType":"YulLiteral","src":"5267:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5255:3:23","nodeType":"YulIdentifier","src":"5255:3:23"},"nativeSrc":"5255:17:23","nodeType":"YulFunctionCall","src":"5255:17:23"}],"functionName":{"name":"keccak256","nativeSrc":"5238:9:23","nodeType":"YulIdentifier","src":"5238:9:23"},"nativeSrc":"5238:35:23","nodeType":"YulFunctionCall","src":"5238:35:23"},"variableNames":[{"name":"result","nativeSrc":"5228:6:23","nodeType":"YulIdentifier","src":"5228:6:23"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5293:3:23","nodeType":"YulIdentifier","src":"5293:3:23"},{"name":"cache","nativeSrc":"5298:5:23","nodeType":"YulIdentifier","src":"5298:5:23"}],"functionName":{"name":"mstore","nativeSrc":"5286:6:23","nodeType":"YulIdentifier","src":"5286:6:23"},"nativeSrc":"5286:18:23","nodeType":"YulFunctionCall","src":"5286:18:23"},"nativeSrc":"5286:18:23","nodeType":"YulExpressionStatement","src":"5286:18:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":4354,"isOffset":false,"isSlot":false,"src":"5063:3:23","valueSize":1},{"declaration":4354,"isOffset":false,"isSlot":false,"src":"5097:3:23","valueSize":1},{"declaration":4357,"isOffset":false,"isSlot":false,"src":"5228:6:23","valueSize":1},{"declaration":4352,"isOffset":false,"isSlot":false,"src":"5210:4:23","valueSize":1}],"flags":["memory-safe"],"id":4359,"nodeType":"InlineAssembly","src":"5004:310:23"}]},"documentation":{"id":4350,"nodeType":"StructuredDocumentation","src":"4817:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4361,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:23","nodeType":"FunctionDefinition","parameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4352,"mutability":"mutable","name":"slot","nameLocation":"4931:4:23","nodeType":"VariableDeclaration","scope":4361,"src":"4923:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4354,"mutability":"mutable","name":"key","nameLocation":"4950:3:23","nodeType":"VariableDeclaration","scope":4361,"src":"4937:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4353,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:23"},"returnParameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"result","nameLocation":"4986:6:23","nodeType":"VariableDeclaration","scope":4361,"src":"4978:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:23"},"scope":4362,"src":"4900:420:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4363,"src":"1599:3723:23","usedErrors":[],"usedEvents":[]}],"src":"199:5124:23"},"id":23},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[4486]},"id":4487,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4365,"nodeType":"StructuredDocumentation","src":"219:1187:24","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":4486,"linearizedBaseContracts":[4486],"name":"StorageSlot","nameLocation":"1415:11:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4368,"members":[{"constant":false,"id":4367,"mutability":"mutable","name":"value","nameLocation":"1470:5:24","nodeType":"VariableDeclaration","scope":4368,"src":"1462:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4366,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:24","nodeType":"StructDefinition","scope":4486,"src":"1433:49:24","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4371,"members":[{"constant":false,"id":4370,"mutability":"mutable","name":"value","nameLocation":"1522:5:24","nodeType":"VariableDeclaration","scope":4371,"src":"1517:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4369,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:24","nodeType":"StructDefinition","scope":4486,"src":"1488:46:24","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4374,"members":[{"constant":false,"id":4373,"mutability":"mutable","name":"value","nameLocation":"1577:5:24","nodeType":"VariableDeclaration","scope":4374,"src":"1569:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:24","nodeType":"StructDefinition","scope":4486,"src":"1540:49:24","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4377,"members":[{"constant":false,"id":4376,"mutability":"mutable","name":"value","nameLocation":"1632:5:24","nodeType":"VariableDeclaration","scope":4377,"src":"1624:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4375,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:24","nodeType":"StructDefinition","scope":4486,"src":"1595:49:24","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":4380,"members":[{"constant":false,"id":4379,"mutability":"mutable","name":"value","nameLocation":"1685:5:24","nodeType":"VariableDeclaration","scope":4380,"src":"1678:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4378,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:24","nodeType":"StructDefinition","scope":4486,"src":"1650:47:24","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4383,"members":[{"constant":false,"id":4382,"mutability":"mutable","name":"value","nameLocation":"1738:5:24","nodeType":"VariableDeclaration","scope":4383,"src":"1731:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4381,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:24","nodeType":"StructDefinition","scope":4486,"src":"1703:47:24","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4386,"members":[{"constant":false,"id":4385,"mutability":"mutable","name":"value","nameLocation":"1789:5:24","nodeType":"VariableDeclaration","scope":4386,"src":"1783:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4384,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:24","nodeType":"StructDefinition","scope":4486,"src":"1756:45:24","visibility":"public"},{"body":{"id":4396,"nodeType":"Block","src":"1983:79:24","statements":[{"AST":{"nativeSrc":"2018:38:24","nodeType":"YulBlock","src":"2018:38:24","statements":[{"nativeSrc":"2032:14:24","nodeType":"YulAssignment","src":"2032:14:24","value":{"name":"slot","nativeSrc":"2042:4:24","nodeType":"YulIdentifier","src":"2042:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:24","nodeType":"YulIdentifier","src":"2032:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4393,"isOffset":false,"isSlot":true,"src":"2032:6:24","suffix":"slot","valueSize":1},{"declaration":4389,"isOffset":false,"isSlot":false,"src":"2042:4:24","valueSize":1}],"flags":["memory-safe"],"id":4395,"nodeType":"InlineAssembly","src":"1993:63:24"}]},"documentation":{"id":4387,"nodeType":"StructuredDocumentation","src":"1807:87:24","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4397,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:24","nodeType":"FunctionDefinition","parameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"slot","nameLocation":"1931:4:24","nodeType":"VariableDeclaration","scope":4397,"src":"1923:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:24"},"returnParameters":{"id":4394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4393,"mutability":"mutable","name":"r","nameLocation":"1980:1:24","nodeType":"VariableDeclaration","scope":4397,"src":"1960:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4368_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4392,"nodeType":"UserDefinedTypeName","pathNode":{"id":4391,"name":"AddressSlot","nameLocations":["1960:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4368,"src":"1960:11:24"},"referencedDeclaration":4368,"src":"1960:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4368_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:24"},"scope":4486,"src":"1899:163:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4407,"nodeType":"Block","src":"2243:79:24","statements":[{"AST":{"nativeSrc":"2278:38:24","nodeType":"YulBlock","src":"2278:38:24","statements":[{"nativeSrc":"2292:14:24","nodeType":"YulAssignment","src":"2292:14:24","value":{"name":"slot","nativeSrc":"2302:4:24","nodeType":"YulIdentifier","src":"2302:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:24","nodeType":"YulIdentifier","src":"2292:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4404,"isOffset":false,"isSlot":true,"src":"2292:6:24","suffix":"slot","valueSize":1},{"declaration":4400,"isOffset":false,"isSlot":false,"src":"2302:4:24","valueSize":1}],"flags":["memory-safe"],"id":4406,"nodeType":"InlineAssembly","src":"2253:63:24"}]},"documentation":{"id":4398,"nodeType":"StructuredDocumentation","src":"2068:86:24","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":4408,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:24","nodeType":"FunctionDefinition","parameters":{"id":4401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4400,"mutability":"mutable","name":"slot","nameLocation":"2191:4:24","nodeType":"VariableDeclaration","scope":4408,"src":"2183:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:24"},"returnParameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4404,"mutability":"mutable","name":"r","nameLocation":"2240:1:24","nodeType":"VariableDeclaration","scope":4408,"src":"2220:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4371_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4403,"nodeType":"UserDefinedTypeName","pathNode":{"id":4402,"name":"BooleanSlot","nameLocations":["2220:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4371,"src":"2220:11:24"},"referencedDeclaration":4371,"src":"2220:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4371_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:24"},"scope":4486,"src":"2159:163:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4418,"nodeType":"Block","src":"2503:79:24","statements":[{"AST":{"nativeSrc":"2538:38:24","nodeType":"YulBlock","src":"2538:38:24","statements":[{"nativeSrc":"2552:14:24","nodeType":"YulAssignment","src":"2552:14:24","value":{"name":"slot","nativeSrc":"2562:4:24","nodeType":"YulIdentifier","src":"2562:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:24","nodeType":"YulIdentifier","src":"2552:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4415,"isOffset":false,"isSlot":true,"src":"2552:6:24","suffix":"slot","valueSize":1},{"declaration":4411,"isOffset":false,"isSlot":false,"src":"2562:4:24","valueSize":1}],"flags":["memory-safe"],"id":4417,"nodeType":"InlineAssembly","src":"2513:63:24"}]},"documentation":{"id":4409,"nodeType":"StructuredDocumentation","src":"2328:86:24","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":4419,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:24","nodeType":"FunctionDefinition","parameters":{"id":4412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4411,"mutability":"mutable","name":"slot","nameLocation":"2451:4:24","nodeType":"VariableDeclaration","scope":4419,"src":"2443:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:24"},"returnParameters":{"id":4416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4415,"mutability":"mutable","name":"r","nameLocation":"2500:1:24","nodeType":"VariableDeclaration","scope":4419,"src":"2480:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4374_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4414,"nodeType":"UserDefinedTypeName","pathNode":{"id":4413,"name":"Bytes32Slot","nameLocations":["2480:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4374,"src":"2480:11:24"},"referencedDeclaration":4374,"src":"2480:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4374_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:24"},"scope":4486,"src":"2419:163:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4429,"nodeType":"Block","src":"2763:79:24","statements":[{"AST":{"nativeSrc":"2798:38:24","nodeType":"YulBlock","src":"2798:38:24","statements":[{"nativeSrc":"2812:14:24","nodeType":"YulAssignment","src":"2812:14:24","value":{"name":"slot","nativeSrc":"2822:4:24","nodeType":"YulIdentifier","src":"2822:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:24","nodeType":"YulIdentifier","src":"2812:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4426,"isOffset":false,"isSlot":true,"src":"2812:6:24","suffix":"slot","valueSize":1},{"declaration":4422,"isOffset":false,"isSlot":false,"src":"2822:4:24","valueSize":1}],"flags":["memory-safe"],"id":4428,"nodeType":"InlineAssembly","src":"2773:63:24"}]},"documentation":{"id":4420,"nodeType":"StructuredDocumentation","src":"2588:86:24","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":4430,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:24","nodeType":"FunctionDefinition","parameters":{"id":4423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4422,"mutability":"mutable","name":"slot","nameLocation":"2711:4:24","nodeType":"VariableDeclaration","scope":4430,"src":"2703:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:24"},"returnParameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"r","nameLocation":"2760:1:24","nodeType":"VariableDeclaration","scope":4430,"src":"2740:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4377_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4425,"nodeType":"UserDefinedTypeName","pathNode":{"id":4424,"name":"Uint256Slot","nameLocations":["2740:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4377,"src":"2740:11:24"},"referencedDeclaration":4377,"src":"2740:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4377_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:24"},"scope":4486,"src":"2679:163:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4440,"nodeType":"Block","src":"3020:79:24","statements":[{"AST":{"nativeSrc":"3055:38:24","nodeType":"YulBlock","src":"3055:38:24","statements":[{"nativeSrc":"3069:14:24","nodeType":"YulAssignment","src":"3069:14:24","value":{"name":"slot","nativeSrc":"3079:4:24","nodeType":"YulIdentifier","src":"3079:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:24","nodeType":"YulIdentifier","src":"3069:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4437,"isOffset":false,"isSlot":true,"src":"3069:6:24","suffix":"slot","valueSize":1},{"declaration":4433,"isOffset":false,"isSlot":false,"src":"3079:4:24","valueSize":1}],"flags":["memory-safe"],"id":4439,"nodeType":"InlineAssembly","src":"3030:63:24"}]},"documentation":{"id":4431,"nodeType":"StructuredDocumentation","src":"2848:85:24","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":4441,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:24","nodeType":"FunctionDefinition","parameters":{"id":4434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"slot","nameLocation":"2969:4:24","nodeType":"VariableDeclaration","scope":4441,"src":"2961:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:24"},"returnParameters":{"id":4438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4437,"mutability":"mutable","name":"r","nameLocation":"3017:1:24","nodeType":"VariableDeclaration","scope":4441,"src":"2998:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4380_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":4436,"nodeType":"UserDefinedTypeName","pathNode":{"id":4435,"name":"Int256Slot","nameLocations":["2998:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4380,"src":"2998:10:24"},"referencedDeclaration":4380,"src":"2998:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4380_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:24"},"scope":4486,"src":"2938:161:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4451,"nodeType":"Block","src":"3277:79:24","statements":[{"AST":{"nativeSrc":"3312:38:24","nodeType":"YulBlock","src":"3312:38:24","statements":[{"nativeSrc":"3326:14:24","nodeType":"YulAssignment","src":"3326:14:24","value":{"name":"slot","nativeSrc":"3336:4:24","nodeType":"YulIdentifier","src":"3336:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:24","nodeType":"YulIdentifier","src":"3326:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4448,"isOffset":false,"isSlot":true,"src":"3326:6:24","suffix":"slot","valueSize":1},{"declaration":4444,"isOffset":false,"isSlot":false,"src":"3336:4:24","valueSize":1}],"flags":["memory-safe"],"id":4450,"nodeType":"InlineAssembly","src":"3287:63:24"}]},"documentation":{"id":4442,"nodeType":"StructuredDocumentation","src":"3105:85:24","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":4452,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:24","nodeType":"FunctionDefinition","parameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"slot","nameLocation":"3226:4:24","nodeType":"VariableDeclaration","scope":4452,"src":"3218:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:24"},"returnParameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4448,"mutability":"mutable","name":"r","nameLocation":"3274:1:24","nodeType":"VariableDeclaration","scope":4452,"src":"3255:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4383_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4447,"nodeType":"UserDefinedTypeName","pathNode":{"id":4446,"name":"StringSlot","nameLocations":["3255:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4383,"src":"3255:10:24"},"referencedDeclaration":4383,"src":"3255:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4383_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:24"},"scope":4486,"src":"3195:161:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4462,"nodeType":"Block","src":"3558:85:24","statements":[{"AST":{"nativeSrc":"3593:44:24","nodeType":"YulBlock","src":"3593:44:24","statements":[{"nativeSrc":"3607:20:24","nodeType":"YulAssignment","src":"3607:20:24","value":{"name":"store.slot","nativeSrc":"3617:10:24","nodeType":"YulIdentifier","src":"3617:10:24"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:24","nodeType":"YulIdentifier","src":"3607:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4459,"isOffset":false,"isSlot":true,"src":"3607:6:24","suffix":"slot","valueSize":1},{"declaration":4455,"isOffset":false,"isSlot":true,"src":"3617:10:24","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4461,"nodeType":"InlineAssembly","src":"3568:69:24"}]},"documentation":{"id":4453,"nodeType":"StructuredDocumentation","src":"3362:101:24","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":4463,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:24","nodeType":"FunctionDefinition","parameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"store","nameLocation":"3506:5:24","nodeType":"VariableDeclaration","scope":4463,"src":"3491:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4454,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:24"},"returnParameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"r","nameLocation":"3555:1:24","nodeType":"VariableDeclaration","scope":4463,"src":"3536:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4383_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4458,"nodeType":"UserDefinedTypeName","pathNode":{"id":4457,"name":"StringSlot","nameLocations":["3536:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4383,"src":"3536:10:24"},"referencedDeclaration":4383,"src":"3536:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4383_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:24"},"scope":4486,"src":"3468:175:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4473,"nodeType":"Block","src":"3818:79:24","statements":[{"AST":{"nativeSrc":"3853:38:24","nodeType":"YulBlock","src":"3853:38:24","statements":[{"nativeSrc":"3867:14:24","nodeType":"YulAssignment","src":"3867:14:24","value":{"name":"slot","nativeSrc":"3877:4:24","nodeType":"YulIdentifier","src":"3877:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:24","nodeType":"YulIdentifier","src":"3867:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4470,"isOffset":false,"isSlot":true,"src":"3867:6:24","suffix":"slot","valueSize":1},{"declaration":4466,"isOffset":false,"isSlot":false,"src":"3877:4:24","valueSize":1}],"flags":["memory-safe"],"id":4472,"nodeType":"InlineAssembly","src":"3828:63:24"}]},"documentation":{"id":4464,"nodeType":"StructuredDocumentation","src":"3649:84:24","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":4474,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:24","nodeType":"FunctionDefinition","parameters":{"id":4467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"slot","nameLocation":"3768:4:24","nodeType":"VariableDeclaration","scope":4474,"src":"3760:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:24"},"returnParameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"r","nameLocation":"3815:1:24","nodeType":"VariableDeclaration","scope":4474,"src":"3797:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4386_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4469,"nodeType":"UserDefinedTypeName","pathNode":{"id":4468,"name":"BytesSlot","nameLocations":["3797:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":4386,"src":"3797:9:24"},"referencedDeclaration":4386,"src":"3797:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4386_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:24"},"scope":4486,"src":"3738:159:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4484,"nodeType":"Block","src":"4094:85:24","statements":[{"AST":{"nativeSrc":"4129:44:24","nodeType":"YulBlock","src":"4129:44:24","statements":[{"nativeSrc":"4143:20:24","nodeType":"YulAssignment","src":"4143:20:24","value":{"name":"store.slot","nativeSrc":"4153:10:24","nodeType":"YulIdentifier","src":"4153:10:24"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:24","nodeType":"YulIdentifier","src":"4143:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4481,"isOffset":false,"isSlot":true,"src":"4143:6:24","suffix":"slot","valueSize":1},{"declaration":4477,"isOffset":false,"isSlot":true,"src":"4153:10:24","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4483,"nodeType":"InlineAssembly","src":"4104:69:24"}]},"documentation":{"id":4475,"nodeType":"StructuredDocumentation","src":"3903:99:24","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":4485,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:24","nodeType":"FunctionDefinition","parameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4477,"mutability":"mutable","name":"store","nameLocation":"4043:5:24","nodeType":"VariableDeclaration","scope":4485,"src":"4029:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4476,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:24"},"returnParameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"r","nameLocation":"4091:1:24","nodeType":"VariableDeclaration","scope":4485,"src":"4073:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4386_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4480,"nodeType":"UserDefinedTypeName","pathNode":{"id":4479,"name":"BytesSlot","nameLocations":["4073:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":4386,"src":"4073:9:24"},"referencedDeclaration":4386,"src":"4073:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4386_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:24"},"scope":4486,"src":"4007:172:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4487,"src":"1407:2774:24","usedErrors":[],"usedEvents":[]}],"src":"193:3989:24"},"id":24},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[7521],"SafeCast":[9286],"SignedMath":[9430],"Strings":[5888]},"id":5889,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4488,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5889,"sourceUnit":7522,"src":"127:37:25","symbolAliases":[{"foreign":{"id":4489,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"135:4:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":4492,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5889,"sourceUnit":9287,"src":"165:45:25","symbolAliases":[{"foreign":{"id":4491,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"173:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":4494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5889,"sourceUnit":9431,"src":"211:49:25","symbolAliases":[{"foreign":{"id":4493,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"219:10:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4495,"nodeType":"StructuredDocumentation","src":"262:34:25","text":" @dev String operations."},"fullyImplemented":true,"id":5888,"linearizedBaseContracts":[5888],"name":"Strings","nameLocation":"305:7:25","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4497,"libraryName":{"id":4496,"name":"SafeCast","nameLocations":["325:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":9286,"src":"325:8:25"},"nodeType":"UsingForDirective","src":"319:21:25"},{"constant":true,"id":4500,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:25","nodeType":"VariableDeclaration","scope":5888,"src":"346:56:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4498,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:25","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4503,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:25","nodeType":"VariableDeclaration","scope":5888,"src":"408:42:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4501,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:25","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":4539,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:25","nodeType":"VariableDeclaration","scope":5888,"src":"456:302:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":4528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":4523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":4513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:25","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:25","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":4512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:25","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:25","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":4516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:25","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":4517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:25","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:25","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:25","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":4522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:25","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:25","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":4526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:25","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:25","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":4527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:25","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:25","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:25","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:25","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":4532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:25","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:25","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:25","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":4537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:25","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:25","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":4540,"nodeType":"StructuredDocumentation","src":"778:81:25","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":4546,"name":"StringsInsufficientHexLength","nameLocation":"870:28:25","nodeType":"ErrorDefinition","parameters":{"id":4545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"value","nameLocation":"907:5:25","nodeType":"VariableDeclaration","scope":4546,"src":"899:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4544,"mutability":"mutable","name":"length","nameLocation":"922:6:25","nodeType":"VariableDeclaration","scope":4546,"src":"914:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4543,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:25"},"src":"864:66:25"},{"documentation":{"id":4547,"nodeType":"StructuredDocumentation","src":"936:108:25","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":4549,"name":"StringsInvalidChar","nameLocation":"1055:18:25","nodeType":"ErrorDefinition","parameters":{"id":4548,"nodeType":"ParameterList","parameters":[],"src":"1073:2:25"},"src":"1049:27:25"},{"documentation":{"id":4550,"nodeType":"StructuredDocumentation","src":"1082:84:25","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":4552,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:25","nodeType":"ErrorDefinition","parameters":{"id":4551,"nodeType":"ParameterList","parameters":[],"src":"1204:2:25"},"src":"1171:36:25"},{"body":{"id":4599,"nodeType":"Block","src":"1379:561:25","statements":[{"id":4598,"nodeType":"UncheckedBlock","src":"1389:545:25","statements":[{"assignments":[4561],"declarations":[{"constant":false,"id":4561,"mutability":"mutable","name":"length","nameLocation":"1421:6:25","nodeType":"VariableDeclaration","scope":4598,"src":"1413:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4568,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"1441:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4562,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"1430:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7521_$","typeString":"type(library Math)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:25","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":7353,"src":"1430:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:25"},{"assignments":[4570],"declarations":[{"constant":false,"id":4570,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:25","nodeType":"VariableDeclaration","scope":4598,"src":"1465:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4569,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4575,"initialValue":{"arguments":[{"id":4573,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"1499:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4571,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:25"},{"assignments":[4577],"declarations":[{"constant":false,"id":4577,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:25","nodeType":"VariableDeclaration","scope":4598,"src":"1520:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4578,"nodeType":"VariableDeclarationStatement","src":"1520:11:25"},{"AST":{"nativeSrc":"1570:67:25","nodeType":"YulBlock","src":"1570:67:25","statements":[{"nativeSrc":"1588:35:25","nodeType":"YulAssignment","src":"1588:35:25","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:25","nodeType":"YulIdentifier","src":"1599:6:25"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:25","nodeType":"YulLiteral","src":"1611:2:25","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:25","nodeType":"YulIdentifier","src":"1615:6:25"}],"functionName":{"name":"add","nativeSrc":"1607:3:25","nodeType":"YulIdentifier","src":"1607:3:25"},"nativeSrc":"1607:15:25","nodeType":"YulFunctionCall","src":"1607:15:25"}],"functionName":{"name":"add","nativeSrc":"1595:3:25","nodeType":"YulIdentifier","src":"1595:3:25"},"nativeSrc":"1595:28:25","nodeType":"YulFunctionCall","src":"1595:28:25"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:25","nodeType":"YulIdentifier","src":"1588:3:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4570,"isOffset":false,"isSlot":false,"src":"1599:6:25","valueSize":1},{"declaration":4561,"isOffset":false,"isSlot":false,"src":"1615:6:25","valueSize":1},{"declaration":4577,"isOffset":false,"isSlot":false,"src":"1588:3:25","valueSize":1}],"flags":["memory-safe"],"id":4579,"nodeType":"InlineAssembly","src":"1545:92:25"},{"body":{"id":4594,"nodeType":"Block","src":"1663:234:25","statements":[{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:25","subExpression":{"id":4581,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"1681:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"1681:5:25"},{"AST":{"nativeSrc":"1729:86:25","nodeType":"YulBlock","src":"1729:86:25","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:25","nodeType":"YulIdentifier","src":"1759:3:25"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:25","nodeType":"YulIdentifier","src":"1773:5:25"},{"kind":"number","nativeSrc":"1780:2:25","nodeType":"YulLiteral","src":"1780:2:25","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:25","nodeType":"YulIdentifier","src":"1769:3:25"},"nativeSrc":"1769:14:25","nodeType":"YulFunctionCall","src":"1769:14:25"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:25","nodeType":"YulIdentifier","src":"1785:10:25"}],"functionName":{"name":"byte","nativeSrc":"1764:4:25","nodeType":"YulIdentifier","src":"1764:4:25"},"nativeSrc":"1764:32:25","nodeType":"YulFunctionCall","src":"1764:32:25"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:25","nodeType":"YulIdentifier","src":"1751:7:25"},"nativeSrc":"1751:46:25","nodeType":"YulFunctionCall","src":"1751:46:25"},"nativeSrc":"1751:46:25","nodeType":"YulExpressionStatement","src":"1751:46:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":4500,"isOffset":false,"isSlot":false,"src":"1785:10:25","valueSize":1},{"declaration":4577,"isOffset":false,"isSlot":false,"src":"1759:3:25","valueSize":1},{"declaration":4555,"isOffset":false,"isSlot":false,"src":"1773:5:25","valueSize":1}],"flags":["memory-safe"],"id":4584,"nodeType":"InlineAssembly","src":"1704:111:25"},{"expression":{"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"1832:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4588,"nodeType":"ExpressionStatement","src":"1832:11:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"1865:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4593,"nodeType":"IfStatement","src":"1861:21:25","trueBody":{"id":4592,"nodeType":"Break","src":"1877:5:25"}}]},"condition":{"hexValue":"74727565","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4595,"nodeType":"WhileStatement","src":"1650:247:25"},{"expression":{"id":4596,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"1917:6:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4559,"id":4597,"nodeType":"Return","src":"1910:13:25"}]}]},"documentation":{"id":4553,"nodeType":"StructuredDocumentation","src":"1213:90:25","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4600,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:25","nodeType":"FunctionDefinition","parameters":{"id":4556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4555,"mutability":"mutable","name":"value","nameLocation":"1334:5:25","nodeType":"VariableDeclaration","scope":4600,"src":"1326:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:25"},"returnParameters":{"id":4559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4600,"src":"1364:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4557,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:25"},"scope":5888,"src":"1308:632:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4625,"nodeType":"Block","src":"2116:92:25","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"2147:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:25","trueExpression":{"hexValue":"2d","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"2193:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4618,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"2178:10:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$9430_$","typeString":"type(library SignedMath)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:25","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":9429,"src":"2178:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4617,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"2169:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4608,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:25","typeDescriptions":{}}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:25","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:25","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4607,"id":4624,"nodeType":"Return","src":"2126:75:25"}]},"documentation":{"id":4601,"nodeType":"StructuredDocumentation","src":"1946:89:25","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4626,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:25","nodeType":"FunctionDefinition","parameters":{"id":4604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"value","nameLocation":"2071:5:25","nodeType":"VariableDeclaration","scope":4626,"src":"2064:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4602,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:25"},"returnParameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4626,"src":"2101:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4605,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:25"},"scope":5888,"src":"2040:168:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4645,"nodeType":"Block","src":"2387:100:25","statements":[{"id":4644,"nodeType":"UncheckedBlock","src":"2397:84:25","statements":[{"expression":{"arguments":[{"id":4635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"2440:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"2459:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4636,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"2447:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7521_$","typeString":"type(library Math)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:25","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":7464,"src":"2447:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4634,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4646,4729,4749],"referencedDeclaration":4729,"src":"2428:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4633,"id":4643,"nodeType":"Return","src":"2421:49:25"}]}]},"documentation":{"id":4627,"nodeType":"StructuredDocumentation","src":"2214:94:25","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4646,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:25","nodeType":"FunctionDefinition","parameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4629,"mutability":"mutable","name":"value","nameLocation":"2342:5:25","nodeType":"VariableDeclaration","scope":4646,"src":"2334:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:25"},"returnParameters":{"id":4633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4646,"src":"2372:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4631,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:25"},"scope":5888,"src":"2313:174:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4728,"nodeType":"Block","src":"2700:435:25","statements":[{"assignments":[4657],"declarations":[{"constant":false,"id":4657,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:25","nodeType":"VariableDeclaration","scope":4728,"src":"2710:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4659,"initialValue":{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"2731:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:25"},{"assignments":[4661],"declarations":[{"constant":false,"id":4661,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:25","nodeType":"VariableDeclaration","scope":4728,"src":"2746:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4660,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4670,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4665,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"2782:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4662,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:25"},{"expression":{"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4671,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2803:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4673,"indexExpression":{"hexValue":"30","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4676,"nodeType":"ExpressionStatement","src":"2803:15:25"},{"expression":{"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4677,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2828:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4679,"indexExpression":{"hexValue":"31","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4682,"nodeType":"ExpressionStatement","src":"2828:15:25"},{"body":{"id":4711,"nodeType":"Block","src":"2898:95:25","statements":[{"expression":{"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4697,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2912:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4699,"indexExpression":{"id":4698,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"2919:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4700,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"2924:10:25","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4704,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"2935:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:25","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4706,"nodeType":"ExpressionStatement","src":"2912:40:25"},{"expression":{"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4707,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"2966:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4710,"nodeType":"ExpressionStatement","src":"2966:16:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"2886:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4712,"initializationExpression":{"assignments":[4684],"declarations":[{"constant":false,"id":4684,"mutability":"mutable","name":"i","nameLocation":"2866:1:25","nodeType":"VariableDeclaration","scope":4712,"src":"2858:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4690,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4686,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"2874:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:25"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:25","subExpression":{"id":4694,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"2895:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4696,"nodeType":"ExpressionStatement","src":"2893:3:25"},"nodeType":"ForStatement","src":"2853:140:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4713,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"3006:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4722,"nodeType":"IfStatement","src":"3002:96:25","trueBody":{"id":4721,"nodeType":"Block","src":"3023:75:25","statements":[{"errorCall":{"arguments":[{"id":4717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"3073:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4718,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"3080:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4716,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"3044:28:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4720,"nodeType":"RevertStatement","src":"3037:50:25"}]}},{"expression":{"arguments":[{"id":4725,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"3121:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4723,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:25","typeDescriptions":{}}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4655,"id":4727,"nodeType":"Return","src":"3107:21:25"}]},"documentation":{"id":4647,"nodeType":"StructuredDocumentation","src":"2493:112:25","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4729,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:25","nodeType":"FunctionDefinition","parameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4649,"mutability":"mutable","name":"value","nameLocation":"2639:5:25","nodeType":"VariableDeclaration","scope":4729,"src":"2631:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4648,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4651,"mutability":"mutable","name":"length","nameLocation":"2654:6:25","nodeType":"VariableDeclaration","scope":4729,"src":"2646:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:25"},"returnParameters":{"id":4655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4729,"src":"2685:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4653,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:25"},"scope":5888,"src":"2610:525:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4748,"nodeType":"Block","src":"3367:75:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4742,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"3412:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4740,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:25","typeDescriptions":{}}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4738,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:25","typeDescriptions":{}}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4745,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"3420:14:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4737,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4646,4729,4749],"referencedDeclaration":4729,"src":"3384:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4736,"id":4747,"nodeType":"Return","src":"3377:58:25"}]},"documentation":{"id":4730,"nodeType":"StructuredDocumentation","src":"3141:148:25","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4749,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:25","nodeType":"FunctionDefinition","parameters":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4732,"mutability":"mutable","name":"addr","nameLocation":"3323:4:25","nodeType":"VariableDeclaration","scope":4749,"src":"3315:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4731,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:25"},"returnParameters":{"id":4736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4749,"src":"3352:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4734,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:25"},"scope":5888,"src":"3294:148:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4813,"nodeType":"Block","src":"3699:642:25","statements":[{"assignments":[4758],"declarations":[{"constant":false,"id":4758,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:25","nodeType":"VariableDeclaration","scope":4813,"src":"3709:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4757,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4765,"initialValue":{"arguments":[{"arguments":[{"id":4762,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"3749:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4761,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4646,4729,4749],"referencedDeclaration":4749,"src":"3737:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4759,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:25","typeDescriptions":{}}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:25"},{"assignments":[4767],"declarations":[{"constant":false,"id":4767,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:25","nodeType":"VariableDeclaration","scope":4813,"src":"3840:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4768,"nodeType":"VariableDeclarationStatement","src":"3840:17:25"},{"AST":{"nativeSrc":"3892:78:25","nodeType":"YulBlock","src":"3892:78:25","statements":[{"nativeSrc":"3906:54:25","nodeType":"YulAssignment","src":"3906:54:25","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:25","nodeType":"YulLiteral","src":"3923:2:25","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:25","nodeType":"YulIdentifier","src":"3941:6:25"},{"kind":"number","nativeSrc":"3949:4:25","nodeType":"YulLiteral","src":"3949:4:25","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:25","nodeType":"YulIdentifier","src":"3937:3:25"},"nativeSrc":"3937:17:25","nodeType":"YulFunctionCall","src":"3937:17:25"},{"kind":"number","nativeSrc":"3956:2:25","nodeType":"YulLiteral","src":"3956:2:25","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:25","nodeType":"YulIdentifier","src":"3927:9:25"},"nativeSrc":"3927:32:25","nodeType":"YulFunctionCall","src":"3927:32:25"}],"functionName":{"name":"shr","nativeSrc":"3919:3:25","nodeType":"YulIdentifier","src":"3919:3:25"},"nativeSrc":"3919:41:25","nodeType":"YulFunctionCall","src":"3919:41:25"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:25","nodeType":"YulIdentifier","src":"3906:9:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4758,"isOffset":false,"isSlot":false,"src":"3941:6:25","valueSize":1},{"declaration":4767,"isOffset":false,"isSlot":false,"src":"3906:9:25","valueSize":1}],"flags":["memory-safe"],"id":4769,"nodeType":"InlineAssembly","src":"3867:103:25"},{"body":{"id":4806,"nodeType":"Block","src":"4013:291:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4780,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"4119:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:25","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:25","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4787,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"4148:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4789,"indexExpression":{"id":4788,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"4155:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4785,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:25","typeDescriptions":{}}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4801,"nodeType":"IfStatement","src":"4115:150:25","trueBody":{"id":4800,"nodeType":"Block","src":"4165:100:25","statements":[{"expression":{"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4794,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"4233:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4796,"indexExpression":{"id":4795,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"4240:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4799,"nodeType":"ExpressionStatement","src":"4233:17:25"}]}},{"expression":{"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4802,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"4278:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4805,"nodeType":"ExpressionStatement","src":"4278:15:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4774,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"4001:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4807,"initializationExpression":{"assignments":[4771],"declarations":[{"constant":false,"id":4771,"mutability":"mutable","name":"i","nameLocation":"3993:1:25","nodeType":"VariableDeclaration","scope":4807,"src":"3985:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4773,"initialValue":{"hexValue":"3431","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:25","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:25"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:25","subExpression":{"id":4777,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"4010:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4779,"nodeType":"ExpressionStatement","src":"4008:3:25"},"nodeType":"ForStatement","src":"3980:324:25"},{"expression":{"arguments":[{"id":4810,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"4327:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4808,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:25","typeDescriptions":{}}},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4756,"id":4812,"nodeType":"Return","src":"4313:21:25"}]},"documentation":{"id":4750,"nodeType":"StructuredDocumentation","src":"3448:165:25","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":4814,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:25","nodeType":"FunctionDefinition","parameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"addr","nameLocation":"3655:4:25","nodeType":"VariableDeclaration","scope":4814,"src":"3647:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4751,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:25"},"returnParameters":{"id":4756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4814,"src":"3684:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4754,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:25"},"scope":5888,"src":"3618:723:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4850,"nodeType":"Block","src":"4496:104:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"4519:1:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4824,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:25","typeDescriptions":{}}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:25","memberName":"length","nodeType":"MemberAccess","src":"4513:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"4538:1:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4829,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:25","typeDescriptions":{}}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:25","memberName":"length","nodeType":"MemberAccess","src":"4532:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"4567:1:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4836,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:25","typeDescriptions":{}}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4835,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4844,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"4590:1:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4842,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:25","typeDescriptions":{}}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4841,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4823,"id":4849,"nodeType":"Return","src":"4506:87:25"}]},"documentation":{"id":4815,"nodeType":"StructuredDocumentation","src":"4347:66:25","text":" @dev Returns true if the two strings are equal."},"id":4851,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:25","nodeType":"FunctionDefinition","parameters":{"id":4820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4817,"mutability":"mutable","name":"a","nameLocation":"4447:1:25","nodeType":"VariableDeclaration","scope":4851,"src":"4433:15:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4816,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4819,"mutability":"mutable","name":"b","nameLocation":"4464:1:25","nodeType":"VariableDeclaration","scope":4851,"src":"4450:15:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4818,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:25"},"returnParameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4851,"src":"4490:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4821,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:25"},"scope":5888,"src":"4418:182:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4869,"nodeType":"Block","src":"4897:64:25","statements":[{"expression":{"arguments":[{"id":4860,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"4924:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4864,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"4940:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4862,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:25","typeDescriptions":{}}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:25","memberName":"length","nodeType":"MemberAccess","src":"4934:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4859,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[4870,4901],"referencedDeclaration":4901,"src":"4914:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4858,"id":4868,"nodeType":"Return","src":"4907:47:25"}]},"documentation":{"id":4852,"nodeType":"StructuredDocumentation","src":"4606:214:25","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4870,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:25","nodeType":"FunctionDefinition","parameters":{"id":4855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4854,"mutability":"mutable","name":"input","nameLocation":"4858:5:25","nodeType":"VariableDeclaration","scope":4870,"src":"4844:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4853,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:25"},"returnParameters":{"id":4858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4870,"src":"4888:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4856,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:25"},"scope":5888,"src":"4825:136:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4900,"nodeType":"Block","src":"5366:153:25","statements":[{"assignments":[4883,4885],"declarations":[{"constant":false,"id":4883,"mutability":"mutable","name":"success","nameLocation":"5382:7:25","nodeType":"VariableDeclaration","scope":4900,"src":"5377:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4882,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4885,"mutability":"mutable","name":"value","nameLocation":"5399:5:25","nodeType":"VariableDeclaration","scope":4900,"src":"5391:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4891,"initialValue":{"arguments":[{"id":4887,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"5421:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4888,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"5428:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4889,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"5435:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4886,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4922,4959],"referencedDeclaration":4959,"src":"5408:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:25"},{"condition":{"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:25","subExpression":{"id":4892,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"5454:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4897,"nodeType":"IfStatement","src":"5449:41:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4894,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"5470:18:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4896,"nodeType":"RevertStatement","src":"5463:27:25"}},{"expression":{"id":4898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5507:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4881,"id":4899,"nodeType":"Return","src":"5500:12:25"}]},"documentation":{"id":4871,"nodeType":"StructuredDocumentation","src":"4967:294:25","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4901,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:25","nodeType":"FunctionDefinition","parameters":{"id":4878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"input","nameLocation":"5299:5:25","nodeType":"VariableDeclaration","scope":4901,"src":"5285:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4872,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4875,"mutability":"mutable","name":"begin","nameLocation":"5314:5:25","nodeType":"VariableDeclaration","scope":4901,"src":"5306:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4874,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4877,"mutability":"mutable","name":"end","nameLocation":"5329:3:25","nodeType":"VariableDeclaration","scope":4901,"src":"5321:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4876,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:25"},"returnParameters":{"id":4881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4901,"src":"5357:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4879,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:25"},"scope":5888,"src":"5266:253:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4921,"nodeType":"Block","src":"5840:83:25","statements":[{"expression":{"arguments":[{"id":4912,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"5886:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4916,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"5902:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4914,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:25","typeDescriptions":{}}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:25","memberName":"length","nodeType":"MemberAccess","src":"5896:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4911,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"5857:28:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4910,"id":4920,"nodeType":"Return","src":"5850:66:25"}]},"documentation":{"id":4902,"nodeType":"StructuredDocumentation","src":"5525:215:25","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4922,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:25","nodeType":"FunctionDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"input","nameLocation":"5781:5:25","nodeType":"VariableDeclaration","scope":4922,"src":"5767:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4903,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:25"},"returnParameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"success","nameLocation":"5816:7:25","nodeType":"VariableDeclaration","scope":4922,"src":"5811:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4906,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4909,"mutability":"mutable","name":"value","nameLocation":"5833:5:25","nodeType":"VariableDeclaration","scope":4922,"src":"5825:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:25"},"scope":5888,"src":"5745:178:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4958,"nodeType":"Block","src":"6325:144:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4936,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"6339:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4939,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"6351:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4937,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:25","typeDescriptions":{}}},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:25","memberName":"length","nodeType":"MemberAccess","src":"6345:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4943,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"6368:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4944,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"6376:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4951,"nodeType":"IfStatement","src":"6335:63:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4935,"id":4950,"nodeType":"Return","src":"6381:17:25"}},{"expression":{"arguments":[{"id":4953,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"6444:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4954,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"6451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4955,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"6458:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4952,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"6415:28:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4935,"id":4957,"nodeType":"Return","src":"6408:54:25"}]},"documentation":{"id":4923,"nodeType":"StructuredDocumentation","src":"5929:238:25","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4959,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:25","nodeType":"FunctionDefinition","parameters":{"id":4930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"input","nameLocation":"6217:5:25","nodeType":"VariableDeclaration","scope":4959,"src":"6203:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4924,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4927,"mutability":"mutable","name":"begin","nameLocation":"6240:5:25","nodeType":"VariableDeclaration","scope":4959,"src":"6232:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4929,"mutability":"mutable","name":"end","nameLocation":"6263:3:25","nodeType":"VariableDeclaration","scope":4959,"src":"6255:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4928,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:25"},"returnParameters":{"id":4935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4932,"mutability":"mutable","name":"success","nameLocation":"6301:7:25","nodeType":"VariableDeclaration","scope":4959,"src":"6296:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4931,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4934,"mutability":"mutable","name":"value","nameLocation":"6318:5:25","nodeType":"VariableDeclaration","scope":4959,"src":"6310:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4933,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:25"},"scope":5888,"src":"6172:297:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5028,"nodeType":"Block","src":"6872:347:25","statements":[{"assignments":[4974],"declarations":[{"constant":false,"id":4974,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:25","nodeType":"VariableDeclaration","scope":5028,"src":"6882:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4973,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4979,"initialValue":{"arguments":[{"id":4977,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"6910:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4975,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:25","typeDescriptions":{}}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:25"},{"assignments":[4981],"declarations":[{"constant":false,"id":4981,"mutability":"mutable","name":"result","nameLocation":"6935:6:25","nodeType":"VariableDeclaration","scope":5028,"src":"6927:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4980,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4983,"initialValue":{"hexValue":"30","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:25"},{"body":{"id":5022,"nodeType":"Block","src":"6993:189:25","statements":[{"assignments":[4995],"declarations":[{"constant":false,"id":4995,"mutability":"mutable","name":"chr","nameLocation":"7013:3:25","nodeType":"VariableDeclaration","scope":5022,"src":"7007:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4994,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5005,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5000,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"7062:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5001,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"7070:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4999,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"7039:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4997,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:25","typeDescriptions":{}}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4996,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"7019:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"7092:3:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:25","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5013,"nodeType":"IfStatement","src":"7088:30:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4972,"id":5012,"nodeType":"Return","src":"7101:17:25"}},{"expression":{"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5014,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"7132:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5017,"nodeType":"ExpressionStatement","src":"7132:12:25"},{"expression":{"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"7158:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5019,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"7168:3:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5021,"nodeType":"ExpressionStatement","src":"7158:13:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"6979:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4989,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"6983:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5023,"initializationExpression":{"assignments":[4985],"declarations":[{"constant":false,"id":4985,"mutability":"mutable","name":"i","nameLocation":"6968:1:25","nodeType":"VariableDeclaration","scope":5023,"src":"6960:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4987,"initialValue":{"id":4986,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"6972:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:25","subExpression":{"id":4991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"6990:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4993,"nodeType":"ExpressionStatement","src":"6988:3:25"},"nodeType":"ForStatement","src":"6955:227:25"},{"expression":{"components":[{"hexValue":"74727565","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5025,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"7205:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4972,"id":5027,"nodeType":"Return","src":"7191:21:25"}]},"documentation":{"id":4960,"nodeType":"StructuredDocumentation","src":"6475:224:25","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5029,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:25","nodeType":"FunctionDefinition","parameters":{"id":4967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"input","nameLocation":"6765:5:25","nodeType":"VariableDeclaration","scope":5029,"src":"6751:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4961,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4964,"mutability":"mutable","name":"begin","nameLocation":"6788:5:25","nodeType":"VariableDeclaration","scope":5029,"src":"6780:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4963,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4966,"mutability":"mutable","name":"end","nameLocation":"6811:3:25","nodeType":"VariableDeclaration","scope":5029,"src":"6803:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4965,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:25"},"returnParameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4969,"mutability":"mutable","name":"success","nameLocation":"6848:7:25","nodeType":"VariableDeclaration","scope":5029,"src":"6843:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4968,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4971,"mutability":"mutable","name":"value","nameLocation":"6865:5:25","nodeType":"VariableDeclaration","scope":5029,"src":"6857:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4970,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:25"},"scope":5888,"src":"6704:515:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5047,"nodeType":"Block","src":"7516:63:25","statements":[{"expression":{"arguments":[{"id":5038,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"7542:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5042,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"7558:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5040,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:25","typeDescriptions":{}}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:25","memberName":"length","nodeType":"MemberAccess","src":"7552:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5037,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[5048,5079],"referencedDeclaration":5079,"src":"7533:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5036,"id":5046,"nodeType":"Return","src":"7526:46:25"}]},"documentation":{"id":5030,"nodeType":"StructuredDocumentation","src":"7225:216:25","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5048,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:25","nodeType":"FunctionDefinition","parameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"input","nameLocation":"7478:5:25","nodeType":"VariableDeclaration","scope":5048,"src":"7464:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5031,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:25"},"returnParameters":{"id":5036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5048,"src":"7508:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5034,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:25"},"scope":5888,"src":"7446:133:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5078,"nodeType":"Block","src":"7984:151:25","statements":[{"assignments":[5061,5063],"declarations":[{"constant":false,"id":5061,"mutability":"mutable","name":"success","nameLocation":"8000:7:25","nodeType":"VariableDeclaration","scope":5078,"src":"7995:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5060,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5063,"mutability":"mutable","name":"value","nameLocation":"8016:5:25","nodeType":"VariableDeclaration","scope":5078,"src":"8009:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5062,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5069,"initialValue":{"arguments":[{"id":5065,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"8037:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5066,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"8044:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5067,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"8051:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5064,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[5100,5142],"referencedDeclaration":5142,"src":"8025:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:25"},{"condition":{"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:25","subExpression":{"id":5070,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"8070:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5075,"nodeType":"IfStatement","src":"8065:41:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5072,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"8086:18:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5074,"nodeType":"RevertStatement","src":"8079:27:25"}},{"expression":{"id":5076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"8123:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5059,"id":5077,"nodeType":"Return","src":"8116:12:25"}]},"documentation":{"id":5049,"nodeType":"StructuredDocumentation","src":"7585:296:25","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5079,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:25","nodeType":"FunctionDefinition","parameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"input","nameLocation":"7918:5:25","nodeType":"VariableDeclaration","scope":5079,"src":"7904:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5050,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5053,"mutability":"mutable","name":"begin","nameLocation":"7933:5:25","nodeType":"VariableDeclaration","scope":5079,"src":"7925:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5052,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5055,"mutability":"mutable","name":"end","nameLocation":"7948:3:25","nodeType":"VariableDeclaration","scope":5079,"src":"7940:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5054,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:25"},"returnParameters":{"id":5059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5079,"src":"7976:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5057,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:25"},"scope":5888,"src":"7886:249:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5099,"nodeType":"Block","src":"8526:82:25","statements":[{"expression":{"arguments":[{"id":5090,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"8571:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5094,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"8587:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5092,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:25","typeDescriptions":{}}},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:25","memberName":"length","nodeType":"MemberAccess","src":"8581:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5089,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"8543:27:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5088,"id":5098,"nodeType":"Return","src":"8536:65:25"}]},"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"8141:287:25","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5100,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:25","nodeType":"FunctionDefinition","parameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"input","nameLocation":"8468:5:25","nodeType":"VariableDeclaration","scope":5100,"src":"8454:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5081,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:25"},"returnParameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"success","nameLocation":"8503:7:25","nodeType":"VariableDeclaration","scope":5100,"src":"8498:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5084,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"value","nameLocation":"8519:5:25","nodeType":"VariableDeclaration","scope":5100,"src":"8512:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5086,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:25"},"scope":5888,"src":"8433:175:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":5105,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:25","nodeType":"VariableDeclaration","scope":5888,"src":"8614:50:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:25","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":5141,"nodeType":"Block","src":"9130:143:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5119,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"9144:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5122,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"9156:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5120,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:25","typeDescriptions":{}}},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:25","memberName":"length","nodeType":"MemberAccess","src":"9150:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"9173:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5127,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"9181:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5134,"nodeType":"IfStatement","src":"9140:63:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5118,"id":5133,"nodeType":"Return","src":"9186:17:25"}},{"expression":{"arguments":[{"id":5136,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"9248:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5137,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"9255:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5138,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"9262:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5135,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"9220:27:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5118,"id":5140,"nodeType":"Return","src":"9213:53:25"}]},"documentation":{"id":5106,"nodeType":"StructuredDocumentation","src":"8671:303:25","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5142,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:25","nodeType":"FunctionDefinition","parameters":{"id":5113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"input","nameLocation":"9023:5:25","nodeType":"VariableDeclaration","scope":5142,"src":"9009:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5107,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5110,"mutability":"mutable","name":"begin","nameLocation":"9046:5:25","nodeType":"VariableDeclaration","scope":5142,"src":"9038:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5112,"mutability":"mutable","name":"end","nameLocation":"9069:3:25","nodeType":"VariableDeclaration","scope":5142,"src":"9061:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5111,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:25"},"returnParameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5115,"mutability":"mutable","name":"success","nameLocation":"9107:7:25","nodeType":"VariableDeclaration","scope":5142,"src":"9102:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5114,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5117,"mutability":"mutable","name":"value","nameLocation":"9123:5:25","nodeType":"VariableDeclaration","scope":5142,"src":"9116:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5116,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:25"},"scope":5888,"src":"8979:294:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5262,"nodeType":"Block","src":"9673:812:25","statements":[{"assignments":[5157],"declarations":[{"constant":false,"id":5157,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:25","nodeType":"VariableDeclaration","scope":5262,"src":"9683:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5156,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5162,"initialValue":{"arguments":[{"id":5160,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"9711:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5158,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:25","typeDescriptions":{}}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:25"},{"assignments":[5164],"declarations":[{"constant":false,"id":5164,"mutability":"mutable","name":"sign","nameLocation":"9781:4:25","nodeType":"VariableDeclaration","scope":5262,"src":"9774:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5163,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5180,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5165,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"9788:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5166,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"9797:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":5175,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"9845:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5176,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"9853:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5174,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"9822:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5172,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:25","typeDescriptions":{}}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:25","trueExpression":{"arguments":[{"hexValue":"30","id":5170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5168,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:25","typeDescriptions":{}}},"id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:25"},{"assignments":[5182],"declarations":[{"constant":false,"id":5182,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:25","nodeType":"VariableDeclaration","scope":5262,"src":"9941:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5181,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5189,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5183,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"9961:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5184,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:25","typeDescriptions":{}}},"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:25"},{"assignments":[5191],"declarations":[{"constant":false,"id":5191,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:25","nodeType":"VariableDeclaration","scope":5262,"src":"9990:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5190,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5198,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5192,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"10010:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":5194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5193,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:25","typeDescriptions":{}}},"id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:25"},{"assignments":[5200],"declarations":[{"constant":false,"id":5200,"mutability":"mutable","name":"offset","nameLocation":"10047:6:25","nodeType":"VariableDeclaration","scope":5262,"src":"10039:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5199,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5207,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5201,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"10057:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":5202,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10073:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"10056:37:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:25"},{"assignments":[5209,5211],"declarations":[{"constant":false,"id":5209,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:25","nodeType":"VariableDeclaration","scope":5262,"src":"10107:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5208,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5211,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:25","nodeType":"VariableDeclaration","scope":5262,"src":"10124:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5210,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5219,"initialValue":{"arguments":[{"id":5213,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"10157:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5214,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"10164:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5215,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"10172:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5217,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"10180:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5212,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4922,4959],"referencedDeclaration":4959,"src":"10144:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:25"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5220,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"10199:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5221,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"10213:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5222,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"10224:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5240,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"10341:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5241,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10355:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5243,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"10371:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5244,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"10383:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5155,"id":5259,"nodeType":"Return","src":"10461:17:25"},"id":5260,"nodeType":"IfStatement","src":"10337:141:25","trueBody":{"id":5255,"nodeType":"Block","src":"10399:56:25","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":5250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5249,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5248,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:25","memberName":"min","nodeType":"MemberAccess","src":"10427:16:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5155,"id":5254,"nodeType":"Return","src":"10413:31:25"}]}},"id":5261,"nodeType":"IfStatement","src":"10195:283:25","trueBody":{"id":5239,"nodeType":"Block","src":"10240:91:25","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":5226,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10268:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5234,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"10310:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5232,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:25","typeDescriptions":{}}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:25","trueExpression":{"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:25","subExpression":{"arguments":[{"id":5229,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"10291:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5227,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:25","typeDescriptions":{}}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5155,"id":5238,"nodeType":"Return","src":"10254:66:25"}]}}]},"documentation":{"id":5143,"nodeType":"StructuredDocumentation","src":"9279:223:25","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5263,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:25","nodeType":"FunctionDefinition","parameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"input","nameLocation":"9567:5:25","nodeType":"VariableDeclaration","scope":5263,"src":"9553:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5144,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5147,"mutability":"mutable","name":"begin","nameLocation":"9590:5:25","nodeType":"VariableDeclaration","scope":5263,"src":"9582:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5146,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5149,"mutability":"mutable","name":"end","nameLocation":"9613:3:25","nodeType":"VariableDeclaration","scope":5263,"src":"9605:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:25"},"returnParameters":{"id":5155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"success","nameLocation":"9650:7:25","nodeType":"VariableDeclaration","scope":5263,"src":"9645:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5151,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5154,"mutability":"mutable","name":"value","nameLocation":"9666:5:25","nodeType":"VariableDeclaration","scope":5263,"src":"9659:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5153,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:25"},"scope":5888,"src":"9507:978:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5281,"nodeType":"Block","src":"10830:67:25","statements":[{"expression":{"arguments":[{"id":5272,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"10860:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5276,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"10876:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5274,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:25","typeDescriptions":{}}},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:25","memberName":"length","nodeType":"MemberAccess","src":"10870:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5271,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[5282,5313],"referencedDeclaration":5313,"src":"10847:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5270,"id":5280,"nodeType":"Return","src":"10840:50:25"}]},"documentation":{"id":5264,"nodeType":"StructuredDocumentation","src":"10491:259:25","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5282,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:25","nodeType":"FunctionDefinition","parameters":{"id":5267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5266,"mutability":"mutable","name":"input","nameLocation":"10791:5:25","nodeType":"VariableDeclaration","scope":5282,"src":"10777:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5265,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:25"},"returnParameters":{"id":5270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5282,"src":"10821:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5268,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:25"},"scope":5888,"src":"10755:142:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5312,"nodeType":"Block","src":"11318:156:25","statements":[{"assignments":[5295,5297],"declarations":[{"constant":false,"id":5295,"mutability":"mutable","name":"success","nameLocation":"11334:7:25","nodeType":"VariableDeclaration","scope":5312,"src":"11329:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5294,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5297,"mutability":"mutable","name":"value","nameLocation":"11351:5:25","nodeType":"VariableDeclaration","scope":5312,"src":"11343:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5296,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5303,"initialValue":{"arguments":[{"id":5299,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"11376:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5300,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"11383:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5301,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"11390:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5298,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[5334,5371],"referencedDeclaration":5371,"src":"11360:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:25"},{"condition":{"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:25","subExpression":{"id":5304,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"11409:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5309,"nodeType":"IfStatement","src":"11404:41:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5306,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"11425:18:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5308,"nodeType":"RevertStatement","src":"11418:27:25"}},{"expression":{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5297,"src":"11462:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5293,"id":5311,"nodeType":"Return","src":"11455:12:25"}]},"documentation":{"id":5283,"nodeType":"StructuredDocumentation","src":"10903:307:25","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5313,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:25","nodeType":"FunctionDefinition","parameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"mutability":"mutable","name":"input","nameLocation":"11251:5:25","nodeType":"VariableDeclaration","scope":5313,"src":"11237:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5284,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5287,"mutability":"mutable","name":"begin","nameLocation":"11266:5:25","nodeType":"VariableDeclaration","scope":5313,"src":"11258:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5289,"mutability":"mutable","name":"end","nameLocation":"11281:3:25","nodeType":"VariableDeclaration","scope":5313,"src":"11273:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:25"},"returnParameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5313,"src":"11309:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5291,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:25"},"scope":5888,"src":"11215:259:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5333,"nodeType":"Block","src":"11801:86:25","statements":[{"expression":{"arguments":[{"id":5324,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"11850:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5328,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"11866:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5326,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:25","typeDescriptions":{}}},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:25","memberName":"length","nodeType":"MemberAccess","src":"11860:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5323,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"11818:31:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5322,"id":5332,"nodeType":"Return","src":"11811:69:25"}]},"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"11480:218:25","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5334,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:25","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"input","nameLocation":"11742:5:25","nodeType":"VariableDeclaration","scope":5334,"src":"11728:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5315,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:25"},"returnParameters":{"id":5322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"success","nameLocation":"11777:7:25","nodeType":"VariableDeclaration","scope":5334,"src":"11772:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5318,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5321,"mutability":"mutable","name":"value","nameLocation":"11794:5:25","nodeType":"VariableDeclaration","scope":5334,"src":"11786:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5320,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:25"},"scope":5888,"src":"11703:184:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5370,"nodeType":"Block","src":"12295:147:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"12309:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5351,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"12321:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5349,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:25","typeDescriptions":{}}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:25","memberName":"length","nodeType":"MemberAccess","src":"12315:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5355,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12338:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5356,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"12346:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5363,"nodeType":"IfStatement","src":"12305:63:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5347,"id":5362,"nodeType":"Return","src":"12351:17:25"}},{"expression":{"arguments":[{"id":5365,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"12417:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5366,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12424:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5367,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"12431:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5364,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"12385:31:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5347,"id":5369,"nodeType":"Return","src":"12378:57:25"}]},"documentation":{"id":5335,"nodeType":"StructuredDocumentation","src":"11893:241:25","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5371,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:25","nodeType":"FunctionDefinition","parameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"input","nameLocation":"12187:5:25","nodeType":"VariableDeclaration","scope":5371,"src":"12173:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5336,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5339,"mutability":"mutable","name":"begin","nameLocation":"12210:5:25","nodeType":"VariableDeclaration","scope":5371,"src":"12202:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5338,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5341,"mutability":"mutable","name":"end","nameLocation":"12233:3:25","nodeType":"VariableDeclaration","scope":5371,"src":"12225:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5340,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:25"},"returnParameters":{"id":5347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"mutability":"mutable","name":"success","nameLocation":"12271:7:25","nodeType":"VariableDeclaration","scope":5371,"src":"12266:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5343,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5346,"mutability":"mutable","name":"value","nameLocation":"12288:5:25","nodeType":"VariableDeclaration","scope":5371,"src":"12280:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5345,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:25"},"scope":5888,"src":"12139:303:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5473,"nodeType":"Block","src":"12851:881:25","statements":[{"assignments":[5386],"declarations":[{"constant":false,"id":5386,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:25","nodeType":"VariableDeclaration","scope":5473,"src":"12861:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5385,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5391,"initialValue":{"arguments":[{"id":5389,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"12889:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5387,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:25","typeDescriptions":{}}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:25"},{"assignments":[5393],"declarations":[{"constant":false,"id":5393,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:25","nodeType":"VariableDeclaration","scope":5473,"src":"12943:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5392,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5413,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5394,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"12961:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5395,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"12967:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5403,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"13011:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5404,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"13019:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5402,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"12988:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5400,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:25","typeDescriptions":{}}},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5407,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:25","typeDescriptions":{}}},"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:25"},{"assignments":[5415],"declarations":[{"constant":false,"id":5415,"mutability":"mutable","name":"offset","nameLocation":"13131:6:25","nodeType":"VariableDeclaration","scope":5473,"src":"13123:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5414,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5421,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5416,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"13140:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"13140:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:25"},{"assignments":[5423],"declarations":[{"constant":false,"id":5423,"mutability":"mutable","name":"result","nameLocation":"13181:6:25","nodeType":"VariableDeclaration","scope":5473,"src":"13173:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5422,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5425,"initialValue":{"hexValue":"30","id":5424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:25"},{"body":{"id":5467,"nodeType":"Block","src":"13248:447:25","statements":[{"assignments":[5439],"declarations":[{"constant":false,"id":5439,"mutability":"mutable","name":"chr","nameLocation":"13268:3:25","nodeType":"VariableDeclaration","scope":5467,"src":"13262:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5438,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5449,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5444,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"13317:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"13325:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5443,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"13294:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5441,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:25","typeDescriptions":{}}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5440,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"13274:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"13347:3:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":5451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:25","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5457,"nodeType":"IfStatement","src":"13343:31:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5384,"id":5456,"nodeType":"Return","src":"13357:17:25"}},{"expression":{"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5458,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"13388:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5461,"nodeType":"ExpressionStatement","src":"13388:12:25"},{"id":5466,"nodeType":"UncheckedBlock","src":"13414:271:25","statements":[{"expression":{"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"13657:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5463,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"13667:3:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5465,"nodeType":"ExpressionStatement","src":"13657:13:25"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"13234:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5433,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"13238:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5468,"initializationExpression":{"assignments":[5427],"declarations":[{"constant":false,"id":5427,"mutability":"mutable","name":"i","nameLocation":"13214:1:25","nodeType":"VariableDeclaration","scope":5468,"src":"13206:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5431,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5428,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"13218:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5429,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"13226:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:25","subExpression":{"id":5435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"13245:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5437,"nodeType":"ExpressionStatement","src":"13243:3:25"},"nodeType":"ForStatement","src":"13201:494:25"},{"expression":{"components":[{"hexValue":"74727565","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"13718:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5384,"id":5472,"nodeType":"Return","src":"13704:21:25"}]},"documentation":{"id":5372,"nodeType":"StructuredDocumentation","src":"12448:227:25","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5474,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:25","nodeType":"FunctionDefinition","parameters":{"id":5379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"input","nameLocation":"12744:5:25","nodeType":"VariableDeclaration","scope":5474,"src":"12730:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5373,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5376,"mutability":"mutable","name":"begin","nameLocation":"12767:5:25","nodeType":"VariableDeclaration","scope":5474,"src":"12759:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5375,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5378,"mutability":"mutable","name":"end","nameLocation":"12790:3:25","nodeType":"VariableDeclaration","scope":5474,"src":"12782:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5377,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:25"},"returnParameters":{"id":5384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5381,"mutability":"mutable","name":"success","nameLocation":"12827:7:25","nodeType":"VariableDeclaration","scope":5474,"src":"12822:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5380,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5383,"mutability":"mutable","name":"value","nameLocation":"12844:5:25","nodeType":"VariableDeclaration","scope":5474,"src":"12836:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5382,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:25"},"scope":5888,"src":"12680:1052:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5492,"nodeType":"Block","src":"14030:67:25","statements":[{"expression":{"arguments":[{"id":5483,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"14060:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5487,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"14076:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5485,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:25","typeDescriptions":{}}},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:25","memberName":"length","nodeType":"MemberAccess","src":"14070:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5482,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[5493,5524],"referencedDeclaration":5524,"src":"14047:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5481,"id":5491,"nodeType":"Return","src":"14040:50:25"}]},"documentation":{"id":5475,"nodeType":"StructuredDocumentation","src":"13738:212:25","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5493,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:25","nodeType":"FunctionDefinition","parameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"input","nameLocation":"13991:5:25","nodeType":"VariableDeclaration","scope":5493,"src":"13977:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5476,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:25"},"returnParameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5493,"src":"14021:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5479,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:25"},"scope":5888,"src":"13955:142:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5523,"nodeType":"Block","src":"14470:165:25","statements":[{"assignments":[5506,5508],"declarations":[{"constant":false,"id":5506,"mutability":"mutable","name":"success","nameLocation":"14486:7:25","nodeType":"VariableDeclaration","scope":5523,"src":"14481:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5505,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5508,"mutability":"mutable","name":"value","nameLocation":"14503:5:25","nodeType":"VariableDeclaration","scope":5523,"src":"14495:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5507,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5514,"initialValue":{"arguments":[{"id":5510,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"14528:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5511,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"14535:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5512,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"14542:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5509,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5545,5649],"referencedDeclaration":5649,"src":"14512:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:25"},{"condition":{"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:25","subExpression":{"id":5515,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"14561:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5520,"nodeType":"IfStatement","src":"14556:50:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5517,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"14577:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5519,"nodeType":"RevertStatement","src":"14570:36:25"}},{"expression":{"id":5521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"14623:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5504,"id":5522,"nodeType":"Return","src":"14616:12:25"}]},"documentation":{"id":5494,"nodeType":"StructuredDocumentation","src":"14103:259:25","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5524,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:25","nodeType":"FunctionDefinition","parameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5496,"mutability":"mutable","name":"input","nameLocation":"14403:5:25","nodeType":"VariableDeclaration","scope":5524,"src":"14389:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5495,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5498,"mutability":"mutable","name":"begin","nameLocation":"14418:5:25","nodeType":"VariableDeclaration","scope":5524,"src":"14410:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5497,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5500,"mutability":"mutable","name":"end","nameLocation":"14433:3:25","nodeType":"VariableDeclaration","scope":5524,"src":"14425:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5499,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:25"},"returnParameters":{"id":5504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5524,"src":"14461:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5502,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:25"},"scope":5888,"src":"14367:268:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5544,"nodeType":"Block","src":"14942:70:25","statements":[{"expression":{"arguments":[{"id":5535,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"14975:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5539,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"14991:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5537,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:25","typeDescriptions":{}}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:25","memberName":"length","nodeType":"MemberAccess","src":"14985:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5534,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5545,5649],"referencedDeclaration":5649,"src":"14959:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5533,"id":5543,"nodeType":"Return","src":"14952:53:25"}]},"documentation":{"id":5525,"nodeType":"StructuredDocumentation","src":"14641:198:25","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":5545,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:25","nodeType":"FunctionDefinition","parameters":{"id":5528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5527,"mutability":"mutable","name":"input","nameLocation":"14883:5:25","nodeType":"VariableDeclaration","scope":5545,"src":"14869:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5526,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:25"},"returnParameters":{"id":5533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"success","nameLocation":"14918:7:25","nodeType":"VariableDeclaration","scope":5545,"src":"14913:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5529,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5532,"mutability":"mutable","name":"value","nameLocation":"14935:5:25","nodeType":"VariableDeclaration","scope":5545,"src":"14927:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5531,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:25"},"scope":5888,"src":"14844:168:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5648,"nodeType":"Block","src":"15405:733:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5559,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"15419:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5562,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"15431:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5560,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:25","typeDescriptions":{}}},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:25","memberName":"length","nodeType":"MemberAccess","src":"15425:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5566,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"15448:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5567,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"15456:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5577,"nodeType":"IfStatement","src":"15415:72:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5571,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:25","typeDescriptions":{}}},"id":5574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5575,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5558,"id":5576,"nodeType":"Return","src":"15461:26:25"}},{"assignments":[5579],"declarations":[{"constant":false,"id":5579,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:25","nodeType":"VariableDeclaration","scope":5648,"src":"15498:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5578,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5602,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5580,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"15516:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5581,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"15522:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":5591,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"15572:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5589,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:25","typeDescriptions":{}}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5593,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"15580:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5588,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"15543:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5586,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:25","typeDescriptions":{}}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5596,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:25","typeDescriptions":{}}},"id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:25"},{"assignments":[5604],"declarations":[{"constant":false,"id":5604,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:25","nodeType":"VariableDeclaration","scope":5648,"src":"15684:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5603,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5612,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5606,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"15714:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"15714:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5613,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"15801:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5614,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"15807:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5616,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"15816:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5646,"nodeType":"Block","src":"16081:51:25","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":5639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5640,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:25","typeDescriptions":{}}},"id":5643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5558,"id":5645,"nodeType":"Return","src":"16095:26:25"}]},"id":5647,"nodeType":"IfStatement","src":"15797:335:25","trueBody":{"id":5638,"nodeType":"Block","src":"15832:243:25","statements":[{"assignments":[5619,5621],"declarations":[{"constant":false,"id":5619,"mutability":"mutable","name":"s","nameLocation":"15953:1:25","nodeType":"VariableDeclaration","scope":5638,"src":"15948:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5618,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5621,"mutability":"mutable","name":"v","nameLocation":"15964:1:25","nodeType":"VariableDeclaration","scope":5638,"src":"15956:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5620,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5627,"initialValue":{"arguments":[{"id":5623,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"16001:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5624,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"16008:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5625,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"16015:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5622,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"15969:31:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:25"},{"expression":{"components":[{"id":5628,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"16041:1:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":5633,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"16060:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5631,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:25","typeDescriptions":{}}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5629,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:25","typeDescriptions":{}}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5558,"id":5637,"nodeType":"Return","src":"16033:31:25"}]}}]},"documentation":{"id":5546,"nodeType":"StructuredDocumentation","src":"15018:226:25","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":5649,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:25","nodeType":"FunctionDefinition","parameters":{"id":5553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"input","nameLocation":"15297:5:25","nodeType":"VariableDeclaration","scope":5649,"src":"15283:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5547,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5550,"mutability":"mutable","name":"begin","nameLocation":"15320:5:25","nodeType":"VariableDeclaration","scope":5649,"src":"15312:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5549,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5552,"mutability":"mutable","name":"end","nameLocation":"15343:3:25","nodeType":"VariableDeclaration","scope":5649,"src":"15335:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5551,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:25"},"returnParameters":{"id":5558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5555,"mutability":"mutable","name":"success","nameLocation":"15381:7:25","nodeType":"VariableDeclaration","scope":5649,"src":"15376:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5554,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5557,"mutability":"mutable","name":"value","nameLocation":"15398:5:25","nodeType":"VariableDeclaration","scope":5649,"src":"15390:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5556,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:25"},"scope":5888,"src":"15249:889:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5708,"nodeType":"Block","src":"16207:461:25","statements":[{"assignments":[5657],"declarations":[{"constant":false,"id":5657,"mutability":"mutable","name":"value","nameLocation":"16223:5:25","nodeType":"VariableDeclaration","scope":5708,"src":"16217:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5656,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5662,"initialValue":{"arguments":[{"id":5660,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"16237:3:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5658,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:25","typeDescriptions":{}}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:25"},{"id":5705,"nodeType":"UncheckedBlock","src":"16401:238:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"16429:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:25","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"16443:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:25","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"16489:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"16503:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":5678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:25","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"16550:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":5686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"16564:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":5689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:25","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":5698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5697,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5696,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:25","memberName":"max","nodeType":"MemberAccess","src":"16613:15:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5655,"id":5701,"nodeType":"Return","src":"16606:22:25"},"id":5702,"nodeType":"IfStatement","src":"16546:82:25","trueBody":{"expression":{"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"16576:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":5693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:25","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5695,"nodeType":"ExpressionStatement","src":"16576:11:25"}},"id":5703,"nodeType":"IfStatement","src":"16485:143:25","trueBody":{"expression":{"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"16516:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:25","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5684,"nodeType":"ExpressionStatement","src":"16516:11:25"}},"id":5704,"nodeType":"IfStatement","src":"16425:203:25","trueBody":{"expression":{"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"16455:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5673,"nodeType":"ExpressionStatement","src":"16455:11:25"}}]},{"expression":{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"16656:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5655,"id":5707,"nodeType":"Return","src":"16649:12:25"}]},"id":5709,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:25","nodeType":"FunctionDefinition","parameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"chr","nameLocation":"16173:3:25","nodeType":"VariableDeclaration","scope":5709,"src":"16166:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5650,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:25"},"returnParameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5709,"src":"16200:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5653,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:25"},"scope":5888,"src":"16144:524:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5874,"nodeType":"Block","src":"17334:1331:25","statements":[{"assignments":[5718],"declarations":[{"constant":false,"id":5718,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:25","nodeType":"VariableDeclaration","scope":5874,"src":"17344:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5717,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5723,"initialValue":{"arguments":[{"id":5721,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"17372:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5719,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:25","typeDescriptions":{}}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:25"},{"assignments":[5725],"declarations":[{"constant":false,"id":5725,"mutability":"mutable","name":"output","nameLocation":"17401:6:25","nodeType":"VariableDeclaration","scope":5874,"src":"17388:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5724,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5733,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":5729,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"17424:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:25","memberName":"length","nodeType":"MemberAccess","src":"17424:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5726,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:25"},{"assignments":[5735],"declarations":[{"constant":false,"id":5735,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:25","nodeType":"VariableDeclaration","scope":5874,"src":"17471:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5734,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5737,"initialValue":{"hexValue":"30","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:25"},{"body":{"id":5866,"nodeType":"Block","src":"17546:854:25","statements":[{"assignments":[5749],"declarations":[{"constant":false,"id":5749,"mutability":"mutable","name":"char","nameLocation":"17567:4:25","nodeType":"VariableDeclaration","scope":5866,"src":"17560:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5748,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5757,"initialValue":{"arguments":[{"arguments":[{"id":5753,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"17604:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5754,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"17612:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5752,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"17581:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5750,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:25","typeDescriptions":{}}},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:25"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5758,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"17635:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":5762,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"17670:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5760,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:25","typeDescriptions":{}}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5864,"nodeType":"Block","src":"18328:62:25","statements":[{"expression":{"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5857,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"18346:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5860,"indexExpression":{"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:25","subExpression":{"id":5858,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"18353:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5861,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"18371:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5863,"nodeType":"ExpressionStatement","src":"18346:29:25"}]},"id":5865,"nodeType":"IfStatement","src":"17629:761:25","trueBody":{"id":5856,"nodeType":"Block","src":"17685:637:25","statements":[{"expression":{"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5771,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"17703:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5774,"indexExpression":{"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:25","subExpression":{"id":5772,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"17710:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5777,"nodeType":"ExpressionStatement","src":"17703:29:25"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5778,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"17754:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5788,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"17823:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:25","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5798,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"17892:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5808,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"17961:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:25","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5818,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"18030:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":5819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:25","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5828,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"18099:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:25","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5838,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"18169:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:25","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5849,"nodeType":"IfStatement","src":"18165:143:25","trueBody":{"id":5848,"nodeType":"Block","src":"18183:125:25","statements":[{"expression":{"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5841,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"18261:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5844,"indexExpression":{"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:25","subExpression":{"id":5842,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"18268:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5847,"nodeType":"ExpressionStatement","src":"18261:28:25"}]}},"id":5850,"nodeType":"IfStatement","src":"18095:213:25","trueBody":{"expression":{"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5831,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"18113:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5834,"indexExpression":{"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:25","subExpression":{"id":5832,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"18120:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5837,"nodeType":"ExpressionStatement","src":"18113:29:25"}},"id":5851,"nodeType":"IfStatement","src":"18026:282:25","trueBody":{"expression":{"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5821,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"18044:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5824,"indexExpression":{"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:25","subExpression":{"id":5822,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"18051:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":5825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5827,"nodeType":"ExpressionStatement","src":"18044:28:25"}},"id":5852,"nodeType":"IfStatement","src":"17957:351:25","trueBody":{"expression":{"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5811,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"17975:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5814,"indexExpression":{"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:25","subExpression":{"id":5812,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"17982:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":5815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5817,"nodeType":"ExpressionStatement","src":"17975:28:25"}},"id":5853,"nodeType":"IfStatement","src":"17888:420:25","trueBody":{"expression":{"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5801,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"17906:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5804,"indexExpression":{"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:25","subExpression":{"id":5802,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"17913:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5807,"nodeType":"ExpressionStatement","src":"17906:28:25"}},"id":5854,"nodeType":"IfStatement","src":"17819:489:25","trueBody":{"expression":{"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5791,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"17837:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5794,"indexExpression":{"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:25","subExpression":{"id":5792,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"17844:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5797,"nodeType":"ExpressionStatement","src":"17837:28:25"}},"id":5855,"nodeType":"IfStatement","src":"17750:558:25","trueBody":{"expression":{"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5781,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"17768:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5784,"indexExpression":{"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:25","subExpression":{"id":5782,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"17775:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5787,"nodeType":"ExpressionStatement","src":"17768:28:25"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5741,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"17522:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5742,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"17526:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:25","memberName":"length","nodeType":"MemberAccess","src":"17526:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5867,"initializationExpression":{"assignments":[5739],"declarations":[{"constant":false,"id":5739,"mutability":"mutable","name":"i","nameLocation":"17519:1:25","nodeType":"VariableDeclaration","scope":5867,"src":"17511:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5738,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5740,"nodeType":"VariableDeclarationStatement","src":"17511:9:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:25","subExpression":{"id":5745,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"17543:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5747,"nodeType":"ExpressionStatement","src":"17541:3:25"},"nodeType":"ForStatement","src":"17506:894:25"},{"AST":{"nativeSrc":"18498:129:25","nodeType":"YulBlock","src":"18498:129:25","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:25","nodeType":"YulIdentifier","src":"18519:6:25"},{"name":"outputLength","nativeSrc":"18527:12:25","nodeType":"YulIdentifier","src":"18527:12:25"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:25","nodeType":"YulIdentifier","src":"18512:6:25"},"nativeSrc":"18512:28:25","nodeType":"YulFunctionCall","src":"18512:28:25"},"nativeSrc":"18512:28:25","nodeType":"YulExpressionStatement","src":"18512:28:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:25","nodeType":"YulLiteral","src":"18560:4:25","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:25","nodeType":"YulIdentifier","src":"18570:6:25"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:25","nodeType":"YulLiteral","src":"18582:1:25","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:25","nodeType":"YulLiteral","src":"18589:1:25","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:25","nodeType":"YulIdentifier","src":"18596:12:25"},{"kind":"number","nativeSrc":"18610:2:25","nodeType":"YulLiteral","src":"18610:2:25","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:25","nodeType":"YulIdentifier","src":"18592:3:25"},"nativeSrc":"18592:21:25","nodeType":"YulFunctionCall","src":"18592:21:25"}],"functionName":{"name":"shr","nativeSrc":"18585:3:25","nodeType":"YulIdentifier","src":"18585:3:25"},"nativeSrc":"18585:29:25","nodeType":"YulFunctionCall","src":"18585:29:25"}],"functionName":{"name":"shl","nativeSrc":"18578:3:25","nodeType":"YulIdentifier","src":"18578:3:25"},"nativeSrc":"18578:37:25","nodeType":"YulFunctionCall","src":"18578:37:25"}],"functionName":{"name":"add","nativeSrc":"18566:3:25","nodeType":"YulIdentifier","src":"18566:3:25"},"nativeSrc":"18566:50:25","nodeType":"YulFunctionCall","src":"18566:50:25"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:25","nodeType":"YulIdentifier","src":"18553:6:25"},"nativeSrc":"18553:64:25","nodeType":"YulFunctionCall","src":"18553:64:25"},"nativeSrc":"18553:64:25","nodeType":"YulExpressionStatement","src":"18553:64:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":5725,"isOffset":false,"isSlot":false,"src":"18519:6:25","valueSize":1},{"declaration":5725,"isOffset":false,"isSlot":false,"src":"18570:6:25","valueSize":1},{"declaration":5735,"isOffset":false,"isSlot":false,"src":"18527:12:25","valueSize":1},{"declaration":5735,"isOffset":false,"isSlot":false,"src":"18596:12:25","valueSize":1}],"flags":["memory-safe"],"id":5868,"nodeType":"InlineAssembly","src":"18473:154:25"},{"expression":{"arguments":[{"id":5871,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"18651:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5869,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:25","typeDescriptions":{}}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5716,"id":5873,"nodeType":"Return","src":"18637:21:25"}]},"documentation":{"id":5710,"nodeType":"StructuredDocumentation","src":"16674:576:25","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":5875,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:25","nodeType":"FunctionDefinition","parameters":{"id":5713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5712,"mutability":"mutable","name":"input","nameLocation":"17289:5:25","nodeType":"VariableDeclaration","scope":5875,"src":"17275:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5711,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:25"},"returnParameters":{"id":5716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5875,"src":"17319:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5714,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:25"},"scope":5888,"src":"17255:1410:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5886,"nodeType":"Block","src":"19050:225:25","statements":[{"AST":{"nativeSrc":"19199:70:25","nodeType":"YulBlock","src":"19199:70:25","statements":[{"nativeSrc":"19213:46:25","nodeType":"YulAssignment","src":"19213:46:25","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:25","nodeType":"YulIdentifier","src":"19232:6:25"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:25","nodeType":"YulLiteral","src":"19244:4:25","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:25","nodeType":"YulIdentifier","src":"19250:6:25"}],"functionName":{"name":"add","nativeSrc":"19240:3:25","nodeType":"YulIdentifier","src":"19240:3:25"},"nativeSrc":"19240:17:25","nodeType":"YulFunctionCall","src":"19240:17:25"}],"functionName":{"name":"add","nativeSrc":"19228:3:25","nodeType":"YulIdentifier","src":"19228:3:25"},"nativeSrc":"19228:30:25","nodeType":"YulFunctionCall","src":"19228:30:25"}],"functionName":{"name":"mload","nativeSrc":"19222:5:25","nodeType":"YulIdentifier","src":"19222:5:25"},"nativeSrc":"19222:37:25","nodeType":"YulFunctionCall","src":"19222:37:25"},"variableNames":[{"name":"value","nativeSrc":"19213:5:25","nodeType":"YulIdentifier","src":"19213:5:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5878,"isOffset":false,"isSlot":false,"src":"19232:6:25","valueSize":1},{"declaration":5880,"isOffset":false,"isSlot":false,"src":"19250:6:25","valueSize":1},{"declaration":5883,"isOffset":false,"isSlot":false,"src":"19213:5:25","valueSize":1}],"flags":["memory-safe"],"id":5885,"nodeType":"InlineAssembly","src":"19174:95:25"}]},"documentation":{"id":5876,"nodeType":"StructuredDocumentation","src":"18671:268:25","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":5887,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:25","nodeType":"FunctionDefinition","parameters":{"id":5881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:25","nodeType":"VariableDeclaration","scope":5887,"src":"18976:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5877,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5880,"mutability":"mutable","name":"offset","nameLocation":"19005:6:25","nodeType":"VariableDeclaration","scope":5887,"src":"18997:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5879,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:25"},"returnParameters":{"id":5884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5883,"mutability":"mutable","name":"value","nameLocation":"19043:5:25","nodeType":"VariableDeclaration","scope":5887,"src":"19035:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:25"},"scope":5888,"src":"18944:331:25","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5889,"src":"297:18980:25","usedErrors":[4546,4549,4552],"usedEvents":[]}],"src":"101:19177:25"},"id":25},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5900]},"id":5901,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5890,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5891,"nodeType":"StructuredDocumentation","src":"141:280:26","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5900,"linearizedBaseContracts":[5900],"name":"IERC165","nameLocation":"432:7:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5892,"nodeType":"StructuredDocumentation","src":"446:340:26","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5899,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:26","nodeType":"FunctionDefinition","parameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:26","nodeType":"VariableDeclaration","scope":5899,"src":"818:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5893,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:26"},"returnParameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5899,"src":"861:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5896,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:26"},"scope":5900,"src":"791:76:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5901,"src":"422:447:26","usedErrors":[],"usedEvents":[]}],"src":"115:755:26"},"id":26},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[7521],"Panic":[4232],"SafeCast":[9286]},"id":7522,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5902,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":5904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7522,"sourceUnit":4233,"src":"129:35:27","symbolAliases":[{"foreign":{"id":5903,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"137:5:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7522,"sourceUnit":9287,"src":"165:40:27","symbolAliases":[{"foreign":{"id":5905,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"173:8:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5907,"nodeType":"StructuredDocumentation","src":"207:73:27","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7521,"linearizedBaseContracts":[7521],"name":"Math","nameLocation":"289:4:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5912,"members":[{"id":5908,"name":"Floor","nameLocation":"324:5:27","nodeType":"EnumValue","src":"324:5:27"},{"id":5909,"name":"Ceil","nameLocation":"367:4:27","nodeType":"EnumValue","src":"367:4:27"},{"id":5910,"name":"Trunc","nameLocation":"409:5:27","nodeType":"EnumValue","src":"409:5:27"},{"id":5911,"name":"Expand","nameLocation":"439:6:27","nodeType":"EnumValue","src":"439:6:27"}],"name":"Rounding","nameLocation":"305:8:27","nodeType":"EnumDefinition","src":"300:169:27"},{"body":{"id":5925,"nodeType":"Block","src":"731:112:27","statements":[{"AST":{"nativeSrc":"766:71:27","nodeType":"YulBlock","src":"766:71:27","statements":[{"nativeSrc":"780:16:27","nodeType":"YulAssignment","src":"780:16:27","value":{"arguments":[{"name":"a","nativeSrc":"791:1:27","nodeType":"YulIdentifier","src":"791:1:27"},{"name":"b","nativeSrc":"794:1:27","nodeType":"YulIdentifier","src":"794:1:27"}],"functionName":{"name":"add","nativeSrc":"787:3:27","nodeType":"YulIdentifier","src":"787:3:27"},"nativeSrc":"787:9:27","nodeType":"YulFunctionCall","src":"787:9:27"},"variableNames":[{"name":"low","nativeSrc":"780:3:27","nodeType":"YulIdentifier","src":"780:3:27"}]},{"nativeSrc":"809:18:27","nodeType":"YulAssignment","src":"809:18:27","value":{"arguments":[{"name":"low","nativeSrc":"820:3:27","nodeType":"YulIdentifier","src":"820:3:27"},{"name":"a","nativeSrc":"825:1:27","nodeType":"YulIdentifier","src":"825:1:27"}],"functionName":{"name":"lt","nativeSrc":"817:2:27","nodeType":"YulIdentifier","src":"817:2:27"},"nativeSrc":"817:10:27","nodeType":"YulFunctionCall","src":"817:10:27"},"variableNames":[{"name":"high","nativeSrc":"809:4:27","nodeType":"YulIdentifier","src":"809:4:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5915,"isOffset":false,"isSlot":false,"src":"791:1:27","valueSize":1},{"declaration":5915,"isOffset":false,"isSlot":false,"src":"825:1:27","valueSize":1},{"declaration":5917,"isOffset":false,"isSlot":false,"src":"794:1:27","valueSize":1},{"declaration":5920,"isOffset":false,"isSlot":false,"src":"809:4:27","valueSize":1},{"declaration":5922,"isOffset":false,"isSlot":false,"src":"780:3:27","valueSize":1},{"declaration":5922,"isOffset":false,"isSlot":false,"src":"820:3:27","valueSize":1}],"flags":["memory-safe"],"id":5924,"nodeType":"InlineAssembly","src":"741:96:27"}]},"documentation":{"id":5913,"nodeType":"StructuredDocumentation","src":"475:163:27","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":5926,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:27","nodeType":"FunctionDefinition","parameters":{"id":5918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5915,"mutability":"mutable","name":"a","nameLocation":"667:1:27","nodeType":"VariableDeclaration","scope":5926,"src":"659:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5914,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5917,"mutability":"mutable","name":"b","nameLocation":"678:1:27","nodeType":"VariableDeclaration","scope":5926,"src":"670:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5916,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:27"},"returnParameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5920,"mutability":"mutable","name":"high","nameLocation":"712:4:27","nodeType":"VariableDeclaration","scope":5926,"src":"704:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5919,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5922,"mutability":"mutable","name":"low","nameLocation":"726:3:27","nodeType":"VariableDeclaration","scope":5926,"src":"718:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:27"},"scope":7521,"src":"643:200:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5939,"nodeType":"Block","src":"1115:462:27","statements":[{"AST":{"nativeSrc":"1437:134:27","nodeType":"YulBlock","src":"1437:134:27","statements":[{"nativeSrc":"1451:30:27","nodeType":"YulVariableDeclaration","src":"1451:30:27","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:27","nodeType":"YulIdentifier","src":"1468:1:27"},{"name":"b","nativeSrc":"1471:1:27","nodeType":"YulIdentifier","src":"1471:1:27"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:27","nodeType":"YulLiteral","src":"1478:1:27","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:27","nodeType":"YulIdentifier","src":"1474:3:27"},"nativeSrc":"1474:6:27","nodeType":"YulFunctionCall","src":"1474:6:27"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:27","nodeType":"YulIdentifier","src":"1461:6:27"},"nativeSrc":"1461:20:27","nodeType":"YulFunctionCall","src":"1461:20:27"},"variables":[{"name":"mm","nativeSrc":"1455:2:27","nodeType":"YulTypedName","src":"1455:2:27","type":""}]},{"nativeSrc":"1494:16:27","nodeType":"YulAssignment","src":"1494:16:27","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:27","nodeType":"YulIdentifier","src":"1505:1:27"},{"name":"b","nativeSrc":"1508:1:27","nodeType":"YulIdentifier","src":"1508:1:27"}],"functionName":{"name":"mul","nativeSrc":"1501:3:27","nodeType":"YulIdentifier","src":"1501:3:27"},"nativeSrc":"1501:9:27","nodeType":"YulFunctionCall","src":"1501:9:27"},"variableNames":[{"name":"low","nativeSrc":"1494:3:27","nodeType":"YulIdentifier","src":"1494:3:27"}]},{"nativeSrc":"1523:38:27","nodeType":"YulAssignment","src":"1523:38:27","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:27","nodeType":"YulIdentifier","src":"1539:2:27"},{"name":"low","nativeSrc":"1543:3:27","nodeType":"YulIdentifier","src":"1543:3:27"}],"functionName":{"name":"sub","nativeSrc":"1535:3:27","nodeType":"YulIdentifier","src":"1535:3:27"},"nativeSrc":"1535:12:27","nodeType":"YulFunctionCall","src":"1535:12:27"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:27","nodeType":"YulIdentifier","src":"1552:2:27"},{"name":"low","nativeSrc":"1556:3:27","nodeType":"YulIdentifier","src":"1556:3:27"}],"functionName":{"name":"lt","nativeSrc":"1549:2:27","nodeType":"YulIdentifier","src":"1549:2:27"},"nativeSrc":"1549:11:27","nodeType":"YulFunctionCall","src":"1549:11:27"}],"functionName":{"name":"sub","nativeSrc":"1531:3:27","nodeType":"YulIdentifier","src":"1531:3:27"},"nativeSrc":"1531:30:27","nodeType":"YulFunctionCall","src":"1531:30:27"},"variableNames":[{"name":"high","nativeSrc":"1523:4:27","nodeType":"YulIdentifier","src":"1523:4:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5929,"isOffset":false,"isSlot":false,"src":"1468:1:27","valueSize":1},{"declaration":5929,"isOffset":false,"isSlot":false,"src":"1505:1:27","valueSize":1},{"declaration":5931,"isOffset":false,"isSlot":false,"src":"1471:1:27","valueSize":1},{"declaration":5931,"isOffset":false,"isSlot":false,"src":"1508:1:27","valueSize":1},{"declaration":5934,"isOffset":false,"isSlot":false,"src":"1523:4:27","valueSize":1},{"declaration":5936,"isOffset":false,"isSlot":false,"src":"1494:3:27","valueSize":1},{"declaration":5936,"isOffset":false,"isSlot":false,"src":"1543:3:27","valueSize":1},{"declaration":5936,"isOffset":false,"isSlot":false,"src":"1556:3:27","valueSize":1}],"flags":["memory-safe"],"id":5938,"nodeType":"InlineAssembly","src":"1412:159:27"}]},"documentation":{"id":5927,"nodeType":"StructuredDocumentation","src":"849:173:27","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":5940,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:27","nodeType":"FunctionDefinition","parameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5929,"mutability":"mutable","name":"a","nameLocation":"1051:1:27","nodeType":"VariableDeclaration","scope":5940,"src":"1043:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5931,"mutability":"mutable","name":"b","nameLocation":"1062:1:27","nodeType":"VariableDeclaration","scope":5940,"src":"1054:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:27"},"returnParameters":{"id":5937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"high","nameLocation":"1096:4:27","nodeType":"VariableDeclaration","scope":5940,"src":"1088:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5936,"mutability":"mutable","name":"low","nameLocation":"1110:3:27","nodeType":"VariableDeclaration","scope":5940,"src":"1102:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:27"},"scope":7521,"src":"1027:550:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5974,"nodeType":"Block","src":"1784:149:27","statements":[{"id":5973,"nodeType":"UncheckedBlock","src":"1794:133:27","statements":[{"assignments":[5953],"declarations":[{"constant":false,"id":5953,"mutability":"mutable","name":"c","nameLocation":"1826:1:27","nodeType":"VariableDeclaration","scope":5973,"src":"1818:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5952,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5957,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5954,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"1830:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5955,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"1834:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:27"},{"expression":{"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5958,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"1849:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5959,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"1859:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5960,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"1864:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5963,"nodeType":"ExpressionStatement","src":"1849:16:27"},{"expression":{"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"1879:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5965,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"1888:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5968,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"1908:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5966,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"1892:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"1892:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5972,"nodeType":"ExpressionStatement","src":"1879:37:27"}]}]},"documentation":{"id":5941,"nodeType":"StructuredDocumentation","src":"1583:105:27","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":5975,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:27","nodeType":"FunctionDefinition","parameters":{"id":5946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5943,"mutability":"mutable","name":"a","nameLocation":"1717:1:27","nodeType":"VariableDeclaration","scope":5975,"src":"1709:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5942,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5945,"mutability":"mutable","name":"b","nameLocation":"1728:1:27","nodeType":"VariableDeclaration","scope":5975,"src":"1720:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:27"},"returnParameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5948,"mutability":"mutable","name":"success","nameLocation":"1759:7:27","nodeType":"VariableDeclaration","scope":5975,"src":"1754:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5947,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5950,"mutability":"mutable","name":"result","nameLocation":"1776:6:27","nodeType":"VariableDeclaration","scope":5975,"src":"1768:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5949,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:27"},"scope":7521,"src":"1693:240:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6009,"nodeType":"Block","src":"2143:149:27","statements":[{"id":6008,"nodeType":"UncheckedBlock","src":"2153:133:27","statements":[{"assignments":[5988],"declarations":[{"constant":false,"id":5988,"mutability":"mutable","name":"c","nameLocation":"2185:1:27","nodeType":"VariableDeclaration","scope":6008,"src":"2177:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5987,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5992,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5989,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"2189:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"2193:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:27"},{"expression":{"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5993,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"2208:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5994,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"2218:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"2223:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5998,"nodeType":"ExpressionStatement","src":"2208:16:27"},{"expression":{"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5999,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"2238:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6000,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"2247:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6003,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"2267:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6001,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"2251:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"2251:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6007,"nodeType":"ExpressionStatement","src":"2238:37:27"}]}]},"documentation":{"id":5976,"nodeType":"StructuredDocumentation","src":"1939:108:27","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":6010,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:27","nodeType":"FunctionDefinition","parameters":{"id":5981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5978,"mutability":"mutable","name":"a","nameLocation":"2076:1:27","nodeType":"VariableDeclaration","scope":6010,"src":"2068:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5977,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5980,"mutability":"mutable","name":"b","nameLocation":"2087:1:27","nodeType":"VariableDeclaration","scope":6010,"src":"2079:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5979,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:27"},"returnParameters":{"id":5986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5983,"mutability":"mutable","name":"success","nameLocation":"2118:7:27","nodeType":"VariableDeclaration","scope":6010,"src":"2113:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5982,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5985,"mutability":"mutable","name":"result","nameLocation":"2135:6:27","nodeType":"VariableDeclaration","scope":6010,"src":"2127:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5984,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:27"},"scope":7521,"src":"2052:240:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6039,"nodeType":"Block","src":"2505:391:27","statements":[{"id":6038,"nodeType":"UncheckedBlock","src":"2515:375:27","statements":[{"assignments":[6023],"declarations":[{"constant":false,"id":6023,"mutability":"mutable","name":"c","nameLocation":"2547:1:27","nodeType":"VariableDeclaration","scope":6038,"src":"2539:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6022,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6027,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6024,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"2551:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6025,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"2555:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:27"},{"AST":{"nativeSrc":"2595:188:27","nodeType":"YulBlock","src":"2595:188:27","statements":[{"nativeSrc":"2727:42:27","nodeType":"YulAssignment","src":"2727:42:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:27","nodeType":"YulIdentifier","src":"2748:1:27"},{"name":"a","nativeSrc":"2751:1:27","nodeType":"YulIdentifier","src":"2751:1:27"}],"functionName":{"name":"div","nativeSrc":"2744:3:27","nodeType":"YulIdentifier","src":"2744:3:27"},"nativeSrc":"2744:9:27","nodeType":"YulFunctionCall","src":"2744:9:27"},{"name":"b","nativeSrc":"2755:1:27","nodeType":"YulIdentifier","src":"2755:1:27"}],"functionName":{"name":"eq","nativeSrc":"2741:2:27","nodeType":"YulIdentifier","src":"2741:2:27"},"nativeSrc":"2741:16:27","nodeType":"YulFunctionCall","src":"2741:16:27"},{"arguments":[{"name":"a","nativeSrc":"2766:1:27","nodeType":"YulIdentifier","src":"2766:1:27"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:27","nodeType":"YulIdentifier","src":"2759:6:27"},"nativeSrc":"2759:9:27","nodeType":"YulFunctionCall","src":"2759:9:27"}],"functionName":{"name":"or","nativeSrc":"2738:2:27","nodeType":"YulIdentifier","src":"2738:2:27"},"nativeSrc":"2738:31:27","nodeType":"YulFunctionCall","src":"2738:31:27"},"variableNames":[{"name":"success","nativeSrc":"2727:7:27","nodeType":"YulIdentifier","src":"2727:7:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6013,"isOffset":false,"isSlot":false,"src":"2751:1:27","valueSize":1},{"declaration":6013,"isOffset":false,"isSlot":false,"src":"2766:1:27","valueSize":1},{"declaration":6015,"isOffset":false,"isSlot":false,"src":"2755:1:27","valueSize":1},{"declaration":6023,"isOffset":false,"isSlot":false,"src":"2748:1:27","valueSize":1},{"declaration":6018,"isOffset":false,"isSlot":false,"src":"2727:7:27","valueSize":1}],"flags":["memory-safe"],"id":6028,"nodeType":"InlineAssembly","src":"2570:213:27"},{"expression":{"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"2842:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6030,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"2851:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6033,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"2871:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6031,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"2855:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"2855:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6037,"nodeType":"ExpressionStatement","src":"2842:37:27"}]}]},"documentation":{"id":6011,"nodeType":"StructuredDocumentation","src":"2298:111:27","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":6040,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:27","nodeType":"FunctionDefinition","parameters":{"id":6016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6013,"mutability":"mutable","name":"a","nameLocation":"2438:1:27","nodeType":"VariableDeclaration","scope":6040,"src":"2430:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6012,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6015,"mutability":"mutable","name":"b","nameLocation":"2449:1:27","nodeType":"VariableDeclaration","scope":6040,"src":"2441:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:27"},"returnParameters":{"id":6021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6018,"mutability":"mutable","name":"success","nameLocation":"2480:7:27","nodeType":"VariableDeclaration","scope":6040,"src":"2475:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6017,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6020,"mutability":"mutable","name":"result","nameLocation":"2497:6:27","nodeType":"VariableDeclaration","scope":6040,"src":"2489:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6019,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:27"},"scope":7521,"src":"2414:482:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6060,"nodeType":"Block","src":"3111:231:27","statements":[{"id":6059,"nodeType":"UncheckedBlock","src":"3121:215:27","statements":[{"expression":{"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6052,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"3145:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6053,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"3155:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6057,"nodeType":"ExpressionStatement","src":"3145:15:27"},{"AST":{"nativeSrc":"3199:127:27","nodeType":"YulBlock","src":"3199:127:27","statements":[{"nativeSrc":"3293:19:27","nodeType":"YulAssignment","src":"3293:19:27","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:27","nodeType":"YulIdentifier","src":"3307:1:27"},{"name":"b","nativeSrc":"3310:1:27","nodeType":"YulIdentifier","src":"3310:1:27"}],"functionName":{"name":"div","nativeSrc":"3303:3:27","nodeType":"YulIdentifier","src":"3303:3:27"},"nativeSrc":"3303:9:27","nodeType":"YulFunctionCall","src":"3303:9:27"},"variableNames":[{"name":"result","nativeSrc":"3293:6:27","nodeType":"YulIdentifier","src":"3293:6:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6043,"isOffset":false,"isSlot":false,"src":"3307:1:27","valueSize":1},{"declaration":6045,"isOffset":false,"isSlot":false,"src":"3310:1:27","valueSize":1},{"declaration":6050,"isOffset":false,"isSlot":false,"src":"3293:6:27","valueSize":1}],"flags":["memory-safe"],"id":6058,"nodeType":"InlineAssembly","src":"3174:152:27"}]}]},"documentation":{"id":6041,"nodeType":"StructuredDocumentation","src":"2902:113:27","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":6061,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:27","nodeType":"FunctionDefinition","parameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6043,"mutability":"mutable","name":"a","nameLocation":"3044:1:27","nodeType":"VariableDeclaration","scope":6061,"src":"3036:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6042,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6045,"mutability":"mutable","name":"b","nameLocation":"3055:1:27","nodeType":"VariableDeclaration","scope":6061,"src":"3047:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6044,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:27"},"returnParameters":{"id":6051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6048,"mutability":"mutable","name":"success","nameLocation":"3086:7:27","nodeType":"VariableDeclaration","scope":6061,"src":"3081:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6047,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6050,"mutability":"mutable","name":"result","nameLocation":"3103:6:27","nodeType":"VariableDeclaration","scope":6061,"src":"3095:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6049,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:27"},"scope":7521,"src":"3020:322:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6081,"nodeType":"Block","src":"3567:231:27","statements":[{"id":6080,"nodeType":"UncheckedBlock","src":"3577:215:27","statements":[{"expression":{"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6073,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"3601:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6074,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"3611:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6078,"nodeType":"ExpressionStatement","src":"3601:15:27"},{"AST":{"nativeSrc":"3655:127:27","nodeType":"YulBlock","src":"3655:127:27","statements":[{"nativeSrc":"3749:19:27","nodeType":"YulAssignment","src":"3749:19:27","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:27","nodeType":"YulIdentifier","src":"3763:1:27"},{"name":"b","nativeSrc":"3766:1:27","nodeType":"YulIdentifier","src":"3766:1:27"}],"functionName":{"name":"mod","nativeSrc":"3759:3:27","nodeType":"YulIdentifier","src":"3759:3:27"},"nativeSrc":"3759:9:27","nodeType":"YulFunctionCall","src":"3759:9:27"},"variableNames":[{"name":"result","nativeSrc":"3749:6:27","nodeType":"YulIdentifier","src":"3749:6:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6064,"isOffset":false,"isSlot":false,"src":"3763:1:27","valueSize":1},{"declaration":6066,"isOffset":false,"isSlot":false,"src":"3766:1:27","valueSize":1},{"declaration":6071,"isOffset":false,"isSlot":false,"src":"3749:6:27","valueSize":1}],"flags":["memory-safe"],"id":6079,"nodeType":"InlineAssembly","src":"3630:152:27"}]}]},"documentation":{"id":6062,"nodeType":"StructuredDocumentation","src":"3348:123:27","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":6082,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:27","nodeType":"FunctionDefinition","parameters":{"id":6067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6064,"mutability":"mutable","name":"a","nameLocation":"3500:1:27","nodeType":"VariableDeclaration","scope":6082,"src":"3492:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6063,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6066,"mutability":"mutable","name":"b","nameLocation":"3511:1:27","nodeType":"VariableDeclaration","scope":6082,"src":"3503:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6065,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:27"},"returnParameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6069,"mutability":"mutable","name":"success","nameLocation":"3542:7:27","nodeType":"VariableDeclaration","scope":6082,"src":"3537:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6068,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6071,"mutability":"mutable","name":"result","nameLocation":"3559:6:27","nodeType":"VariableDeclaration","scope":6082,"src":"3551:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6070,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:27"},"scope":7521,"src":"3476:322:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6111,"nodeType":"Block","src":"3989:122:27","statements":[{"assignments":[6093,6095],"declarations":[{"constant":false,"id":6093,"mutability":"mutable","name":"success","nameLocation":"4005:7:27","nodeType":"VariableDeclaration","scope":6111,"src":"4000:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6092,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6095,"mutability":"mutable","name":"result","nameLocation":"4022:6:27","nodeType":"VariableDeclaration","scope":6111,"src":"4014:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6094,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6100,"initialValue":{"arguments":[{"id":6097,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"4039:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6098,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"4042:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6096,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"4032:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:27"},{"expression":{"arguments":[{"id":6102,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"4069:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6103,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"4078:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6105,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6104,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:27","memberName":"max","nodeType":"MemberAccess","src":"4086:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6101,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"4061:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6091,"id":6110,"nodeType":"Return","src":"4054:50:27"}]},"documentation":{"id":6083,"nodeType":"StructuredDocumentation","src":"3804:103:27","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6112,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:27","nodeType":"FunctionDefinition","parameters":{"id":6088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6085,"mutability":"mutable","name":"a","nameLocation":"3943:1:27","nodeType":"VariableDeclaration","scope":6112,"src":"3935:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6084,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6087,"mutability":"mutable","name":"b","nameLocation":"3954:1:27","nodeType":"VariableDeclaration","scope":6112,"src":"3946:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:27"},"returnParameters":{"id":6091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6112,"src":"3980:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6089,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:27"},"scope":7521,"src":"3912:199:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6131,"nodeType":"Block","src":"4294:73:27","statements":[{"assignments":[null,6123],"declarations":[null,{"constant":false,"id":6123,"mutability":"mutable","name":"result","nameLocation":"4315:6:27","nodeType":"VariableDeclaration","scope":6131,"src":"4307:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6122,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6128,"initialValue":{"arguments":[{"id":6125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"4332:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"4335:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6124,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"4325:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:27"},{"expression":{"id":6129,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"4354:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6121,"id":6130,"nodeType":"Return","src":"4347:13:27"}]},"documentation":{"id":6113,"nodeType":"StructuredDocumentation","src":"4117:95:27","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":6132,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:27","nodeType":"FunctionDefinition","parameters":{"id":6118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"mutability":"mutable","name":"a","nameLocation":"4248:1:27","nodeType":"VariableDeclaration","scope":6132,"src":"4240:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6114,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6117,"mutability":"mutable","name":"b","nameLocation":"4259:1:27","nodeType":"VariableDeclaration","scope":6132,"src":"4251:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6116,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:27"},"returnParameters":{"id":6121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6132,"src":"4285:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6119,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:27"},"scope":7521,"src":"4217:150:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6161,"nodeType":"Block","src":"4564:122:27","statements":[{"assignments":[6143,6145],"declarations":[{"constant":false,"id":6143,"mutability":"mutable","name":"success","nameLocation":"4580:7:27","nodeType":"VariableDeclaration","scope":6161,"src":"4575:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6142,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6145,"mutability":"mutable","name":"result","nameLocation":"4597:6:27","nodeType":"VariableDeclaration","scope":6161,"src":"4589:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6144,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6150,"initialValue":{"arguments":[{"id":6147,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"4614:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6148,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"4617:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6146,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"4607:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:27"},{"expression":{"arguments":[{"id":6152,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"4644:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"4653:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6155,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6154,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:27","memberName":"max","nodeType":"MemberAccess","src":"4661:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6151,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"4636:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6141,"id":6160,"nodeType":"Return","src":"4629:50:27"}]},"documentation":{"id":6133,"nodeType":"StructuredDocumentation","src":"4373:109:27","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6162,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:27","nodeType":"FunctionDefinition","parameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"a","nameLocation":"4518:1:27","nodeType":"VariableDeclaration","scope":6162,"src":"4510:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6134,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6137,"mutability":"mutable","name":"b","nameLocation":"4529:1:27","nodeType":"VariableDeclaration","scope":6162,"src":"4521:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6136,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:27"},"returnParameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6162,"src":"4555:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6139,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:27"},"scope":7521,"src":"4487:199:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6188,"nodeType":"Block","src":"5158:207:27","statements":[{"id":6187,"nodeType":"UncheckedBlock","src":"5168:191:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6174,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"5306:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"5312:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"5316:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6181,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"5337:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6179,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"5321:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"5321:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6184,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6173,"id":6186,"nodeType":"Return","src":"5299:49:27"}]}]},"documentation":{"id":6163,"nodeType":"StructuredDocumentation","src":"4692:374:27","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6189,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:27","nodeType":"FunctionDefinition","parameters":{"id":6170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"condition","nameLocation":"5093:9:27","nodeType":"VariableDeclaration","scope":6189,"src":"5088:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6164,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6167,"mutability":"mutable","name":"a","nameLocation":"5112:1:27","nodeType":"VariableDeclaration","scope":6189,"src":"5104:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6166,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6169,"mutability":"mutable","name":"b","nameLocation":"5123:1:27","nodeType":"VariableDeclaration","scope":6189,"src":"5115:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:27"},"returnParameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6189,"src":"5149:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6171,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:27"},"scope":7521,"src":"5071:294:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6207,"nodeType":"Block","src":"5502:44:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6200,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"5527:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6201,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"5531:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"5534:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6204,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"5537:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6199,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"5519:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6198,"id":6206,"nodeType":"Return","src":"5512:27:27"}]},"documentation":{"id":6190,"nodeType":"StructuredDocumentation","src":"5371:59:27","text":" @dev Returns the largest of two numbers."},"id":6208,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:27","nodeType":"FunctionDefinition","parameters":{"id":6195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6192,"mutability":"mutable","name":"a","nameLocation":"5456:1:27","nodeType":"VariableDeclaration","scope":6208,"src":"5448:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6194,"mutability":"mutable","name":"b","nameLocation":"5467:1:27","nodeType":"VariableDeclaration","scope":6208,"src":"5459:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6193,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:27"},"returnParameters":{"id":6198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6208,"src":"5493:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6196,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:27"},"scope":7521,"src":"5435:111:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6226,"nodeType":"Block","src":"5684:44:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"5709:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6220,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"5713:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"5716:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6223,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"5719:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6218,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"5701:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6217,"id":6225,"nodeType":"Return","src":"5694:27:27"}]},"documentation":{"id":6209,"nodeType":"StructuredDocumentation","src":"5552:60:27","text":" @dev Returns the smallest of two numbers."},"id":6227,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:27","nodeType":"FunctionDefinition","parameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"a","nameLocation":"5638:1:27","nodeType":"VariableDeclaration","scope":6227,"src":"5630:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6210,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6213,"mutability":"mutable","name":"b","nameLocation":"5649:1:27","nodeType":"VariableDeclaration","scope":6227,"src":"5641:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6212,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:27"},"returnParameters":{"id":6217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6227,"src":"5675:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6215,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:27"},"scope":7521,"src":"5617:111:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6249,"nodeType":"Block","src":"5912:82:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"5967:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"5971:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6241,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"5977:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6242,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"5981:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6236,"id":6248,"nodeType":"Return","src":"5959:28:27"}]},"documentation":{"id":6228,"nodeType":"StructuredDocumentation","src":"5734:102:27","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":6250,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:27","nodeType":"FunctionDefinition","parameters":{"id":6233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"a","nameLocation":"5866:1:27","nodeType":"VariableDeclaration","scope":6250,"src":"5858:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6229,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6232,"mutability":"mutable","name":"b","nameLocation":"5877:1:27","nodeType":"VariableDeclaration","scope":6250,"src":"5869:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6231,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:27"},"returnParameters":{"id":6236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6250,"src":"5903:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6234,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:27"},"scope":7521,"src":"5841:153:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6290,"nodeType":"Block","src":"6286:633:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6260,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"6300:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6271,"nodeType":"IfStatement","src":"6296:150:27","trueBody":{"id":6270,"nodeType":"Block","src":"6308:138:27","statements":[{"expression":{"arguments":[{"expression":{"id":6266,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"6412:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4232_$","typeString":"type(library Panic)"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:27","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4199,"src":"6412:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6263,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"6400:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4232_$","typeString":"type(library Panic)"}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:27","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4231,"src":"6400:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6269,"nodeType":"ExpressionStatement","src":"6400:35:27"}]}},{"id":6289,"nodeType":"UncheckedBlock","src":"6829:84:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6274,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"6876:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6272,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"6860:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"6860:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"6887:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6282,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"6896:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6259,"id":6288,"nodeType":"Return","src":"6853:49:27"}]}]},"documentation":{"id":6251,"nodeType":"StructuredDocumentation","src":"6000:210:27","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":6291,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:27","nodeType":"FunctionDefinition","parameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6253,"mutability":"mutable","name":"a","nameLocation":"6240:1:27","nodeType":"VariableDeclaration","scope":6291,"src":"6232:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6252,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6255,"mutability":"mutable","name":"b","nameLocation":"6251:1:27","nodeType":"VariableDeclaration","scope":6291,"src":"6243:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6254,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:27"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6291,"src":"6277:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6257,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:27"},"scope":7521,"src":"6215:704:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6426,"nodeType":"Block","src":"7340:3585:27","statements":[{"id":6425,"nodeType":"UncheckedBlock","src":"7350:3569:27","statements":[{"assignments":[6304,6306],"declarations":[{"constant":false,"id":6304,"mutability":"mutable","name":"high","nameLocation":"7383:4:27","nodeType":"VariableDeclaration","scope":6425,"src":"7375:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6303,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6306,"mutability":"mutable","name":"low","nameLocation":"7397:3:27","nodeType":"VariableDeclaration","scope":6425,"src":"7389:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6305,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6311,"initialValue":{"arguments":[{"id":6308,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"7411:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6309,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"7414:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6307,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"7404:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6312,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"7498:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6320,"nodeType":"IfStatement","src":"7494:365:27","trueBody":{"id":6319,"nodeType":"Block","src":"7509:350:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6315,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"7827:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6316,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"7833:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6302,"id":6318,"nodeType":"Return","src":"7820:24:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6321,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"7969:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6322,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"7984:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6339,"nodeType":"IfStatement","src":"7965:142:27","trueBody":{"id":6338,"nodeType":"Block","src":"7990:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6328,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"8028:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6331,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"8046:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4232_$","typeString":"type(library Panic)"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:27","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4199,"src":"8046:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6333,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"8070:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4232_$","typeString":"type(library Panic)"}},"id":6334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:27","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4195,"src":"8070:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6327,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"8020:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6324,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"8008:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4232_$","typeString":"type(library Panic)"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:27","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4231,"src":"8008:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6337,"nodeType":"ExpressionStatement","src":"8008:84:27"}]}},{"assignments":[6341],"declarations":[{"constant":false,"id":6341,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:27","nodeType":"VariableDeclaration","scope":6425,"src":"8359:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6340,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6342,"nodeType":"VariableDeclarationStatement","src":"8359:17:27"},{"AST":{"nativeSrc":"8415:283:27","nodeType":"YulBlock","src":"8415:283:27","statements":[{"nativeSrc":"8484:38:27","nodeType":"YulAssignment","src":"8484:38:27","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:27","nodeType":"YulIdentifier","src":"8504:1:27"},{"name":"y","nativeSrc":"8507:1:27","nodeType":"YulIdentifier","src":"8507:1:27"},{"name":"denominator","nativeSrc":"8510:11:27","nodeType":"YulIdentifier","src":"8510:11:27"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:27","nodeType":"YulIdentifier","src":"8497:6:27"},"nativeSrc":"8497:25:27","nodeType":"YulFunctionCall","src":"8497:25:27"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:27","nodeType":"YulIdentifier","src":"8484:9:27"}]},{"nativeSrc":"8604:37:27","nodeType":"YulAssignment","src":"8604:37:27","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:27","nodeType":"YulIdentifier","src":"8616:4:27"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:27","nodeType":"YulIdentifier","src":"8625:9:27"},{"name":"low","nativeSrc":"8636:3:27","nodeType":"YulIdentifier","src":"8636:3:27"}],"functionName":{"name":"gt","nativeSrc":"8622:2:27","nodeType":"YulIdentifier","src":"8622:2:27"},"nativeSrc":"8622:18:27","nodeType":"YulFunctionCall","src":"8622:18:27"}],"functionName":{"name":"sub","nativeSrc":"8612:3:27","nodeType":"YulIdentifier","src":"8612:3:27"},"nativeSrc":"8612:29:27","nodeType":"YulFunctionCall","src":"8612:29:27"},"variableNames":[{"name":"high","nativeSrc":"8604:4:27","nodeType":"YulIdentifier","src":"8604:4:27"}]},{"nativeSrc":"8658:26:27","nodeType":"YulAssignment","src":"8658:26:27","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:27","nodeType":"YulIdentifier","src":"8669:3:27"},{"name":"remainder","nativeSrc":"8674:9:27","nodeType":"YulIdentifier","src":"8674:9:27"}],"functionName":{"name":"sub","nativeSrc":"8665:3:27","nodeType":"YulIdentifier","src":"8665:3:27"},"nativeSrc":"8665:19:27","nodeType":"YulFunctionCall","src":"8665:19:27"},"variableNames":[{"name":"low","nativeSrc":"8658:3:27","nodeType":"YulIdentifier","src":"8658:3:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6298,"isOffset":false,"isSlot":false,"src":"8510:11:27","valueSize":1},{"declaration":6304,"isOffset":false,"isSlot":false,"src":"8604:4:27","valueSize":1},{"declaration":6304,"isOffset":false,"isSlot":false,"src":"8616:4:27","valueSize":1},{"declaration":6306,"isOffset":false,"isSlot":false,"src":"8636:3:27","valueSize":1},{"declaration":6306,"isOffset":false,"isSlot":false,"src":"8658:3:27","valueSize":1},{"declaration":6306,"isOffset":false,"isSlot":false,"src":"8669:3:27","valueSize":1},{"declaration":6341,"isOffset":false,"isSlot":false,"src":"8484:9:27","valueSize":1},{"declaration":6341,"isOffset":false,"isSlot":false,"src":"8625:9:27","valueSize":1},{"declaration":6341,"isOffset":false,"isSlot":false,"src":"8674:9:27","valueSize":1},{"declaration":6294,"isOffset":false,"isSlot":false,"src":"8504:1:27","valueSize":1},{"declaration":6296,"isOffset":false,"isSlot":false,"src":"8507:1:27","valueSize":1}],"flags":["memory-safe"],"id":6343,"nodeType":"InlineAssembly","src":"8390:308:27"},{"assignments":[6345],"declarations":[{"constant":false,"id":6345,"mutability":"mutable","name":"twos","nameLocation":"8910:4:27","nodeType":"VariableDeclaration","scope":6425,"src":"8902:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6344,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6352,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6346,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"8917:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":6347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6348,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"8936:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:27"},{"AST":{"nativeSrc":"8987:359:27","nodeType":"YulBlock","src":"8987:359:27","statements":[{"nativeSrc":"9052:37:27","nodeType":"YulAssignment","src":"9052:37:27","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:27","nodeType":"YulIdentifier","src":"9071:11:27"},{"name":"twos","nativeSrc":"9084:4:27","nodeType":"YulIdentifier","src":"9084:4:27"}],"functionName":{"name":"div","nativeSrc":"9067:3:27","nodeType":"YulIdentifier","src":"9067:3:27"},"nativeSrc":"9067:22:27","nodeType":"YulFunctionCall","src":"9067:22:27"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:27","nodeType":"YulIdentifier","src":"9052:11:27"}]},{"nativeSrc":"9153:21:27","nodeType":"YulAssignment","src":"9153:21:27","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:27","nodeType":"YulIdentifier","src":"9164:3:27"},{"name":"twos","nativeSrc":"9169:4:27","nodeType":"YulIdentifier","src":"9169:4:27"}],"functionName":{"name":"div","nativeSrc":"9160:3:27","nodeType":"YulIdentifier","src":"9160:3:27"},"nativeSrc":"9160:14:27","nodeType":"YulFunctionCall","src":"9160:14:27"},"variableNames":[{"name":"low","nativeSrc":"9153:3:27","nodeType":"YulIdentifier","src":"9153:3:27"}]},{"nativeSrc":"9293:39:27","nodeType":"YulAssignment","src":"9293:39:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:27","nodeType":"YulLiteral","src":"9313:1:27","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:27","nodeType":"YulIdentifier","src":"9316:4:27"}],"functionName":{"name":"sub","nativeSrc":"9309:3:27","nodeType":"YulIdentifier","src":"9309:3:27"},"nativeSrc":"9309:12:27","nodeType":"YulFunctionCall","src":"9309:12:27"},{"name":"twos","nativeSrc":"9323:4:27","nodeType":"YulIdentifier","src":"9323:4:27"}],"functionName":{"name":"div","nativeSrc":"9305:3:27","nodeType":"YulIdentifier","src":"9305:3:27"},"nativeSrc":"9305:23:27","nodeType":"YulFunctionCall","src":"9305:23:27"},{"kind":"number","nativeSrc":"9330:1:27","nodeType":"YulLiteral","src":"9330:1:27","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:27","nodeType":"YulIdentifier","src":"9301:3:27"},"nativeSrc":"9301:31:27","nodeType":"YulFunctionCall","src":"9301:31:27"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:27","nodeType":"YulIdentifier","src":"9293:4:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6298,"isOffset":false,"isSlot":false,"src":"9052:11:27","valueSize":1},{"declaration":6298,"isOffset":false,"isSlot":false,"src":"9071:11:27","valueSize":1},{"declaration":6306,"isOffset":false,"isSlot":false,"src":"9153:3:27","valueSize":1},{"declaration":6306,"isOffset":false,"isSlot":false,"src":"9164:3:27","valueSize":1},{"declaration":6345,"isOffset":false,"isSlot":false,"src":"9084:4:27","valueSize":1},{"declaration":6345,"isOffset":false,"isSlot":false,"src":"9169:4:27","valueSize":1},{"declaration":6345,"isOffset":false,"isSlot":false,"src":"9293:4:27","valueSize":1},{"declaration":6345,"isOffset":false,"isSlot":false,"src":"9316:4:27","valueSize":1},{"declaration":6345,"isOffset":false,"isSlot":false,"src":"9323:4:27","valueSize":1}],"flags":["memory-safe"],"id":6353,"nodeType":"InlineAssembly","src":"8962:384:27"},{"expression":{"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6354,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"9409:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6355,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"9416:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6356,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"9423:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6359,"nodeType":"ExpressionStatement","src":"9409:18:27"},{"assignments":[6361],"declarations":[{"constant":false,"id":6361,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:27","nodeType":"VariableDeclaration","scope":6425,"src":"9762:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6360,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6368,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6363,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"9785:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":6366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:27"},{"expression":{"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6369,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10018:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6371,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"10033:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6372,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10047:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6376,"nodeType":"ExpressionStatement","src":"10018:36:27"},{"expression":{"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6377,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10088:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6379,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"10103:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6380,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10117:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6384,"nodeType":"ExpressionStatement","src":"10088:36:27"},{"expression":{"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6385,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10160:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6387,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"10175:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6388,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10189:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6392,"nodeType":"ExpressionStatement","src":"10160:36:27"},{"expression":{"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6393,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10231:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6395,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"10246:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6396,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10260:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6400,"nodeType":"ExpressionStatement","src":"10231:36:27"},{"expression":{"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6401,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10304:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6403,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"10319:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6404,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10333:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6408,"nodeType":"ExpressionStatement","src":"10304:36:27"},{"expression":{"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6409,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10378:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6411,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"10393:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6412,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10407:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6416,"nodeType":"ExpressionStatement","src":"10378:36:27"},{"expression":{"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6417,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"10859:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6418,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"10868:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6419,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10874:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6422,"nodeType":"ExpressionStatement","src":"10859:22:27"},{"expression":{"id":6423,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"10902:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6302,"id":6424,"nodeType":"Return","src":"10895:13:27"}]}]},"documentation":{"id":6292,"nodeType":"StructuredDocumentation","src":"6925:312:27","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":6427,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:27","nodeType":"FunctionDefinition","parameters":{"id":6299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6294,"mutability":"mutable","name":"x","nameLocation":"7266:1:27","nodeType":"VariableDeclaration","scope":6427,"src":"7258:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6293,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6296,"mutability":"mutable","name":"y","nameLocation":"7277:1:27","nodeType":"VariableDeclaration","scope":6427,"src":"7269:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6295,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6298,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:27","nodeType":"VariableDeclaration","scope":6427,"src":"7280:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6297,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:27"},"returnParameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6301,"mutability":"mutable","name":"result","nameLocation":"7332:6:27","nodeType":"VariableDeclaration","scope":6427,"src":"7324:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6300,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:27"},"scope":7521,"src":"7242:3683:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6463,"nodeType":"Block","src":"11164:128:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6443,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"11188:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6444,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"11191:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6445,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"11194:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6442,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6427,6464],"referencedDeclaration":6427,"src":"11181:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6450,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"11242:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}],"id":6449,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"11225:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5912_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6453,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"11262:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6454,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"11265:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6455,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"11268:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6452,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:27","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6447,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"11209:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"11209:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6441,"id":6462,"nodeType":"Return","src":"11174:111:27"}]},"documentation":{"id":6428,"nodeType":"StructuredDocumentation","src":"10931:118:27","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":6464,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:27","nodeType":"FunctionDefinition","parameters":{"id":6438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6430,"mutability":"mutable","name":"x","nameLocation":"11078:1:27","nodeType":"VariableDeclaration","scope":6464,"src":"11070:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6429,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6432,"mutability":"mutable","name":"y","nameLocation":"11089:1:27","nodeType":"VariableDeclaration","scope":6464,"src":"11081:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6431,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6434,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:27","nodeType":"VariableDeclaration","scope":6464,"src":"11092:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6433,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6437,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:27","nodeType":"VariableDeclaration","scope":6464,"src":"11113:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"},"typeName":{"id":6436,"nodeType":"UserDefinedTypeName","pathNode":{"id":6435,"name":"Rounding","nameLocations":["11113:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"11113:8:27"},"referencedDeclaration":5912,"src":"11113:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:27"},"returnParameters":{"id":6441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6464,"src":"11155:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6439,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:27"},"scope":7521,"src":"11054:238:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6513,"nodeType":"Block","src":"11500:245:27","statements":[{"id":6512,"nodeType":"UncheckedBlock","src":"11510:229:27","statements":[{"assignments":[6477,6479],"declarations":[{"constant":false,"id":6477,"mutability":"mutable","name":"high","nameLocation":"11543:4:27","nodeType":"VariableDeclaration","scope":6512,"src":"11535:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6476,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6479,"mutability":"mutable","name":"low","nameLocation":"11557:3:27","nodeType":"VariableDeclaration","scope":6512,"src":"11549:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6478,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6484,"initialValue":{"arguments":[{"id":6481,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"11571:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6482,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6469,"src":"11574:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6480,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"11564:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6485,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"11594:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6487,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"11607:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6498,"nodeType":"IfStatement","src":"11590:86:27","trueBody":{"id":6497,"nodeType":"Block","src":"11610:66:27","statements":[{"expression":{"arguments":[{"expression":{"id":6493,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"11640:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4232_$","typeString":"type(library Panic)"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:27","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4195,"src":"11640:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6490,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"11628:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4232_$","typeString":"type(library Panic)"}},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:27","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4231,"src":"11628:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6496,"nodeType":"ExpressionStatement","src":"11628:33:27"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6499,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"11697:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":6500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:27","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6501,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"11712:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":6503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6506,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"11719:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6507,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"11726:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6475,"id":6511,"nodeType":"Return","src":"11689:39:27"}]}]},"documentation":{"id":6465,"nodeType":"StructuredDocumentation","src":"11298:111:27","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":6514,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:27","nodeType":"FunctionDefinition","parameters":{"id":6472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"mutability":"mutable","name":"x","nameLocation":"11438:1:27","nodeType":"VariableDeclaration","scope":6514,"src":"11430:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6466,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6469,"mutability":"mutable","name":"y","nameLocation":"11449:1:27","nodeType":"VariableDeclaration","scope":6514,"src":"11441:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6468,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6471,"mutability":"mutable","name":"n","nameLocation":"11458:1:27","nodeType":"VariableDeclaration","scope":6514,"src":"11452:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6470,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:27"},"returnParameters":{"id":6475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6474,"mutability":"mutable","name":"result","nameLocation":"11492:6:27","nodeType":"VariableDeclaration","scope":6514,"src":"11484:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6473,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:27"},"scope":7521,"src":"11414:331:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6552,"nodeType":"Block","src":"11963:113:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6530,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"11987:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6531,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"11990:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6532,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"11993:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6529,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[6514,6553],"referencedDeclaration":6514,"src":"11980:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6537,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"12031:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}],"id":6536,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"12014:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5912_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6540,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"12051:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6541,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"12054:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6543,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"12062:1:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6539,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:27","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6534,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"11998:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"11998:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6528,"id":6551,"nodeType":"Return","src":"11973:96:27"}]},"documentation":{"id":6515,"nodeType":"StructuredDocumentation","src":"11751:109:27","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":6553,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:27","nodeType":"FunctionDefinition","parameters":{"id":6525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6517,"mutability":"mutable","name":"x","nameLocation":"11889:1:27","nodeType":"VariableDeclaration","scope":6553,"src":"11881:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6516,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6519,"mutability":"mutable","name":"y","nameLocation":"11900:1:27","nodeType":"VariableDeclaration","scope":6553,"src":"11892:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6518,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6521,"mutability":"mutable","name":"n","nameLocation":"11909:1:27","nodeType":"VariableDeclaration","scope":6553,"src":"11903:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6520,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6524,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:27","nodeType":"VariableDeclaration","scope":6553,"src":"11912:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"},"typeName":{"id":6523,"nodeType":"UserDefinedTypeName","pathNode":{"id":6522,"name":"Rounding","nameLocations":["11912:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"11912:8:27"},"referencedDeclaration":5912,"src":"11912:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:27"},"returnParameters":{"id":6528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6553,"src":"11954:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6526,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:27"},"scope":7521,"src":"11865:211:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6649,"nodeType":"Block","src":"12710:1849:27","statements":[{"id":6648,"nodeType":"UncheckedBlock","src":"12720:1833:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6563,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"12748:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6568,"nodeType":"IfStatement","src":"12744:20:27","trueBody":{"expression":{"hexValue":"30","id":6566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6562,"id":6567,"nodeType":"Return","src":"12756:8:27"}},{"assignments":[6570],"declarations":[{"constant":false,"id":6570,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:27","nodeType":"VariableDeclaration","scope":6648,"src":"13235:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6569,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6574,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6571,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"13255:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6572,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"13259:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:27"},{"assignments":[6576],"declarations":[{"constant":false,"id":6576,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:27","nodeType":"VariableDeclaration","scope":6648,"src":"13274:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6575,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6578,"initialValue":{"id":6577,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"13288:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:27"},{"assignments":[6580],"declarations":[{"constant":false,"id":6580,"mutability":"mutable","name":"x","nameLocation":"13432:1:27","nodeType":"VariableDeclaration","scope":6648,"src":"13425:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6579,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6582,"initialValue":{"hexValue":"30","id":6581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:27"},{"assignments":[6584],"declarations":[{"constant":false,"id":6584,"mutability":"mutable","name":"y","nameLocation":"13458:1:27","nodeType":"VariableDeclaration","scope":6648,"src":"13451:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6583,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6586,"initialValue":{"hexValue":"31","id":6585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:27"},{"body":{"id":6623,"nodeType":"Block","src":"13501:882:27","statements":[{"assignments":[6591],"declarations":[{"constant":false,"id":6591,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:27","nodeType":"VariableDeclaration","scope":6623,"src":"13519:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6590,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6595,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6592,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"13538:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6593,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"13544:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:27"},{"expression":{"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6596,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"13573:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6597,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"13578:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6598,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6599,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"13678:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6600,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"13923:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6601,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"13929:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6602,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"13941:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:27","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6607,"nodeType":"ExpressionStatement","src":"13572:395:27"},{"expression":{"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6608,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"13987:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6609,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"13990:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6610,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6611,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"14072:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6612,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"14326:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6613,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"14330:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6616,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"14341:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6614,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:27","typeDescriptions":{}}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:27","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6622,"nodeType":"ExpressionStatement","src":"13986:382:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6587,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"13485:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6624,"nodeType":"WhileStatement","src":"13478:905:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6625,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"14401:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":6626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6630,"nodeType":"IfStatement","src":"14397:22:27","trueBody":{"expression":{"hexValue":"30","id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6562,"id":6629,"nodeType":"Return","src":"14411:8:27"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6632,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"14470:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6635,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"14477:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:27","subExpression":{"id":6638,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"14490:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6636,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:27","typeDescriptions":{}}},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6644,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"14502:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6642,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:27","typeDescriptions":{}}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6631,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"14462:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6562,"id":6647,"nodeType":"Return","src":"14455:50:27"}]}]},"documentation":{"id":6554,"nodeType":"StructuredDocumentation","src":"12082:553:27","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":6650,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:27","nodeType":"FunctionDefinition","parameters":{"id":6559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6556,"mutability":"mutable","name":"a","nameLocation":"12664:1:27","nodeType":"VariableDeclaration","scope":6650,"src":"12656:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6555,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6558,"mutability":"mutable","name":"n","nameLocation":"12675:1:27","nodeType":"VariableDeclaration","scope":6650,"src":"12667:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6557,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:27"},"returnParameters":{"id":6562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6650,"src":"12701:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6560,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:27"},"scope":7521,"src":"12640:1919:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6670,"nodeType":"Block","src":"15159:82:27","statements":[{"id":6669,"nodeType":"UncheckedBlock","src":"15169:66:27","statements":[{"expression":{"arguments":[{"id":6662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"15212:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6663,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"15215:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":6664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6666,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"15222:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6660,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"15200:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7521_$","typeString":"type(library Math)"}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:27","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":6707,"src":"15200:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6659,"id":6668,"nodeType":"Return","src":"15193:31:27"}]}]},"documentation":{"id":6651,"nodeType":"StructuredDocumentation","src":"14565:514:27","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":6671,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:27","nodeType":"FunctionDefinition","parameters":{"id":6656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6653,"mutability":"mutable","name":"a","nameLocation":"15113:1:27","nodeType":"VariableDeclaration","scope":6671,"src":"15105:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6652,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6655,"mutability":"mutable","name":"p","nameLocation":"15124:1:27","nodeType":"VariableDeclaration","scope":6671,"src":"15116:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6654,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:27"},"returnParameters":{"id":6659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6671,"src":"15150:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6657,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:27"},"scope":7521,"src":"15084:157:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6706,"nodeType":"Block","src":"16011:174:27","statements":[{"assignments":[6684,6686],"declarations":[{"constant":false,"id":6684,"mutability":"mutable","name":"success","nameLocation":"16027:7:27","nodeType":"VariableDeclaration","scope":6706,"src":"16022:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6683,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6686,"mutability":"mutable","name":"result","nameLocation":"16044:6:27","nodeType":"VariableDeclaration","scope":6706,"src":"16036:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6685,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6692,"initialValue":{"arguments":[{"id":6688,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"16064:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6689,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"16067:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6690,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"16070:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6687,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6731,6813],"referencedDeclaration":6731,"src":"16054:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:27"},{"condition":{"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:27","subExpression":{"id":6693,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"16087:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6703,"nodeType":"IfStatement","src":"16082:74:27","trueBody":{"id":6702,"nodeType":"Block","src":"16096:60:27","statements":[{"expression":{"arguments":[{"expression":{"id":6698,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"16122:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4232_$","typeString":"type(library Panic)"}},"id":6699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:27","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4199,"src":"16122:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6695,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"16110:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4232_$","typeString":"type(library Panic)"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:27","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4231,"src":"16110:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6701,"nodeType":"ExpressionStatement","src":"16110:35:27"}]}},{"expression":{"id":6704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"16172:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6682,"id":6705,"nodeType":"Return","src":"16165:13:27"}]},"documentation":{"id":6672,"nodeType":"StructuredDocumentation","src":"15247:678:27","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":6707,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:27","nodeType":"FunctionDefinition","parameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6674,"mutability":"mutable","name":"b","nameLocation":"15954:1:27","nodeType":"VariableDeclaration","scope":6707,"src":"15946:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6673,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6676,"mutability":"mutable","name":"e","nameLocation":"15965:1:27","nodeType":"VariableDeclaration","scope":6707,"src":"15957:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6675,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6678,"mutability":"mutable","name":"m","nameLocation":"15976:1:27","nodeType":"VariableDeclaration","scope":6707,"src":"15968:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6677,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:27"},"returnParameters":{"id":6682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6707,"src":"16002:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6680,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:27"},"scope":7521,"src":"15930:255:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6730,"nodeType":"Block","src":"17039:1493:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6721,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"17053:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6728,"nodeType":"IfStatement","src":"17049:29:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6726,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6720,"id":6727,"nodeType":"Return","src":"17061:17:27"}},{"AST":{"nativeSrc":"17113:1413:27","nodeType":"YulBlock","src":"17113:1413:27","statements":[{"nativeSrc":"17127:22:27","nodeType":"YulVariableDeclaration","src":"17127:22:27","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:27","nodeType":"YulLiteral","src":"17144:4:27","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:27","nodeType":"YulIdentifier","src":"17138:5:27"},"nativeSrc":"17138:11:27","nodeType":"YulFunctionCall","src":"17138:11:27"},"variables":[{"name":"ptr","nativeSrc":"17131:3:27","nodeType":"YulTypedName","src":"17131:3:27","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:27","nodeType":"YulIdentifier","src":"18057:3:27"},{"kind":"number","nativeSrc":"18062:4:27","nodeType":"YulLiteral","src":"18062:4:27","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:27","nodeType":"YulIdentifier","src":"18050:6:27"},"nativeSrc":"18050:17:27","nodeType":"YulFunctionCall","src":"18050:17:27"},"nativeSrc":"18050:17:27","nodeType":"YulExpressionStatement","src":"18050:17:27"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:27","nodeType":"YulIdentifier","src":"18091:3:27"},{"kind":"number","nativeSrc":"18096:4:27","nodeType":"YulLiteral","src":"18096:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:27","nodeType":"YulIdentifier","src":"18087:3:27"},"nativeSrc":"18087:14:27","nodeType":"YulFunctionCall","src":"18087:14:27"},{"kind":"number","nativeSrc":"18103:4:27","nodeType":"YulLiteral","src":"18103:4:27","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:27","nodeType":"YulIdentifier","src":"18080:6:27"},"nativeSrc":"18080:28:27","nodeType":"YulFunctionCall","src":"18080:28:27"},"nativeSrc":"18080:28:27","nodeType":"YulExpressionStatement","src":"18080:28:27"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:27","nodeType":"YulIdentifier","src":"18132:3:27"},{"kind":"number","nativeSrc":"18137:4:27","nodeType":"YulLiteral","src":"18137:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:27","nodeType":"YulIdentifier","src":"18128:3:27"},"nativeSrc":"18128:14:27","nodeType":"YulFunctionCall","src":"18128:14:27"},{"kind":"number","nativeSrc":"18144:4:27","nodeType":"YulLiteral","src":"18144:4:27","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:27","nodeType":"YulIdentifier","src":"18121:6:27"},"nativeSrc":"18121:28:27","nodeType":"YulFunctionCall","src":"18121:28:27"},"nativeSrc":"18121:28:27","nodeType":"YulExpressionStatement","src":"18121:28:27"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:27","nodeType":"YulIdentifier","src":"18173:3:27"},{"kind":"number","nativeSrc":"18178:4:27","nodeType":"YulLiteral","src":"18178:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:27","nodeType":"YulIdentifier","src":"18169:3:27"},"nativeSrc":"18169:14:27","nodeType":"YulFunctionCall","src":"18169:14:27"},{"name":"b","nativeSrc":"18185:1:27","nodeType":"YulIdentifier","src":"18185:1:27"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:27","nodeType":"YulIdentifier","src":"18162:6:27"},"nativeSrc":"18162:25:27","nodeType":"YulFunctionCall","src":"18162:25:27"},"nativeSrc":"18162:25:27","nodeType":"YulExpressionStatement","src":"18162:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:27","nodeType":"YulIdentifier","src":"18211:3:27"},{"kind":"number","nativeSrc":"18216:4:27","nodeType":"YulLiteral","src":"18216:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:27","nodeType":"YulIdentifier","src":"18207:3:27"},"nativeSrc":"18207:14:27","nodeType":"YulFunctionCall","src":"18207:14:27"},{"name":"e","nativeSrc":"18223:1:27","nodeType":"YulIdentifier","src":"18223:1:27"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:27","nodeType":"YulIdentifier","src":"18200:6:27"},"nativeSrc":"18200:25:27","nodeType":"YulFunctionCall","src":"18200:25:27"},"nativeSrc":"18200:25:27","nodeType":"YulExpressionStatement","src":"18200:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:27","nodeType":"YulIdentifier","src":"18249:3:27"},{"kind":"number","nativeSrc":"18254:4:27","nodeType":"YulLiteral","src":"18254:4:27","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:27","nodeType":"YulIdentifier","src":"18245:3:27"},"nativeSrc":"18245:14:27","nodeType":"YulFunctionCall","src":"18245:14:27"},{"name":"m","nativeSrc":"18261:1:27","nodeType":"YulIdentifier","src":"18261:1:27"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:27","nodeType":"YulIdentifier","src":"18238:6:27"},"nativeSrc":"18238:25:27","nodeType":"YulFunctionCall","src":"18238:25:27"},"nativeSrc":"18238:25:27","nodeType":"YulExpressionStatement","src":"18238:25:27"},{"nativeSrc":"18425:57:27","nodeType":"YulAssignment","src":"18425:57:27","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:27","nodeType":"YulIdentifier","src":"18447:3:27"},"nativeSrc":"18447:5:27","nodeType":"YulFunctionCall","src":"18447:5:27"},{"kind":"number","nativeSrc":"18454:4:27","nodeType":"YulLiteral","src":"18454:4:27","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:27","nodeType":"YulIdentifier","src":"18460:3:27"},{"kind":"number","nativeSrc":"18465:4:27","nodeType":"YulLiteral","src":"18465:4:27","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:27","nodeType":"YulLiteral","src":"18471:4:27","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:27","nodeType":"YulLiteral","src":"18477:4:27","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:27","nodeType":"YulIdentifier","src":"18436:10:27"},"nativeSrc":"18436:46:27","nodeType":"YulFunctionCall","src":"18436:46:27"},"variableNames":[{"name":"success","nativeSrc":"18425:7:27","nodeType":"YulIdentifier","src":"18425:7:27"}]},{"nativeSrc":"18495:21:27","nodeType":"YulAssignment","src":"18495:21:27","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:27","nodeType":"YulLiteral","src":"18511:4:27","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:27","nodeType":"YulIdentifier","src":"18505:5:27"},"nativeSrc":"18505:11:27","nodeType":"YulFunctionCall","src":"18505:11:27"},"variableNames":[{"name":"result","nativeSrc":"18495:6:27","nodeType":"YulIdentifier","src":"18495:6:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6710,"isOffset":false,"isSlot":false,"src":"18185:1:27","valueSize":1},{"declaration":6712,"isOffset":false,"isSlot":false,"src":"18223:1:27","valueSize":1},{"declaration":6714,"isOffset":false,"isSlot":false,"src":"18261:1:27","valueSize":1},{"declaration":6719,"isOffset":false,"isSlot":false,"src":"18495:6:27","valueSize":1},{"declaration":6717,"isOffset":false,"isSlot":false,"src":"18425:7:27","valueSize":1}],"flags":["memory-safe"],"id":6729,"nodeType":"InlineAssembly","src":"17088:1438:27"}]},"documentation":{"id":6708,"nodeType":"StructuredDocumentation","src":"16191:738:27","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":6731,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:27","nodeType":"FunctionDefinition","parameters":{"id":6715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6710,"mutability":"mutable","name":"b","nameLocation":"16961:1:27","nodeType":"VariableDeclaration","scope":6731,"src":"16953:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6709,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6712,"mutability":"mutable","name":"e","nameLocation":"16972:1:27","nodeType":"VariableDeclaration","scope":6731,"src":"16964:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6711,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6714,"mutability":"mutable","name":"m","nameLocation":"16983:1:27","nodeType":"VariableDeclaration","scope":6731,"src":"16975:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6713,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:27"},"returnParameters":{"id":6720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6717,"mutability":"mutable","name":"success","nameLocation":"17014:7:27","nodeType":"VariableDeclaration","scope":6731,"src":"17009:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6716,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6719,"mutability":"mutable","name":"result","nameLocation":"17031:6:27","nodeType":"VariableDeclaration","scope":6731,"src":"17023:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6718,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:27"},"scope":7521,"src":"16934:1598:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6766,"nodeType":"Block","src":"18729:179:27","statements":[{"assignments":[6744,6746],"declarations":[{"constant":false,"id":6744,"mutability":"mutable","name":"success","nameLocation":"18745:7:27","nodeType":"VariableDeclaration","scope":6766,"src":"18740:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6743,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6746,"mutability":"mutable","name":"result","nameLocation":"18767:6:27","nodeType":"VariableDeclaration","scope":6766,"src":"18754:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6745,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6752,"initialValue":{"arguments":[{"id":6748,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"18787:1:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6749,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"18790:1:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6750,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"18793:1:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6747,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6731,6813],"referencedDeclaration":6813,"src":"18777:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:27"},{"condition":{"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:27","subExpression":{"id":6753,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"18810:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6763,"nodeType":"IfStatement","src":"18805:74:27","trueBody":{"id":6762,"nodeType":"Block","src":"18819:60:27","statements":[{"expression":{"arguments":[{"expression":{"id":6758,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"18845:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4232_$","typeString":"type(library Panic)"}},"id":6759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:27","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4199,"src":"18845:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6755,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"18833:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4232_$","typeString":"type(library Panic)"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:27","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4231,"src":"18833:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6761,"nodeType":"ExpressionStatement","src":"18833:35:27"}]}},{"expression":{"id":6764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"18895:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6742,"id":6765,"nodeType":"Return","src":"18888:13:27"}]},"documentation":{"id":6732,"nodeType":"StructuredDocumentation","src":"18538:85:27","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":6767,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:27","nodeType":"FunctionDefinition","parameters":{"id":6739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6734,"mutability":"mutable","name":"b","nameLocation":"18657:1:27","nodeType":"VariableDeclaration","scope":6767,"src":"18644:14:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6733,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6736,"mutability":"mutable","name":"e","nameLocation":"18673:1:27","nodeType":"VariableDeclaration","scope":6767,"src":"18660:14:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6735,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6738,"mutability":"mutable","name":"m","nameLocation":"18689:1:27","nodeType":"VariableDeclaration","scope":6767,"src":"18676:14:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6737,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:27"},"returnParameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6767,"src":"18715:12:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6740,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:27"},"scope":7521,"src":"18628:280:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6812,"nodeType":"Block","src":"19162:771:27","statements":[{"condition":{"arguments":[{"id":6782,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"19187:1:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6781,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"19176:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6791,"nodeType":"IfStatement","src":"19172:47:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6785,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":6780,"id":6790,"nodeType":"Return","src":"19191:28:27"}},{"assignments":[6793],"declarations":[{"constant":false,"id":6793,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:27","nodeType":"VariableDeclaration","scope":6812,"src":"19230:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6792,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6796,"initialValue":{"expression":{"id":6794,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"19245:1:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:27","memberName":"length","nodeType":"MemberAccess","src":"19245:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:27"},{"expression":{"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"19335:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6800,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"19361:1:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:27","memberName":"length","nodeType":"MemberAccess","src":"19361:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6802,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"19371:1:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:27","memberName":"length","nodeType":"MemberAccess","src":"19371:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6804,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"19381:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6805,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"19387:1:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6806,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"19390:1:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6807,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"19393:1:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6798,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:27","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6810,"nodeType":"ExpressionStatement","src":"19335:60:27"},{"AST":{"nativeSrc":"19431:496:27","nodeType":"YulBlock","src":"19431:496:27","statements":[{"nativeSrc":"19445:32:27","nodeType":"YulVariableDeclaration","src":"19445:32:27","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:27","nodeType":"YulIdentifier","src":"19464:6:27"},{"kind":"number","nativeSrc":"19472:4:27","nodeType":"YulLiteral","src":"19472:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:27","nodeType":"YulIdentifier","src":"19460:3:27"},"nativeSrc":"19460:17:27","nodeType":"YulFunctionCall","src":"19460:17:27"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:27","nodeType":"YulTypedName","src":"19449:7:27","type":""}]},{"nativeSrc":"19567:73:27","nodeType":"YulAssignment","src":"19567:73:27","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:27","nodeType":"YulIdentifier","src":"19589:3:27"},"nativeSrc":"19589:5:27","nodeType":"YulFunctionCall","src":"19589:5:27"},{"kind":"number","nativeSrc":"19596:4:27","nodeType":"YulLiteral","src":"19596:4:27","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:27","nodeType":"YulIdentifier","src":"19602:7:27"},{"arguments":[{"name":"result","nativeSrc":"19617:6:27","nodeType":"YulIdentifier","src":"19617:6:27"}],"functionName":{"name":"mload","nativeSrc":"19611:5:27","nodeType":"YulIdentifier","src":"19611:5:27"},"nativeSrc":"19611:13:27","nodeType":"YulFunctionCall","src":"19611:13:27"},{"name":"dataPtr","nativeSrc":"19626:7:27","nodeType":"YulIdentifier","src":"19626:7:27"},{"name":"mLen","nativeSrc":"19635:4:27","nodeType":"YulIdentifier","src":"19635:4:27"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:27","nodeType":"YulIdentifier","src":"19578:10:27"},"nativeSrc":"19578:62:27","nodeType":"YulFunctionCall","src":"19578:62:27"},"variableNames":[{"name":"success","nativeSrc":"19567:7:27","nodeType":"YulIdentifier","src":"19567:7:27"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:27","nodeType":"YulIdentifier","src":"19796:6:27"},{"name":"mLen","nativeSrc":"19804:4:27","nodeType":"YulIdentifier","src":"19804:4:27"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:27","nodeType":"YulIdentifier","src":"19789:6:27"},"nativeSrc":"19789:20:27","nodeType":"YulFunctionCall","src":"19789:20:27"},"nativeSrc":"19789:20:27","nodeType":"YulExpressionStatement","src":"19789:20:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:27","nodeType":"YulLiteral","src":"19892:4:27","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:27","nodeType":"YulIdentifier","src":"19902:7:27"},{"name":"mLen","nativeSrc":"19911:4:27","nodeType":"YulIdentifier","src":"19911:4:27"}],"functionName":{"name":"add","nativeSrc":"19898:3:27","nodeType":"YulIdentifier","src":"19898:3:27"},"nativeSrc":"19898:18:27","nodeType":"YulFunctionCall","src":"19898:18:27"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:27","nodeType":"YulIdentifier","src":"19885:6:27"},"nativeSrc":"19885:32:27","nodeType":"YulFunctionCall","src":"19885:32:27"},"nativeSrc":"19885:32:27","nodeType":"YulExpressionStatement","src":"19885:32:27"}]},"evmVersion":"paris","externalReferences":[{"declaration":6793,"isOffset":false,"isSlot":false,"src":"19635:4:27","valueSize":1},{"declaration":6793,"isOffset":false,"isSlot":false,"src":"19804:4:27","valueSize":1},{"declaration":6793,"isOffset":false,"isSlot":false,"src":"19911:4:27","valueSize":1},{"declaration":6779,"isOffset":false,"isSlot":false,"src":"19464:6:27","valueSize":1},{"declaration":6779,"isOffset":false,"isSlot":false,"src":"19617:6:27","valueSize":1},{"declaration":6779,"isOffset":false,"isSlot":false,"src":"19796:6:27","valueSize":1},{"declaration":6777,"isOffset":false,"isSlot":false,"src":"19567:7:27","valueSize":1}],"flags":["memory-safe"],"id":6811,"nodeType":"InlineAssembly","src":"19406:521:27"}]},"documentation":{"id":6768,"nodeType":"StructuredDocumentation","src":"18914:88:27","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":6813,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:27","nodeType":"FunctionDefinition","parameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6770,"mutability":"mutable","name":"b","nameLocation":"19048:1:27","nodeType":"VariableDeclaration","scope":6813,"src":"19035:14:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6769,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6772,"mutability":"mutable","name":"e","nameLocation":"19072:1:27","nodeType":"VariableDeclaration","scope":6813,"src":"19059:14:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6771,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6774,"mutability":"mutable","name":"m","nameLocation":"19096:1:27","nodeType":"VariableDeclaration","scope":6813,"src":"19083:14:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6773,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:27"},"returnParameters":{"id":6780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"success","nameLocation":"19132:7:27","nodeType":"VariableDeclaration","scope":6813,"src":"19127:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6776,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6779,"mutability":"mutable","name":"result","nameLocation":"19154:6:27","nodeType":"VariableDeclaration","scope":6813,"src":"19141:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6778,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:27"},"scope":7521,"src":"19007:926:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6845,"nodeType":"Block","src":"20088:176:27","statements":[{"body":{"id":6841,"nodeType":"Block","src":"20145:92:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6832,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"20163:9:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6834,"indexExpression":{"id":6833,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"20173:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6840,"nodeType":"IfStatement","src":"20159:68:27","trueBody":{"id":6839,"nodeType":"Block","src":"20182:45:27","statements":[{"expression":{"hexValue":"66616c7365","id":6837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6820,"id":6838,"nodeType":"Return","src":"20200:12:27"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6825,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"20118:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6826,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"20122:9:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:27","memberName":"length","nodeType":"MemberAccess","src":"20122:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6842,"initializationExpression":{"assignments":[6822],"declarations":[{"constant":false,"id":6822,"mutability":"mutable","name":"i","nameLocation":"20111:1:27","nodeType":"VariableDeclaration","scope":6842,"src":"20103:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6821,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6824,"initialValue":{"hexValue":"30","id":6823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:27","subExpression":{"id":6829,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"20142:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6831,"nodeType":"ExpressionStatement","src":"20140:3:27"},"nodeType":"ForStatement","src":"20098:139:27"},{"expression":{"hexValue":"74727565","id":6843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6820,"id":6844,"nodeType":"Return","src":"20246:11:27"}]},"documentation":{"id":6814,"nodeType":"StructuredDocumentation","src":"19939:72:27","text":" @dev Returns whether the provided byte array is zero."},"id":6846,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:27","nodeType":"FunctionDefinition","parameters":{"id":6817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6816,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:27","nodeType":"VariableDeclaration","scope":6846,"src":"20036:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6815,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:27"},"returnParameters":{"id":6820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6846,"src":"20082:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6818,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:27"},"scope":7521,"src":"20016:248:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7064,"nodeType":"Block","src":"20624:5124:27","statements":[{"id":7063,"nodeType":"UncheckedBlock","src":"20634:5108:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6854,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"20728:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":6855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6860,"nodeType":"IfStatement","src":"20724:53:27","trueBody":{"id":6859,"nodeType":"Block","src":"20736:41:27","statements":[{"expression":{"id":6857,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"20761:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6853,"id":6858,"nodeType":"Return","src":"20754:8:27"}]}},{"assignments":[6862],"declarations":[{"constant":false,"id":6862,"mutability":"mutable","name":"aa","nameLocation":"21712:2:27","nodeType":"VariableDeclaration","scope":7063,"src":"21704:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6861,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6864,"initialValue":{"id":6863,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"21717:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:27"},{"assignments":[6866],"declarations":[{"constant":false,"id":6866,"mutability":"mutable","name":"xn","nameLocation":"21740:2:27","nodeType":"VariableDeclaration","scope":7063,"src":"21732:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6865,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6868,"initialValue":{"hexValue":"31","id":6867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6869,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"21765:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:27","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:27","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6884,"nodeType":"IfStatement","src":"21761:92:27","trueBody":{"id":6883,"nodeType":"Block","src":"21783:70:27","statements":[{"expression":{"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6875,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"21801:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6878,"nodeType":"ExpressionStatement","src":"21801:10:27"},{"expression":{"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6879,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"21829:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":6880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6882,"nodeType":"ExpressionStatement","src":"21829:9:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6885,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"21870:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:27","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:27","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6900,"nodeType":"IfStatement","src":"21866:90:27","trueBody":{"id":6899,"nodeType":"Block","src":"21887:69:27","statements":[{"expression":{"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6891,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"21905:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6894,"nodeType":"ExpressionStatement","src":"21905:9:27"},{"expression":{"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6895,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"21932:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":6896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6898,"nodeType":"ExpressionStatement","src":"21932:9:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6901,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"21973:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:27","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:27","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6916,"nodeType":"IfStatement","src":"21969:90:27","trueBody":{"id":6915,"nodeType":"Block","src":"21990:69:27","statements":[{"expression":{"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6907,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"22008:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6910,"nodeType":"ExpressionStatement","src":"22008:9:27"},{"expression":{"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6911,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"22035:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":6912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6914,"nodeType":"ExpressionStatement","src":"22035:9:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6917,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"22076:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:27","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:27","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6932,"nodeType":"IfStatement","src":"22072:89:27","trueBody":{"id":6931,"nodeType":"Block","src":"22093:68:27","statements":[{"expression":{"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6923,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"22111:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6926,"nodeType":"ExpressionStatement","src":"22111:9:27"},{"expression":{"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6927,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"22138:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":6928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6930,"nodeType":"ExpressionStatement","src":"22138:8:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6933,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"22178:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:27","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:27","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6948,"nodeType":"IfStatement","src":"22174:87:27","trueBody":{"id":6947,"nodeType":"Block","src":"22194:67:27","statements":[{"expression":{"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6939,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"22212:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6942,"nodeType":"ExpressionStatement","src":"22212:8:27"},{"expression":{"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6943,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"22238:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":6944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6946,"nodeType":"ExpressionStatement","src":"22238:8:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6949,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"22278:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6964,"nodeType":"IfStatement","src":"22274:87:27","trueBody":{"id":6963,"nodeType":"Block","src":"22294:67:27","statements":[{"expression":{"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6955,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"22312:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6958,"nodeType":"ExpressionStatement","src":"22312:8:27"},{"expression":{"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6959,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"22338:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":6960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6962,"nodeType":"ExpressionStatement","src":"22338:8:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6965,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"22378:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6976,"nodeType":"IfStatement","src":"22374:61:27","trueBody":{"id":6975,"nodeType":"Block","src":"22394:41:27","statements":[{"expression":{"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6971,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"22412:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":6972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6974,"nodeType":"ExpressionStatement","src":"22412:8:27"}]}},{"expression":{"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6977,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"22855:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6979,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"22865:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6981,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6985,"nodeType":"ExpressionStatement","src":"22855:18:27"},{"expression":{"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6986,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24760:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6987,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24766:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6988,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"24771:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6989,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24775:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6996,"nodeType":"ExpressionStatement","src":"24760:23:27"},{"expression":{"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6997,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24869:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6998,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24875:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6999,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"24880:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7000,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24884:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7007,"nodeType":"ExpressionStatement","src":"24869:23:27"},{"expression":{"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7008,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24980:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7009,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24986:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"24991:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7011,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24995:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7018,"nodeType":"ExpressionStatement","src":"24980:23:27"},{"expression":{"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7019,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"25089:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7020,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"25095:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7021,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"25100:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7022,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"25104:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7029,"nodeType":"ExpressionStatement","src":"25089:23:27"},{"expression":{"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7030,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"25199:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7031,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"25205:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7032,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"25210:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7033,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"25214:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7040,"nodeType":"ExpressionStatement","src":"25199:23:27"},{"expression":{"id":7050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7041,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"25309:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7042,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"25315:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7043,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"25320:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7044,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"25324:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7051,"nodeType":"ExpressionStatement","src":"25309:23:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7052,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"25698:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7055,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"25719:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7056,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"25724:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7057,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"25728:2:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7053,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"25703:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"25703:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6853,"id":7062,"nodeType":"Return","src":"25691:40:27"}]}]},"documentation":{"id":6847,"nodeType":"StructuredDocumentation","src":"20270:292:27","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":7065,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:27","nodeType":"FunctionDefinition","parameters":{"id":6850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"a","nameLocation":"20589:1:27","nodeType":"VariableDeclaration","scope":7065,"src":"20581:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6848,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:27"},"returnParameters":{"id":6853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7065,"src":"20615:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6851,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:27"},"scope":7521,"src":"20567:5181:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7098,"nodeType":"Block","src":"25921:171:27","statements":[{"id":7097,"nodeType":"UncheckedBlock","src":"25931:155:27","statements":[{"assignments":[7077],"declarations":[{"constant":false,"id":7077,"mutability":"mutable","name":"result","nameLocation":"25963:6:27","nodeType":"VariableDeclaration","scope":7097,"src":"25955:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7076,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7081,"initialValue":{"arguments":[{"id":7079,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"25977:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7078,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[7065,7099],"referencedDeclaration":7065,"src":"25972:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7077,"src":"26000:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7086,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"26042:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}],"id":7085,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"26025:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5912_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7088,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7077,"src":"26055:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7077,"src":"26064:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7091,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"26073:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7083,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"26009:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"26009:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7075,"id":7096,"nodeType":"Return","src":"25993:82:27"}]}]},"documentation":{"id":7066,"nodeType":"StructuredDocumentation","src":"25754:86:27","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":7099,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:27","nodeType":"FunctionDefinition","parameters":{"id":7072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7068,"mutability":"mutable","name":"a","nameLocation":"25867:1:27","nodeType":"VariableDeclaration","scope":7099,"src":"25859:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7067,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7071,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:27","nodeType":"VariableDeclaration","scope":7099,"src":"25870:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"},"typeName":{"id":7070,"nodeType":"UserDefinedTypeName","pathNode":{"id":7069,"name":"Rounding","nameLocations":["25870:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"25870:8:27"},"referencedDeclaration":5912,"src":"25870:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:27"},"returnParameters":{"id":7075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7099,"src":"25912:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7073,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:27"},"scope":7521,"src":"25845:247:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7189,"nodeType":"Block","src":"26281:2334:27","statements":[{"expression":{"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7107,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"26363:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7110,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"26383:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:27","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7108,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"26367:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"26367:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:27","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7117,"nodeType":"ExpressionStatement","src":"26363:64:27"},{"expression":{"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7118,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"26503:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7121,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"26525:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7122,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"26530:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:27","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7119,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"26508:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"26508:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:27","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7131,"nodeType":"ExpressionStatement","src":"26503:56:27"},{"expression":{"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7132,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"26634:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7135,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"26656:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7136,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"26661:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:27","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7133,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"26639:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"26639:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:27","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7145,"nodeType":"ExpressionStatement","src":"26634:48:27"},{"expression":{"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7146,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"26757:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7149,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"26779:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7150,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"26784:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:27","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7147,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"26762:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"26762:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7159,"nodeType":"ExpressionStatement","src":"26757:44:27"},{"expression":{"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7160,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"26874:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7163,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"26896:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7164,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"26901:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7161,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"26879:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"26879:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7173,"nodeType":"ExpressionStatement","src":"26874:42:27"},{"expression":{"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7174,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"26988:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7177,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"27010:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7178,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"27015:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":7181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:27","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7175,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"26993:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"26993:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7187,"nodeType":"ExpressionStatement","src":"26988:41:27"},{"AST":{"nativeSrc":"28490:119:27","nodeType":"YulBlock","src":"28490:119:27","statements":[{"nativeSrc":"28504:95:27","nodeType":"YulAssignment","src":"28504:95:27","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:27","nodeType":"YulIdentifier","src":"28512:1:27"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:27","nodeType":"YulIdentifier","src":"28524:1:27"},{"name":"x","nativeSrc":"28527:1:27","nodeType":"YulIdentifier","src":"28527:1:27"}],"functionName":{"name":"shr","nativeSrc":"28520:3:27","nodeType":"YulIdentifier","src":"28520:3:27"},"nativeSrc":"28520:9:27","nodeType":"YulFunctionCall","src":"28520:9:27"},{"kind":"number","nativeSrc":"28531:66:27","nodeType":"YulLiteral","src":"28531:66:27","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:27","nodeType":"YulIdentifier","src":"28515:4:27"},"nativeSrc":"28515:83:27","nodeType":"YulFunctionCall","src":"28515:83:27"}],"functionName":{"name":"or","nativeSrc":"28509:2:27","nodeType":"YulIdentifier","src":"28509:2:27"},"nativeSrc":"28509:90:27","nodeType":"YulFunctionCall","src":"28509:90:27"},"variableNames":[{"name":"r","nativeSrc":"28504:1:27","nodeType":"YulIdentifier","src":"28504:1:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7105,"isOffset":false,"isSlot":false,"src":"28504:1:27","valueSize":1},{"declaration":7105,"isOffset":false,"isSlot":false,"src":"28512:1:27","valueSize":1},{"declaration":7105,"isOffset":false,"isSlot":false,"src":"28524:1:27","valueSize":1},{"declaration":7102,"isOffset":false,"isSlot":false,"src":"28527:1:27","valueSize":1}],"flags":["memory-safe"],"id":7188,"nodeType":"InlineAssembly","src":"28465:144:27"}]},"documentation":{"id":7100,"nodeType":"StructuredDocumentation","src":"26098:119:27","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7190,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:27","nodeType":"FunctionDefinition","parameters":{"id":7103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7102,"mutability":"mutable","name":"x","nameLocation":"26244:1:27","nodeType":"VariableDeclaration","scope":7190,"src":"26236:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7101,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:27"},"returnParameters":{"id":7106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7105,"mutability":"mutable","name":"r","nameLocation":"26278:1:27","nodeType":"VariableDeclaration","scope":7190,"src":"26270:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7104,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:27"},"scope":7521,"src":"26222:2393:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7223,"nodeType":"Block","src":"28848:175:27","statements":[{"id":7222,"nodeType":"UncheckedBlock","src":"28858:159:27","statements":[{"assignments":[7202],"declarations":[{"constant":false,"id":7202,"mutability":"mutable","name":"result","nameLocation":"28890:6:27","nodeType":"VariableDeclaration","scope":7222,"src":"28882:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7201,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7206,"initialValue":{"arguments":[{"id":7204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"28904:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7203,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[7190,7224],"referencedDeclaration":7190,"src":"28899:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"28931:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7211,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"28973:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}],"id":7210,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"28956:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5912_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"28991:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"29000:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7208,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"28940:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"28940:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7200,"id":7221,"nodeType":"Return","src":"28924:82:27"}]}]},"documentation":{"id":7191,"nodeType":"StructuredDocumentation","src":"28621:142:27","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7224,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:27","nodeType":"FunctionDefinition","parameters":{"id":7197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7193,"mutability":"mutable","name":"value","nameLocation":"28790:5:27","nodeType":"VariableDeclaration","scope":7224,"src":"28782:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7192,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7196,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:27","nodeType":"VariableDeclaration","scope":7224,"src":"28797:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"},"typeName":{"id":7195,"nodeType":"UserDefinedTypeName","pathNode":{"id":7194,"name":"Rounding","nameLocations":["28797:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"28797:8:27"},"referencedDeclaration":5912,"src":"28797:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:27"},"returnParameters":{"id":7200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7224,"src":"28839:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7198,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:27"},"scope":7521,"src":"28768:255:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7352,"nodeType":"Block","src":"29216:854:27","statements":[{"assignments":[7233],"declarations":[{"constant":false,"id":7233,"mutability":"mutable","name":"result","nameLocation":"29234:6:27","nodeType":"VariableDeclaration","scope":7352,"src":"29226:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7232,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7235,"initialValue":{"hexValue":"30","id":7234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:27"},{"id":7349,"nodeType":"UncheckedBlock","src":"29254:787:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29282:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7252,"nodeType":"IfStatement","src":"29278:103:27","trueBody":{"id":7251,"nodeType":"Block","src":"29301:80:27","statements":[{"expression":{"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29319:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7246,"nodeType":"ExpressionStatement","src":"29319:17:27"},{"expression":{"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7247,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"29354:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":7248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7250,"nodeType":"ExpressionStatement","src":"29354:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29398:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7269,"nodeType":"IfStatement","src":"29394:103:27","trueBody":{"id":7268,"nodeType":"Block","src":"29417:80:27","statements":[{"expression":{"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29435:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7263,"nodeType":"ExpressionStatement","src":"29435:17:27"},{"expression":{"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"29470:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":7265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7267,"nodeType":"ExpressionStatement","src":"29470:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29514:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7286,"nodeType":"IfStatement","src":"29510:103:27","trueBody":{"id":7285,"nodeType":"Block","src":"29533:80:27","statements":[{"expression":{"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29551:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7280,"nodeType":"ExpressionStatement","src":"29551:17:27"},{"expression":{"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"29586:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":7282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7284,"nodeType":"ExpressionStatement","src":"29586:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29630:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7303,"nodeType":"IfStatement","src":"29626:100:27","trueBody":{"id":7302,"nodeType":"Block","src":"29648:78:27","statements":[{"expression":{"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29666:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7297,"nodeType":"ExpressionStatement","src":"29666:16:27"},{"expression":{"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"29700:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":7299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7301,"nodeType":"ExpressionStatement","src":"29700:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29743:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7320,"nodeType":"IfStatement","src":"29739:100:27","trueBody":{"id":7319,"nodeType":"Block","src":"29761:78:27","statements":[{"expression":{"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29779:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7314,"nodeType":"ExpressionStatement","src":"29779:16:27"},{"expression":{"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7315,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"29813:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":7316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7318,"nodeType":"ExpressionStatement","src":"29813:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29856:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7337,"nodeType":"IfStatement","src":"29852:100:27","trueBody":{"id":7336,"nodeType":"Block","src":"29874:78:27","statements":[{"expression":{"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29892:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7331,"nodeType":"ExpressionStatement","src":"29892:16:27"},{"expression":{"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"29926:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":7333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7335,"nodeType":"ExpressionStatement","src":"29926:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"29969:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":7341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":7340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7348,"nodeType":"IfStatement","src":"29965:66:27","trueBody":{"id":7347,"nodeType":"Block","src":"29987:44:27","statements":[{"expression":{"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"30005:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7346,"nodeType":"ExpressionStatement","src":"30005:11:27"}]}}]},{"expression":{"id":7350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"30057:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7231,"id":7351,"nodeType":"Return","src":"30050:13:27"}]},"documentation":{"id":7225,"nodeType":"StructuredDocumentation","src":"29029:120:27","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7353,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:27","nodeType":"FunctionDefinition","parameters":{"id":7228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7227,"mutability":"mutable","name":"value","nameLocation":"29177:5:27","nodeType":"VariableDeclaration","scope":7353,"src":"29169:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7226,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:27"},"returnParameters":{"id":7231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7353,"src":"29207:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7229,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:27"},"scope":7521,"src":"29154:916:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7386,"nodeType":"Block","src":"30305:177:27","statements":[{"id":7385,"nodeType":"UncheckedBlock","src":"30315:161:27","statements":[{"assignments":[7365],"declarations":[{"constant":false,"id":7365,"mutability":"mutable","name":"result","nameLocation":"30347:6:27","nodeType":"VariableDeclaration","scope":7385,"src":"30339:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7364,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7369,"initialValue":{"arguments":[{"id":7367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"30362:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7366,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[7353,7387],"referencedDeclaration":7353,"src":"30356:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"30389:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7374,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"30431:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}],"id":7373,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"30414:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5912_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":7377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"30450:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"30459:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7371,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"30398:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"30398:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7363,"id":7384,"nodeType":"Return","src":"30382:83:27"}]}]},"documentation":{"id":7354,"nodeType":"StructuredDocumentation","src":"30076:143:27","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7387,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:27","nodeType":"FunctionDefinition","parameters":{"id":7360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7356,"mutability":"mutable","name":"value","nameLocation":"30247:5:27","nodeType":"VariableDeclaration","scope":7387,"src":"30239:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7355,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7359,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:27","nodeType":"VariableDeclaration","scope":7387,"src":"30254:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"},"typeName":{"id":7358,"nodeType":"UserDefinedTypeName","pathNode":{"id":7357,"name":"Rounding","nameLocations":["30254:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"30254:8:27"},"referencedDeclaration":5912,"src":"30254:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:27"},"returnParameters":{"id":7363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7387,"src":"30296:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7361,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:27"},"scope":7521,"src":"30224:258:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7463,"nodeType":"Block","src":"30800:675:27","statements":[{"expression":{"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7395,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"30882:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7398,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"30902:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:27","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7396,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"30886:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"30886:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:27","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7405,"nodeType":"ExpressionStatement","src":"30882:64:27"},{"expression":{"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7406,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"31022:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7409,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"31044:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7410,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"31049:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:27","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7407,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"31027:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"31027:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:27","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7419,"nodeType":"ExpressionStatement","src":"31022:56:27"},{"expression":{"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7420,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"31153:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7423,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"31175:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7424,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"31180:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:27","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7421,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"31158:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"31158:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:27","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7433,"nodeType":"ExpressionStatement","src":"31153:48:27"},{"expression":{"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7434,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"31276:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7437,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"31298:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7438,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"31303:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:27","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7435,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"31281:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"31281:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7447,"nodeType":"ExpressionStatement","src":"31276:44:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7448,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"31426:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":7449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7454,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"31453:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7455,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"31458:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7452,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"31436:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"31436:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7394,"id":7462,"nodeType":"Return","src":"31418:50:27"}]},"documentation":{"id":7388,"nodeType":"StructuredDocumentation","src":"30488:246:27","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":7464,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:27","nodeType":"FunctionDefinition","parameters":{"id":7391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7390,"mutability":"mutable","name":"x","nameLocation":"30763:1:27","nodeType":"VariableDeclaration","scope":7464,"src":"30755:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7389,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:27"},"returnParameters":{"id":7394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7393,"mutability":"mutable","name":"r","nameLocation":"30797:1:27","nodeType":"VariableDeclaration","scope":7464,"src":"30789:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7392,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:27"},"scope":7521,"src":"30739:736:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7500,"nodeType":"Block","src":"31712:184:27","statements":[{"id":7499,"nodeType":"UncheckedBlock","src":"31722:168:27","statements":[{"assignments":[7476],"declarations":[{"constant":false,"id":7476,"mutability":"mutable","name":"result","nameLocation":"31754:6:27","nodeType":"VariableDeclaration","scope":7499,"src":"31746:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7475,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7480,"initialValue":{"arguments":[{"id":7478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"31770:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7477,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[7464,7501],"referencedDeclaration":7464,"src":"31763:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"31797:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7485,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"31839:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}],"id":7484,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"31822:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5912_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"31858:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7491,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"31873:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7482,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"31806:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"31806:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7474,"id":7498,"nodeType":"Return","src":"31790:89:27"}]}]},"documentation":{"id":7465,"nodeType":"StructuredDocumentation","src":"31481:144:27","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7501,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:27","nodeType":"FunctionDefinition","parameters":{"id":7471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7467,"mutability":"mutable","name":"value","nameLocation":"31654:5:27","nodeType":"VariableDeclaration","scope":7501,"src":"31646:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7466,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7470,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:27","nodeType":"VariableDeclaration","scope":7501,"src":"31661:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"},"typeName":{"id":7469,"nodeType":"UserDefinedTypeName","pathNode":{"id":7468,"name":"Rounding","nameLocations":["31661:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"31661:8:27"},"referencedDeclaration":5912,"src":"31661:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:27"},"returnParameters":{"id":7474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7501,"src":"31703:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7472,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:27"},"scope":7521,"src":"31630:266:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7519,"nodeType":"Block","src":"32094:48:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7512,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"32117:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}],"id":7511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7510,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:27","typeDescriptions":{}}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":7514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7509,"id":7518,"nodeType":"Return","src":"32104:31:27"}]},"documentation":{"id":7502,"nodeType":"StructuredDocumentation","src":"31902:113:27","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":7520,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:27","nodeType":"FunctionDefinition","parameters":{"id":7506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7505,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:27","nodeType":"VariableDeclaration","scope":7520,"src":"32046:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"},"typeName":{"id":7504,"nodeType":"UserDefinedTypeName","pathNode":{"id":7503,"name":"Rounding","nameLocations":["32046:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"32046:8:27"},"referencedDeclaration":5912,"src":"32046:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5912","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:27"},"returnParameters":{"id":7509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7520,"src":"32088:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7507,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:27"},"scope":7521,"src":"32020:122:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7522,"src":"281:31863:27","usedErrors":[],"usedEvents":[]}],"src":"103:32042:27"},"id":27},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[9286]},"id":9287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7523,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":7524,"nodeType":"StructuredDocumentation","src":"218:550:28","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":9286,"linearizedBaseContracts":[9286],"name":"SafeCast","nameLocation":"777:8:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7525,"nodeType":"StructuredDocumentation","src":"792:68:28","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":7531,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:28","nodeType":"ErrorDefinition","parameters":{"id":7530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7527,"mutability":"mutable","name":"bits","nameLocation":"908:4:28","nodeType":"VariableDeclaration","scope":7531,"src":"902:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7526,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7529,"mutability":"mutable","name":"value","nameLocation":"922:5:28","nodeType":"VariableDeclaration","scope":7531,"src":"914:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7528,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:28"},"src":"865:64:28"},{"documentation":{"id":7532,"nodeType":"StructuredDocumentation","src":"935:75:28","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":7536,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:28","nodeType":"ErrorDefinition","parameters":{"id":7535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7534,"mutability":"mutable","name":"value","nameLocation":"1056:5:28","nodeType":"VariableDeclaration","scope":7536,"src":"1049:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7533,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:28"},"src":"1015:48:28"},{"documentation":{"id":7537,"nodeType":"StructuredDocumentation","src":"1069:67:28","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":7543,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:28","nodeType":"ErrorDefinition","parameters":{"id":7542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7539,"mutability":"mutable","name":"bits","nameLocation":"1183:4:28","nodeType":"VariableDeclaration","scope":7543,"src":"1177:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7538,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7541,"mutability":"mutable","name":"value","nameLocation":"1196:5:28","nodeType":"VariableDeclaration","scope":7543,"src":"1189:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7540,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:28"},"src":"1141:62:28"},{"documentation":{"id":7544,"nodeType":"StructuredDocumentation","src":"1209:75:28","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":7548,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:28","nodeType":"ErrorDefinition","parameters":{"id":7547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7546,"mutability":"mutable","name":"value","nameLocation":"1331:5:28","nodeType":"VariableDeclaration","scope":7548,"src":"1323:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:28"},"src":"1289:49:28"},{"body":{"id":7575,"nodeType":"Block","src":"1695:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"1709:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7558,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":7557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":7561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:28","memberName":"max","nodeType":"MemberAccess","src":"1717:17:28","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7569,"nodeType":"IfStatement","src":"1705:105:28","trueBody":{"id":7568,"nodeType":"Block","src":"1736:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:28","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"1793:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7563,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"1757:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7567,"nodeType":"RevertStatement","src":"1750:49:28"}]}},{"expression":{"arguments":[{"id":7572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"1834:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7570,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:28","typeDescriptions":{}}},"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":7555,"id":7574,"nodeType":"Return","src":"1819:21:28"}]},"documentation":{"id":7549,"nodeType":"StructuredDocumentation","src":"1344:280:28","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7576,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:28","nodeType":"FunctionDefinition","parameters":{"id":7552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7551,"mutability":"mutable","name":"value","nameLocation":"1656:5:28","nodeType":"VariableDeclaration","scope":7576,"src":"1648:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:28"},"returnParameters":{"id":7555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7576,"src":"1686:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":7553,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:28","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:28"},"scope":9286,"src":"1629:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7603,"nodeType":"Block","src":"2204:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"2218:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7586,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7585,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:28","memberName":"max","nodeType":"MemberAccess","src":"2226:17:28","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7597,"nodeType":"IfStatement","src":"2214:105:28","trueBody":{"id":7596,"nodeType":"Block","src":"2245:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:28","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"2302:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7591,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"2266:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7595,"nodeType":"RevertStatement","src":"2259:49:28"}]}},{"expression":{"arguments":[{"id":7600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"2343:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7598,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:28","typeDescriptions":{}}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7583,"id":7602,"nodeType":"Return","src":"2328:21:28"}]},"documentation":{"id":7577,"nodeType":"StructuredDocumentation","src":"1853:280:28","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7604,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:28","nodeType":"FunctionDefinition","parameters":{"id":7580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7579,"mutability":"mutable","name":"value","nameLocation":"2165:5:28","nodeType":"VariableDeclaration","scope":7604,"src":"2157:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7578,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:28"},"returnParameters":{"id":7583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7604,"src":"2195:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7581,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:28","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:28"},"scope":9286,"src":"2138:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7631,"nodeType":"Block","src":"2713:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"2727:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7614,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7613,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:28","memberName":"max","nodeType":"MemberAccess","src":"2735:17:28","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7625,"nodeType":"IfStatement","src":"2723:105:28","trueBody":{"id":7624,"nodeType":"Block","src":"2754:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:28","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"2811:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7619,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"2775:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7623,"nodeType":"RevertStatement","src":"2768:49:28"}]}},{"expression":{"arguments":[{"id":7628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"2852:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7626,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:28","typeDescriptions":{}}},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7611,"id":7630,"nodeType":"Return","src":"2837:21:28"}]},"documentation":{"id":7605,"nodeType":"StructuredDocumentation","src":"2362:280:28","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7632,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:28","nodeType":"FunctionDefinition","parameters":{"id":7608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7607,"mutability":"mutable","name":"value","nameLocation":"2674:5:28","nodeType":"VariableDeclaration","scope":7632,"src":"2666:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7606,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:28"},"returnParameters":{"id":7611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7632,"src":"2704:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7609,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:28","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:28"},"scope":9286,"src":"2647:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7659,"nodeType":"Block","src":"3222:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"3236:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7642,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":7641,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":7645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:28","memberName":"max","nodeType":"MemberAccess","src":"3244:17:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7653,"nodeType":"IfStatement","src":"3232:105:28","trueBody":{"id":7652,"nodeType":"Block","src":"3263:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:28","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"3320:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7647,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"3284:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7651,"nodeType":"RevertStatement","src":"3277:49:28"}]}},{"expression":{"arguments":[{"id":7656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"3361:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7654,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:28","typeDescriptions":{}}},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7639,"id":7658,"nodeType":"Return","src":"3346:21:28"}]},"documentation":{"id":7633,"nodeType":"StructuredDocumentation","src":"2871:280:28","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7660,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:28","nodeType":"FunctionDefinition","parameters":{"id":7636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7635,"mutability":"mutable","name":"value","nameLocation":"3183:5:28","nodeType":"VariableDeclaration","scope":7660,"src":"3175:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7634,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:28"},"returnParameters":{"id":7639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7660,"src":"3213:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7637,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:28"},"scope":9286,"src":"3156:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7687,"nodeType":"Block","src":"3731:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"3745:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7670,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":7669,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":7673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:28","memberName":"max","nodeType":"MemberAccess","src":"3753:17:28","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7681,"nodeType":"IfStatement","src":"3741:105:28","trueBody":{"id":7680,"nodeType":"Block","src":"3772:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:28","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"3829:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7675,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"3793:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7679,"nodeType":"RevertStatement","src":"3786:49:28"}]}},{"expression":{"arguments":[{"id":7684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"3870:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7682,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:28","typeDescriptions":{}}},"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":7667,"id":7686,"nodeType":"Return","src":"3855:21:28"}]},"documentation":{"id":7661,"nodeType":"StructuredDocumentation","src":"3380:280:28","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7688,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:28","nodeType":"FunctionDefinition","parameters":{"id":7664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7663,"mutability":"mutable","name":"value","nameLocation":"3692:5:28","nodeType":"VariableDeclaration","scope":7688,"src":"3684:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7662,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:28"},"returnParameters":{"id":7667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7688,"src":"3722:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":7665,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:28","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:28"},"scope":9286,"src":"3665:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7715,"nodeType":"Block","src":"4240:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"4254:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7698,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":7697,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":7701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:28","memberName":"max","nodeType":"MemberAccess","src":"4262:17:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7709,"nodeType":"IfStatement","src":"4250:105:28","trueBody":{"id":7708,"nodeType":"Block","src":"4281:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:28","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"4338:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7703,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"4302:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7707,"nodeType":"RevertStatement","src":"4295:49:28"}]}},{"expression":{"arguments":[{"id":7712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"4379:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7710,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:28","typeDescriptions":{}}},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7695,"id":7714,"nodeType":"Return","src":"4364:21:28"}]},"documentation":{"id":7689,"nodeType":"StructuredDocumentation","src":"3889:280:28","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7716,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:28","nodeType":"FunctionDefinition","parameters":{"id":7692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7691,"mutability":"mutable","name":"value","nameLocation":"4201:5:28","nodeType":"VariableDeclaration","scope":7716,"src":"4193:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7690,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:28"},"returnParameters":{"id":7695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7716,"src":"4231:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7693,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:28"},"scope":9286,"src":"4174:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7743,"nodeType":"Block","src":"4749:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"4763:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7726,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":7725,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":7729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:28","memberName":"max","nodeType":"MemberAccess","src":"4771:17:28","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7737,"nodeType":"IfStatement","src":"4759:105:28","trueBody":{"id":7736,"nodeType":"Block","src":"4790:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:28","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"4847:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7731,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"4811:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7735,"nodeType":"RevertStatement","src":"4804:49:28"}]}},{"expression":{"arguments":[{"id":7740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"4888:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7738,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:28","typeDescriptions":{}}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":7723,"id":7742,"nodeType":"Return","src":"4873:21:28"}]},"documentation":{"id":7717,"nodeType":"StructuredDocumentation","src":"4398:280:28","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7744,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:28","nodeType":"FunctionDefinition","parameters":{"id":7720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7719,"mutability":"mutable","name":"value","nameLocation":"4710:5:28","nodeType":"VariableDeclaration","scope":7744,"src":"4702:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7718,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:28"},"returnParameters":{"id":7723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7744,"src":"4740:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":7721,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:28","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:28"},"scope":9286,"src":"4683:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7771,"nodeType":"Block","src":"5258:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"5272:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7754,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7753,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:28","memberName":"max","nodeType":"MemberAccess","src":"5280:17:28","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7765,"nodeType":"IfStatement","src":"5268:105:28","trueBody":{"id":7764,"nodeType":"Block","src":"5299:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:28","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"5356:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7759,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"5320:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7763,"nodeType":"RevertStatement","src":"5313:49:28"}]}},{"expression":{"arguments":[{"id":7768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"5397:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7766,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:28","typeDescriptions":{}}},"id":7769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7751,"id":7770,"nodeType":"Return","src":"5382:21:28"}]},"documentation":{"id":7745,"nodeType":"StructuredDocumentation","src":"4907:280:28","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7772,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:28","nodeType":"FunctionDefinition","parameters":{"id":7748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7747,"mutability":"mutable","name":"value","nameLocation":"5219:5:28","nodeType":"VariableDeclaration","scope":7772,"src":"5211:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7746,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:28"},"returnParameters":{"id":7751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7772,"src":"5249:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7749,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:28","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:28"},"scope":9286,"src":"5192:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7799,"nodeType":"Block","src":"5767:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"5781:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7782,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":7781,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":7785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:28","memberName":"max","nodeType":"MemberAccess","src":"5789:17:28","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7793,"nodeType":"IfStatement","src":"5777:105:28","trueBody":{"id":7792,"nodeType":"Block","src":"5808:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:28","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"5865:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7787,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"5829:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7791,"nodeType":"RevertStatement","src":"5822:49:28"}]}},{"expression":{"arguments":[{"id":7796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"5906:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7794,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:28","typeDescriptions":{}}},"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":7779,"id":7798,"nodeType":"Return","src":"5891:21:28"}]},"documentation":{"id":7773,"nodeType":"StructuredDocumentation","src":"5416:280:28","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7800,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:28","nodeType":"FunctionDefinition","parameters":{"id":7776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7775,"mutability":"mutable","name":"value","nameLocation":"5728:5:28","nodeType":"VariableDeclaration","scope":7800,"src":"5720:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7774,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:28"},"returnParameters":{"id":7779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7800,"src":"5758:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":7777,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:28","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:28"},"scope":9286,"src":"5701:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7827,"nodeType":"Block","src":"6276:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"6290:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7810,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":7809,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":7813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:28","memberName":"max","nodeType":"MemberAccess","src":"6298:17:28","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7821,"nodeType":"IfStatement","src":"6286:105:28","trueBody":{"id":7820,"nodeType":"Block","src":"6317:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:28","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"6374:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7815,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"6338:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7819,"nodeType":"RevertStatement","src":"6331:49:28"}]}},{"expression":{"arguments":[{"id":7824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"6415:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7822,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:28","typeDescriptions":{}}},"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":7807,"id":7826,"nodeType":"Return","src":"6400:21:28"}]},"documentation":{"id":7801,"nodeType":"StructuredDocumentation","src":"5925:280:28","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7828,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:28","nodeType":"FunctionDefinition","parameters":{"id":7804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7803,"mutability":"mutable","name":"value","nameLocation":"6237:5:28","nodeType":"VariableDeclaration","scope":7828,"src":"6229:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7802,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:28"},"returnParameters":{"id":7807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7828,"src":"6267:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":7805,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:28","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:28"},"scope":9286,"src":"6210:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7855,"nodeType":"Block","src":"6785:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"6799:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7838,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":7837,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":7841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:28","memberName":"max","nodeType":"MemberAccess","src":"6807:17:28","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7849,"nodeType":"IfStatement","src":"6795:105:28","trueBody":{"id":7848,"nodeType":"Block","src":"6826:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:28","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"6883:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7843,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"6847:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7847,"nodeType":"RevertStatement","src":"6840:49:28"}]}},{"expression":{"arguments":[{"id":7852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"6924:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7850,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:28","typeDescriptions":{}}},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":7835,"id":7854,"nodeType":"Return","src":"6909:21:28"}]},"documentation":{"id":7829,"nodeType":"StructuredDocumentation","src":"6434:280:28","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7856,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:28","nodeType":"FunctionDefinition","parameters":{"id":7832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7831,"mutability":"mutable","name":"value","nameLocation":"6746:5:28","nodeType":"VariableDeclaration","scope":7856,"src":"6738:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7830,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:28"},"returnParameters":{"id":7835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7856,"src":"6776:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":7833,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:28","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:28"},"scope":9286,"src":"6719:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7883,"nodeType":"Block","src":"7294:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"7308:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7866,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":7865,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":7869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:28","memberName":"max","nodeType":"MemberAccess","src":"7316:17:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7877,"nodeType":"IfStatement","src":"7304:105:28","trueBody":{"id":7876,"nodeType":"Block","src":"7335:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:28","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"7392:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7871,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"7356:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7875,"nodeType":"RevertStatement","src":"7349:49:28"}]}},{"expression":{"arguments":[{"id":7880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"7433:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7878,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:28","typeDescriptions":{}}},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7863,"id":7882,"nodeType":"Return","src":"7418:21:28"}]},"documentation":{"id":7857,"nodeType":"StructuredDocumentation","src":"6943:280:28","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7884,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:28","nodeType":"FunctionDefinition","parameters":{"id":7860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7859,"mutability":"mutable","name":"value","nameLocation":"7255:5:28","nodeType":"VariableDeclaration","scope":7884,"src":"7247:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7858,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:28"},"returnParameters":{"id":7863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7884,"src":"7285:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7861,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:28"},"scope":9286,"src":"7228:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7911,"nodeType":"Block","src":"7803:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"7817:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7894,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":7893,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":7897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:28","memberName":"max","nodeType":"MemberAccess","src":"7825:17:28","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7905,"nodeType":"IfStatement","src":"7813:105:28","trueBody":{"id":7904,"nodeType":"Block","src":"7844:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:28","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"7901:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7899,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"7865:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7903,"nodeType":"RevertStatement","src":"7858:49:28"}]}},{"expression":{"arguments":[{"id":7908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"7942:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7906,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:28","typeDescriptions":{}}},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":7891,"id":7910,"nodeType":"Return","src":"7927:21:28"}]},"documentation":{"id":7885,"nodeType":"StructuredDocumentation","src":"7452:280:28","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7912,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:28","nodeType":"FunctionDefinition","parameters":{"id":7888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7887,"mutability":"mutable","name":"value","nameLocation":"7764:5:28","nodeType":"VariableDeclaration","scope":7912,"src":"7756:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7886,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:28"},"returnParameters":{"id":7891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7912,"src":"7794:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":7889,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:28","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:28"},"scope":9286,"src":"7737:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7939,"nodeType":"Block","src":"8312:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7915,"src":"8326:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7922,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":7921,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":7925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:28","memberName":"max","nodeType":"MemberAccess","src":"8334:17:28","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7933,"nodeType":"IfStatement","src":"8322:105:28","trueBody":{"id":7932,"nodeType":"Block","src":"8353:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:28","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7915,"src":"8410:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7927,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"8374:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7931,"nodeType":"RevertStatement","src":"8367:49:28"}]}},{"expression":{"arguments":[{"id":7936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7915,"src":"8451:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7934,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:28","typeDescriptions":{}}},"id":7937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":7919,"id":7938,"nodeType":"Return","src":"8436:21:28"}]},"documentation":{"id":7913,"nodeType":"StructuredDocumentation","src":"7961:280:28","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7940,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:28","nodeType":"FunctionDefinition","parameters":{"id":7916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7915,"mutability":"mutable","name":"value","nameLocation":"8273:5:28","nodeType":"VariableDeclaration","scope":7940,"src":"8265:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7914,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:28"},"returnParameters":{"id":7919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7940,"src":"8303:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":7917,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:28","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:28"},"scope":9286,"src":"8246:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7967,"nodeType":"Block","src":"8821:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"8835:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7950,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":7949,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":7953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:28","memberName":"max","nodeType":"MemberAccess","src":"8843:17:28","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7961,"nodeType":"IfStatement","src":"8831:105:28","trueBody":{"id":7960,"nodeType":"Block","src":"8862:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:28","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"8919:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7955,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"8883:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7959,"nodeType":"RevertStatement","src":"8876:49:28"}]}},{"expression":{"arguments":[{"id":7964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"8960:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7962,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:28","typeDescriptions":{}}},"id":7965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":7947,"id":7966,"nodeType":"Return","src":"8945:21:28"}]},"documentation":{"id":7941,"nodeType":"StructuredDocumentation","src":"8470:280:28","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7968,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:28","nodeType":"FunctionDefinition","parameters":{"id":7944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7943,"mutability":"mutable","name":"value","nameLocation":"8782:5:28","nodeType":"VariableDeclaration","scope":7968,"src":"8774:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7942,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:28"},"returnParameters":{"id":7947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7968,"src":"8812:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":7945,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:28","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:28"},"scope":9286,"src":"8755:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7995,"nodeType":"Block","src":"9330:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"9344:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7978,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7977,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:28","memberName":"max","nodeType":"MemberAccess","src":"9352:17:28","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7989,"nodeType":"IfStatement","src":"9340:105:28","trueBody":{"id":7988,"nodeType":"Block","src":"9371:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"9428:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7983,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"9392:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7987,"nodeType":"RevertStatement","src":"9385:49:28"}]}},{"expression":{"arguments":[{"id":7992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"9469:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7990,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:28","typeDescriptions":{}}},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7975,"id":7994,"nodeType":"Return","src":"9454:21:28"}]},"documentation":{"id":7969,"nodeType":"StructuredDocumentation","src":"8979:280:28","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7996,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:28","nodeType":"FunctionDefinition","parameters":{"id":7972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7971,"mutability":"mutable","name":"value","nameLocation":"9291:5:28","nodeType":"VariableDeclaration","scope":7996,"src":"9283:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7970,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:28"},"returnParameters":{"id":7975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7996,"src":"9321:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7973,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:28","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:28"},"scope":9286,"src":"9264:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8023,"nodeType":"Block","src":"9839:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"9853:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8006,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":8005,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":8009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:28","memberName":"max","nodeType":"MemberAccess","src":"9861:17:28","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8017,"nodeType":"IfStatement","src":"9849:105:28","trueBody":{"id":8016,"nodeType":"Block","src":"9880:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:28","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"9937:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8011,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"9901:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8015,"nodeType":"RevertStatement","src":"9894:49:28"}]}},{"expression":{"arguments":[{"id":8020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"9978:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8018,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:28","typeDescriptions":{}}},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":8003,"id":8022,"nodeType":"Return","src":"9963:21:28"}]},"documentation":{"id":7997,"nodeType":"StructuredDocumentation","src":"9488:280:28","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8024,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:28","nodeType":"FunctionDefinition","parameters":{"id":8000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7999,"mutability":"mutable","name":"value","nameLocation":"9800:5:28","nodeType":"VariableDeclaration","scope":8024,"src":"9792:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7998,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:28"},"returnParameters":{"id":8003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8024,"src":"9830:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":8001,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:28","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:28"},"scope":9286,"src":"9773:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8051,"nodeType":"Block","src":"10348:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8027,"src":"10362:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8034,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":8033,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":8037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:28","memberName":"max","nodeType":"MemberAccess","src":"10370:17:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8045,"nodeType":"IfStatement","src":"10358:105:28","trueBody":{"id":8044,"nodeType":"Block","src":"10389:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:28","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8027,"src":"10446:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8039,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"10410:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8043,"nodeType":"RevertStatement","src":"10403:49:28"}]}},{"expression":{"arguments":[{"id":8048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8027,"src":"10487:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8046,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:28","typeDescriptions":{}}},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":8031,"id":8050,"nodeType":"Return","src":"10472:21:28"}]},"documentation":{"id":8025,"nodeType":"StructuredDocumentation","src":"9997:280:28","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8052,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:28","nodeType":"FunctionDefinition","parameters":{"id":8028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8027,"mutability":"mutable","name":"value","nameLocation":"10309:5:28","nodeType":"VariableDeclaration","scope":8052,"src":"10301:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8026,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:28"},"returnParameters":{"id":8031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8052,"src":"10339:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8029,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:28"},"scope":9286,"src":"10282:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8079,"nodeType":"Block","src":"10857:152:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"10871:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8062,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":8061,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":8065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:28","memberName":"max","nodeType":"MemberAccess","src":"10879:17:28","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8073,"nodeType":"IfStatement","src":"10867:105:28","trueBody":{"id":8072,"nodeType":"Block","src":"10898:74:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:28","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"10955:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8067,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"10919:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8071,"nodeType":"RevertStatement","src":"10912:49:28"}]}},{"expression":{"arguments":[{"id":8076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"10996:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8074,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:28","typeDescriptions":{}}},"id":8077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":8059,"id":8078,"nodeType":"Return","src":"10981:21:28"}]},"documentation":{"id":8053,"nodeType":"StructuredDocumentation","src":"10506:280:28","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8080,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:28","nodeType":"FunctionDefinition","parameters":{"id":8056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8055,"mutability":"mutable","name":"value","nameLocation":"10818:5:28","nodeType":"VariableDeclaration","scope":8080,"src":"10810:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8054,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:28"},"returnParameters":{"id":8059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8080,"src":"10848:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":8057,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:28","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:28"},"scope":9286,"src":"10791:218:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8107,"nodeType":"Block","src":"11360:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8083,"src":"11374:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8090,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":8089,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":8093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:28","memberName":"max","nodeType":"MemberAccess","src":"11382:16:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8101,"nodeType":"IfStatement","src":"11370:103:28","trueBody":{"id":8100,"nodeType":"Block","src":"11400:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:28","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8083,"src":"11456:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8095,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"11421:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8099,"nodeType":"RevertStatement","src":"11414:48:28"}]}},{"expression":{"arguments":[{"id":8104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8083,"src":"11496:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8102,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:28","typeDescriptions":{}}},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":8087,"id":8106,"nodeType":"Return","src":"11482:20:28"}]},"documentation":{"id":8081,"nodeType":"StructuredDocumentation","src":"11015:276:28","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8108,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:28","nodeType":"FunctionDefinition","parameters":{"id":8084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8083,"mutability":"mutable","name":"value","nameLocation":"11322:5:28","nodeType":"VariableDeclaration","scope":8108,"src":"11314:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:28"},"returnParameters":{"id":8087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8108,"src":"11352:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8085,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:28"},"scope":9286,"src":"11296:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8135,"nodeType":"Block","src":"11860:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"11874:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8118,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":8117,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":8121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:28","memberName":"max","nodeType":"MemberAccess","src":"11882:16:28","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8129,"nodeType":"IfStatement","src":"11870:103:28","trueBody":{"id":8128,"nodeType":"Block","src":"11900:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:28","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"11956:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8123,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"11921:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8127,"nodeType":"RevertStatement","src":"11914:48:28"}]}},{"expression":{"arguments":[{"id":8132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"11996:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8130,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:28","typeDescriptions":{}}},"id":8133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":8115,"id":8134,"nodeType":"Return","src":"11982:20:28"}]},"documentation":{"id":8109,"nodeType":"StructuredDocumentation","src":"11515:276:28","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8136,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:28","nodeType":"FunctionDefinition","parameters":{"id":8112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8111,"mutability":"mutable","name":"value","nameLocation":"11822:5:28","nodeType":"VariableDeclaration","scope":8136,"src":"11814:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8110,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:28"},"returnParameters":{"id":8115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8136,"src":"11852:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":8113,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:28","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:28"},"scope":9286,"src":"11796:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8163,"nodeType":"Block","src":"12360:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"12374:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8146,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":8145,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":8149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:28","memberName":"max","nodeType":"MemberAccess","src":"12382:16:28","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8157,"nodeType":"IfStatement","src":"12370:103:28","trueBody":{"id":8156,"nodeType":"Block","src":"12400:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:28","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"12456:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8151,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"12421:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8155,"nodeType":"RevertStatement","src":"12414:48:28"}]}},{"expression":{"arguments":[{"id":8160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"12496:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8158,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:28","typeDescriptions":{}}},"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":8143,"id":8162,"nodeType":"Return","src":"12482:20:28"}]},"documentation":{"id":8137,"nodeType":"StructuredDocumentation","src":"12015:276:28","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8164,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:28","nodeType":"FunctionDefinition","parameters":{"id":8140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8139,"mutability":"mutable","name":"value","nameLocation":"12322:5:28","nodeType":"VariableDeclaration","scope":8164,"src":"12314:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8138,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:28"},"returnParameters":{"id":8143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8164,"src":"12352:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8141,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:28","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:28"},"scope":9286,"src":"12296:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8191,"nodeType":"Block","src":"12860:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8167,"src":"12874:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8174,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":8173,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":8177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:28","memberName":"max","nodeType":"MemberAccess","src":"12882:16:28","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8185,"nodeType":"IfStatement","src":"12870:103:28","trueBody":{"id":8184,"nodeType":"Block","src":"12900:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:28","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8167,"src":"12956:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8179,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"12921:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8183,"nodeType":"RevertStatement","src":"12914:48:28"}]}},{"expression":{"arguments":[{"id":8188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8167,"src":"12996:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8186,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:28","typeDescriptions":{}}},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":8171,"id":8190,"nodeType":"Return","src":"12982:20:28"}]},"documentation":{"id":8165,"nodeType":"StructuredDocumentation","src":"12515:276:28","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8192,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:28","nodeType":"FunctionDefinition","parameters":{"id":8168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8167,"mutability":"mutable","name":"value","nameLocation":"12822:5:28","nodeType":"VariableDeclaration","scope":8192,"src":"12814:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8166,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:28"},"returnParameters":{"id":8171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8192,"src":"12852:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":8169,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:28","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:28"},"scope":9286,"src":"12796:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8219,"nodeType":"Block","src":"13360:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"13374:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8202,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":8201,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":8205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:28","memberName":"max","nodeType":"MemberAccess","src":"13382:16:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8213,"nodeType":"IfStatement","src":"13370:103:28","trueBody":{"id":8212,"nodeType":"Block","src":"13400:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"13456:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8207,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"13421:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8211,"nodeType":"RevertStatement","src":"13414:48:28"}]}},{"expression":{"arguments":[{"id":8216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"13496:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8214,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:28","typeDescriptions":{}}},"id":8217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8199,"id":8218,"nodeType":"Return","src":"13482:20:28"}]},"documentation":{"id":8193,"nodeType":"StructuredDocumentation","src":"13015:276:28","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8220,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:28","nodeType":"FunctionDefinition","parameters":{"id":8196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8195,"mutability":"mutable","name":"value","nameLocation":"13322:5:28","nodeType":"VariableDeclaration","scope":8220,"src":"13314:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8194,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:28"},"returnParameters":{"id":8199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8220,"src":"13352:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8197,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:28"},"scope":9286,"src":"13296:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8247,"nodeType":"Block","src":"13860:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"13874:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8230,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":8229,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":8233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:28","memberName":"max","nodeType":"MemberAccess","src":"13882:16:28","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8241,"nodeType":"IfStatement","src":"13870:103:28","trueBody":{"id":8240,"nodeType":"Block","src":"13900:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:28","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"13956:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8235,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"13921:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8239,"nodeType":"RevertStatement","src":"13914:48:28"}]}},{"expression":{"arguments":[{"id":8244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"13996:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8242,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:28","typeDescriptions":{}}},"id":8245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":8227,"id":8246,"nodeType":"Return","src":"13982:20:28"}]},"documentation":{"id":8221,"nodeType":"StructuredDocumentation","src":"13515:276:28","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8248,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:28","nodeType":"FunctionDefinition","parameters":{"id":8224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8223,"mutability":"mutable","name":"value","nameLocation":"13822:5:28","nodeType":"VariableDeclaration","scope":8248,"src":"13814:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8222,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:28"},"returnParameters":{"id":8227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8248,"src":"13852:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":8225,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:28","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:28"},"scope":9286,"src":"13796:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8275,"nodeType":"Block","src":"14360:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8251,"src":"14374:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8258,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":8257,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":8261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:28","memberName":"max","nodeType":"MemberAccess","src":"14382:16:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8269,"nodeType":"IfStatement","src":"14370:103:28","trueBody":{"id":8268,"nodeType":"Block","src":"14400:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:28","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8251,"src":"14456:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8263,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"14421:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8267,"nodeType":"RevertStatement","src":"14414:48:28"}]}},{"expression":{"arguments":[{"id":8272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8251,"src":"14496:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8270,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:28","typeDescriptions":{}}},"id":8273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8255,"id":8274,"nodeType":"Return","src":"14482:20:28"}]},"documentation":{"id":8249,"nodeType":"StructuredDocumentation","src":"14015:276:28","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8276,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:28","nodeType":"FunctionDefinition","parameters":{"id":8252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8251,"mutability":"mutable","name":"value","nameLocation":"14322:5:28","nodeType":"VariableDeclaration","scope":8276,"src":"14314:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8250,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:28"},"returnParameters":{"id":8255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8276,"src":"14352:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8253,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:28"},"scope":9286,"src":"14296:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8303,"nodeType":"Block","src":"14860:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"14874:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8286,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":8285,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":8289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:28","memberName":"max","nodeType":"MemberAccess","src":"14882:16:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8297,"nodeType":"IfStatement","src":"14870:103:28","trueBody":{"id":8296,"nodeType":"Block","src":"14900:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:28","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"14956:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8291,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"14921:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8295,"nodeType":"RevertStatement","src":"14914:48:28"}]}},{"expression":{"arguments":[{"id":8300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"14996:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8298,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:28","typeDescriptions":{}}},"id":8301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":8283,"id":8302,"nodeType":"Return","src":"14982:20:28"}]},"documentation":{"id":8277,"nodeType":"StructuredDocumentation","src":"14515:276:28","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8304,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:28","nodeType":"FunctionDefinition","parameters":{"id":8280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8279,"mutability":"mutable","name":"value","nameLocation":"14822:5:28","nodeType":"VariableDeclaration","scope":8304,"src":"14814:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8278,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:28"},"returnParameters":{"id":8283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8304,"src":"14852:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8281,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:28"},"scope":9286,"src":"14796:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8331,"nodeType":"Block","src":"15360:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"15374:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8314,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":8313,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":8317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:28","memberName":"max","nodeType":"MemberAccess","src":"15382:16:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8325,"nodeType":"IfStatement","src":"15370:103:28","trueBody":{"id":8324,"nodeType":"Block","src":"15400:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"15456:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8319,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"15421:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8323,"nodeType":"RevertStatement","src":"15414:48:28"}]}},{"expression":{"arguments":[{"id":8328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"15496:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8326,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:28","typeDescriptions":{}}},"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8311,"id":8330,"nodeType":"Return","src":"15482:20:28"}]},"documentation":{"id":8305,"nodeType":"StructuredDocumentation","src":"15015:276:28","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8332,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:28","nodeType":"FunctionDefinition","parameters":{"id":8308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8307,"mutability":"mutable","name":"value","nameLocation":"15322:5:28","nodeType":"VariableDeclaration","scope":8332,"src":"15314:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8306,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:28"},"returnParameters":{"id":8311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8332,"src":"15352:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8309,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:28"},"scope":9286,"src":"15296:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8359,"nodeType":"Block","src":"15860:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"15874:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8342,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":8341,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":8345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:28","memberName":"max","nodeType":"MemberAccess","src":"15882:16:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8353,"nodeType":"IfStatement","src":"15870:103:28","trueBody":{"id":8352,"nodeType":"Block","src":"15900:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:28","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"15956:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8347,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"15921:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8351,"nodeType":"RevertStatement","src":"15914:48:28"}]}},{"expression":{"arguments":[{"id":8356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"15996:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8354,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:28","typeDescriptions":{}}},"id":8357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":8339,"id":8358,"nodeType":"Return","src":"15982:20:28"}]},"documentation":{"id":8333,"nodeType":"StructuredDocumentation","src":"15515:276:28","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8360,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:28","nodeType":"FunctionDefinition","parameters":{"id":8336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8335,"mutability":"mutable","name":"value","nameLocation":"15822:5:28","nodeType":"VariableDeclaration","scope":8360,"src":"15814:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8334,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:28"},"returnParameters":{"id":8339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8360,"src":"15852:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8337,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:28"},"scope":9286,"src":"15796:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8387,"nodeType":"Block","src":"16360:149:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"16374:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8370,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":8369,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":8373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:28","memberName":"max","nodeType":"MemberAccess","src":"16382:16:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8381,"nodeType":"IfStatement","src":"16370:103:28","trueBody":{"id":8380,"nodeType":"Block","src":"16400:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"16456:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8375,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"16421:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8379,"nodeType":"RevertStatement","src":"16414:48:28"}]}},{"expression":{"arguments":[{"id":8384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"16496:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8382,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:28","typeDescriptions":{}}},"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":8367,"id":8386,"nodeType":"Return","src":"16482:20:28"}]},"documentation":{"id":8361,"nodeType":"StructuredDocumentation","src":"16015:276:28","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8388,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:28","nodeType":"FunctionDefinition","parameters":{"id":8364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8363,"mutability":"mutable","name":"value","nameLocation":"16322:5:28","nodeType":"VariableDeclaration","scope":8388,"src":"16314:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8362,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:28"},"returnParameters":{"id":8367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8388,"src":"16352:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8365,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:28"},"scope":9286,"src":"16296:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8415,"nodeType":"Block","src":"16854:146:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"16868:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8398,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":8397,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":8401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:28","memberName":"max","nodeType":"MemberAccess","src":"16876:15:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8409,"nodeType":"IfStatement","src":"16864:101:28","trueBody":{"id":8408,"nodeType":"Block","src":"16893:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"16948:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8403,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"16914:30:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8407,"nodeType":"RevertStatement","src":"16907:47:28"}]}},{"expression":{"arguments":[{"id":8412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"16987:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8410,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:28","typeDescriptions":{}}},"id":8413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8395,"id":8414,"nodeType":"Return","src":"16974:19:28"}]},"documentation":{"id":8389,"nodeType":"StructuredDocumentation","src":"16515:272:28","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8416,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:28","nodeType":"FunctionDefinition","parameters":{"id":8392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8391,"mutability":"mutable","name":"value","nameLocation":"16817:5:28","nodeType":"VariableDeclaration","scope":8416,"src":"16809:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8390,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:28"},"returnParameters":{"id":8395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8416,"src":"16847:5:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8393,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:28"},"scope":9286,"src":"16792:208:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8438,"nodeType":"Block","src":"17236:128:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"17250:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":8425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8432,"nodeType":"IfStatement","src":"17246:81:28","trueBody":{"id":8431,"nodeType":"Block","src":"17261:66:28","statements":[{"errorCall":{"arguments":[{"id":8428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"17310:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8427,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7536,"src":"17282:27:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8430,"nodeType":"RevertStatement","src":"17275:41:28"}]}},{"expression":{"arguments":[{"id":8435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"17351:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8433,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:28","typeDescriptions":{}}},"id":8436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8423,"id":8437,"nodeType":"Return","src":"17336:21:28"}]},"documentation":{"id":8417,"nodeType":"StructuredDocumentation","src":"17006:160:28","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":8439,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:28","nodeType":"FunctionDefinition","parameters":{"id":8420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8419,"mutability":"mutable","name":"value","nameLocation":"17197:5:28","nodeType":"VariableDeclaration","scope":8439,"src":"17190:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8418,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:28"},"returnParameters":{"id":8423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8439,"src":"17227:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8421,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:28"},"scope":9286,"src":"17171:193:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8464,"nodeType":"Block","src":"17761:150:28","statements":[{"expression":{"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8447,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8445,"src":"17771:10:28","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"17791:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":8448,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:28","typeDescriptions":{}}},"id":8451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:28","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":8453,"nodeType":"ExpressionStatement","src":"17771:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8454,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8445,"src":"17811:10:28","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"17825:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8463,"nodeType":"IfStatement","src":"17807:98:28","trueBody":{"id":8462,"nodeType":"Block","src":"17832:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":8458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:28","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":8459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"17888:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8457,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"17853:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8461,"nodeType":"RevertStatement","src":"17846:48:28"}]}}]},"documentation":{"id":8440,"nodeType":"StructuredDocumentation","src":"17370:312:28","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":8465,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:28","nodeType":"FunctionDefinition","parameters":{"id":8443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8442,"mutability":"mutable","name":"value","nameLocation":"17712:5:28","nodeType":"VariableDeclaration","scope":8465,"src":"17705:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8441,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:28"},"returnParameters":{"id":8446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8445,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:28","nodeType":"VariableDeclaration","scope":8465,"src":"17742:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":8444,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:28","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:28"},"scope":9286,"src":"17687:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8490,"nodeType":"Block","src":"18308:150:28","statements":[{"expression":{"id":8478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8473,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8471,"src":"18318:10:28","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8468,"src":"18338:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":8474,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:28","typeDescriptions":{}}},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:28","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":8479,"nodeType":"ExpressionStatement","src":"18318:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8471,"src":"18358:10:28","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8468,"src":"18372:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8489,"nodeType":"IfStatement","src":"18354:98:28","trueBody":{"id":8488,"nodeType":"Block","src":"18379:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:28","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8468,"src":"18435:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8483,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"18400:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8487,"nodeType":"RevertStatement","src":"18393:48:28"}]}}]},"documentation":{"id":8466,"nodeType":"StructuredDocumentation","src":"17917:312:28","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8491,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:28","nodeType":"FunctionDefinition","parameters":{"id":8469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8468,"mutability":"mutable","name":"value","nameLocation":"18259:5:28","nodeType":"VariableDeclaration","scope":8491,"src":"18252:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8467,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:28"},"returnParameters":{"id":8472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8471,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:28","nodeType":"VariableDeclaration","scope":8491,"src":"18289:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":8470,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:28","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:28"},"scope":9286,"src":"18234:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8516,"nodeType":"Block","src":"18855:150:28","statements":[{"expression":{"id":8504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8499,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8497,"src":"18865:10:28","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"18885:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":8500,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:28","typeDescriptions":{}}},"id":8503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:28","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":8505,"nodeType":"ExpressionStatement","src":"18865:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8497,"src":"18905:10:28","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"18919:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8515,"nodeType":"IfStatement","src":"18901:98:28","trueBody":{"id":8514,"nodeType":"Block","src":"18926:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:28","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"18982:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8509,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"18947:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8513,"nodeType":"RevertStatement","src":"18940:48:28"}]}}]},"documentation":{"id":8492,"nodeType":"StructuredDocumentation","src":"18464:312:28","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8517,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:28","nodeType":"FunctionDefinition","parameters":{"id":8495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8494,"mutability":"mutable","name":"value","nameLocation":"18806:5:28","nodeType":"VariableDeclaration","scope":8517,"src":"18799:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8493,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:28"},"returnParameters":{"id":8498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8497,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:28","nodeType":"VariableDeclaration","scope":8517,"src":"18836:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":8496,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:28","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:28"},"scope":9286,"src":"18781:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8542,"nodeType":"Block","src":"19402:150:28","statements":[{"expression":{"id":8530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8525,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8523,"src":"19412:10:28","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"19432:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":8526,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:28","typeDescriptions":{}}},"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:28","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":8531,"nodeType":"ExpressionStatement","src":"19412:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8523,"src":"19452:10:28","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"19466:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8541,"nodeType":"IfStatement","src":"19448:98:28","trueBody":{"id":8540,"nodeType":"Block","src":"19473:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:28","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"19529:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8535,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"19494:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8539,"nodeType":"RevertStatement","src":"19487:48:28"}]}}]},"documentation":{"id":8518,"nodeType":"StructuredDocumentation","src":"19011:312:28","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8543,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:28","nodeType":"FunctionDefinition","parameters":{"id":8521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8520,"mutability":"mutable","name":"value","nameLocation":"19353:5:28","nodeType":"VariableDeclaration","scope":8543,"src":"19346:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8519,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:28"},"returnParameters":{"id":8524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8523,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:28","nodeType":"VariableDeclaration","scope":8543,"src":"19383:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":8522,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:28","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:28"},"scope":9286,"src":"19328:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8568,"nodeType":"Block","src":"19949:150:28","statements":[{"expression":{"id":8556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8551,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8549,"src":"19959:10:28","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"19979:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":8552,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:28","typeDescriptions":{}}},"id":8555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:28","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":8557,"nodeType":"ExpressionStatement","src":"19959:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8549,"src":"19999:10:28","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"20013:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8567,"nodeType":"IfStatement","src":"19995:98:28","trueBody":{"id":8566,"nodeType":"Block","src":"20020:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:28","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"20076:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8561,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"20041:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8565,"nodeType":"RevertStatement","src":"20034:48:28"}]}}]},"documentation":{"id":8544,"nodeType":"StructuredDocumentation","src":"19558:312:28","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8569,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:28","nodeType":"FunctionDefinition","parameters":{"id":8547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8546,"mutability":"mutable","name":"value","nameLocation":"19900:5:28","nodeType":"VariableDeclaration","scope":8569,"src":"19893:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8545,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:28"},"returnParameters":{"id":8550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8549,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:28","nodeType":"VariableDeclaration","scope":8569,"src":"19930:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":8548,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:28","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:28"},"scope":9286,"src":"19875:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8594,"nodeType":"Block","src":"20496:150:28","statements":[{"expression":{"id":8582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8577,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8575,"src":"20506:10:28","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8572,"src":"20526:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":8578,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:28","typeDescriptions":{}}},"id":8581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:28","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":8583,"nodeType":"ExpressionStatement","src":"20506:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8575,"src":"20546:10:28","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8572,"src":"20560:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8593,"nodeType":"IfStatement","src":"20542:98:28","trueBody":{"id":8592,"nodeType":"Block","src":"20567:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:28","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8572,"src":"20623:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8587,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"20588:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8591,"nodeType":"RevertStatement","src":"20581:48:28"}]}}]},"documentation":{"id":8570,"nodeType":"StructuredDocumentation","src":"20105:312:28","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8595,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:28","nodeType":"FunctionDefinition","parameters":{"id":8573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8572,"mutability":"mutable","name":"value","nameLocation":"20447:5:28","nodeType":"VariableDeclaration","scope":8595,"src":"20440:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8571,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:28"},"returnParameters":{"id":8576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8575,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:28","nodeType":"VariableDeclaration","scope":8595,"src":"20477:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":8574,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:28","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:28"},"scope":9286,"src":"20422:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8620,"nodeType":"Block","src":"21043:150:28","statements":[{"expression":{"id":8608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8603,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"21053:10:28","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"21073:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":8604,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:28","typeDescriptions":{}}},"id":8607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:28","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":8609,"nodeType":"ExpressionStatement","src":"21053:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"21093:10:28","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"21107:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8619,"nodeType":"IfStatement","src":"21089:98:28","trueBody":{"id":8618,"nodeType":"Block","src":"21114:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:28","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"21170:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8613,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"21135:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8617,"nodeType":"RevertStatement","src":"21128:48:28"}]}}]},"documentation":{"id":8596,"nodeType":"StructuredDocumentation","src":"20652:312:28","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8621,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:28","nodeType":"FunctionDefinition","parameters":{"id":8599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8598,"mutability":"mutable","name":"value","nameLocation":"20994:5:28","nodeType":"VariableDeclaration","scope":8621,"src":"20987:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8597,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:28"},"returnParameters":{"id":8602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8601,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:28","nodeType":"VariableDeclaration","scope":8621,"src":"21024:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":8600,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:28","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:28"},"scope":9286,"src":"20969:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8646,"nodeType":"Block","src":"21590:150:28","statements":[{"expression":{"id":8634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8629,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8627,"src":"21600:10:28","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8624,"src":"21620:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8630,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:28","typeDescriptions":{}}},"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:28","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8635,"nodeType":"ExpressionStatement","src":"21600:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8627,"src":"21640:10:28","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8624,"src":"21654:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8645,"nodeType":"IfStatement","src":"21636:98:28","trueBody":{"id":8644,"nodeType":"Block","src":"21661:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:28","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8624,"src":"21717:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8639,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"21682:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8643,"nodeType":"RevertStatement","src":"21675:48:28"}]}}]},"documentation":{"id":8622,"nodeType":"StructuredDocumentation","src":"21199:312:28","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8647,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:28","nodeType":"FunctionDefinition","parameters":{"id":8625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8624,"mutability":"mutable","name":"value","nameLocation":"21541:5:28","nodeType":"VariableDeclaration","scope":8647,"src":"21534:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8623,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:28"},"returnParameters":{"id":8628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8627,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:28","nodeType":"VariableDeclaration","scope":8647,"src":"21571:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":8626,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:28","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:28"},"scope":9286,"src":"21516:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8672,"nodeType":"Block","src":"22137:150:28","statements":[{"expression":{"id":8660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8655,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8653,"src":"22147:10:28","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"22167:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":8656,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:28","typeDescriptions":{}}},"id":8659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:28","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":8661,"nodeType":"ExpressionStatement","src":"22147:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8653,"src":"22187:10:28","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"22201:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8671,"nodeType":"IfStatement","src":"22183:98:28","trueBody":{"id":8670,"nodeType":"Block","src":"22208:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:28","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"22264:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8665,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"22229:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8669,"nodeType":"RevertStatement","src":"22222:48:28"}]}}]},"documentation":{"id":8648,"nodeType":"StructuredDocumentation","src":"21746:312:28","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8673,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:28","nodeType":"FunctionDefinition","parameters":{"id":8651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8650,"mutability":"mutable","name":"value","nameLocation":"22088:5:28","nodeType":"VariableDeclaration","scope":8673,"src":"22081:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8649,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:28"},"returnParameters":{"id":8654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8653,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:28","nodeType":"VariableDeclaration","scope":8673,"src":"22118:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":8652,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:28","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:28"},"scope":9286,"src":"22063:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8698,"nodeType":"Block","src":"22684:150:28","statements":[{"expression":{"id":8686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8681,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8679,"src":"22694:10:28","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8676,"src":"22714:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":8682,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:28","typeDescriptions":{}}},"id":8685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:28","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":8687,"nodeType":"ExpressionStatement","src":"22694:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8688,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8679,"src":"22734:10:28","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8676,"src":"22748:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8697,"nodeType":"IfStatement","src":"22730:98:28","trueBody":{"id":8696,"nodeType":"Block","src":"22755:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:28","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8676,"src":"22811:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8691,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"22776:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8695,"nodeType":"RevertStatement","src":"22769:48:28"}]}}]},"documentation":{"id":8674,"nodeType":"StructuredDocumentation","src":"22293:312:28","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8699,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:28","nodeType":"FunctionDefinition","parameters":{"id":8677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8676,"mutability":"mutable","name":"value","nameLocation":"22635:5:28","nodeType":"VariableDeclaration","scope":8699,"src":"22628:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8675,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:28"},"returnParameters":{"id":8680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8679,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:28","nodeType":"VariableDeclaration","scope":8699,"src":"22665:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":8678,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:28","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:28"},"scope":9286,"src":"22610:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8724,"nodeType":"Block","src":"23231:150:28","statements":[{"expression":{"id":8712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8707,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8705,"src":"23241:10:28","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"23261:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":8708,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:28","typeDescriptions":{}}},"id":8711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:28","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":8713,"nodeType":"ExpressionStatement","src":"23241:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8714,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8705,"src":"23281:10:28","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"23295:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8723,"nodeType":"IfStatement","src":"23277:98:28","trueBody":{"id":8722,"nodeType":"Block","src":"23302:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:28","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"23358:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8717,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"23323:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8721,"nodeType":"RevertStatement","src":"23316:48:28"}]}}]},"documentation":{"id":8700,"nodeType":"StructuredDocumentation","src":"22840:312:28","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8725,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:28","nodeType":"FunctionDefinition","parameters":{"id":8703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8702,"mutability":"mutable","name":"value","nameLocation":"23182:5:28","nodeType":"VariableDeclaration","scope":8725,"src":"23175:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8701,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:28"},"returnParameters":{"id":8706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8705,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:28","nodeType":"VariableDeclaration","scope":8725,"src":"23212:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":8704,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:28","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:28"},"scope":9286,"src":"23157:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8750,"nodeType":"Block","src":"23778:150:28","statements":[{"expression":{"id":8738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8733,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"23788:10:28","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8728,"src":"23808:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8734,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:28","typeDescriptions":{}}},"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:28","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8739,"nodeType":"ExpressionStatement","src":"23788:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8740,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"23828:10:28","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8728,"src":"23842:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8749,"nodeType":"IfStatement","src":"23824:98:28","trueBody":{"id":8748,"nodeType":"Block","src":"23849:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:28","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8728,"src":"23905:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8743,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"23870:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8747,"nodeType":"RevertStatement","src":"23863:48:28"}]}}]},"documentation":{"id":8726,"nodeType":"StructuredDocumentation","src":"23387:312:28","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8751,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:28","nodeType":"FunctionDefinition","parameters":{"id":8729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8728,"mutability":"mutable","name":"value","nameLocation":"23729:5:28","nodeType":"VariableDeclaration","scope":8751,"src":"23722:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8727,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:28"},"returnParameters":{"id":8732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8731,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:28","nodeType":"VariableDeclaration","scope":8751,"src":"23759:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":8730,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:28","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:28"},"scope":9286,"src":"23704:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8776,"nodeType":"Block","src":"24325:150:28","statements":[{"expression":{"id":8764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8759,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"24335:10:28","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"24355:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8760,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:28","typeDescriptions":{}}},"id":8763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:28","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":8765,"nodeType":"ExpressionStatement","src":"24335:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8766,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"24375:10:28","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"24389:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8775,"nodeType":"IfStatement","src":"24371:98:28","trueBody":{"id":8774,"nodeType":"Block","src":"24396:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:28","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"24452:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8769,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"24417:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8773,"nodeType":"RevertStatement","src":"24410:48:28"}]}}]},"documentation":{"id":8752,"nodeType":"StructuredDocumentation","src":"23934:312:28","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8777,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:28","nodeType":"FunctionDefinition","parameters":{"id":8755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8754,"mutability":"mutable","name":"value","nameLocation":"24276:5:28","nodeType":"VariableDeclaration","scope":8777,"src":"24269:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8753,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:28"},"returnParameters":{"id":8758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8757,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:28","nodeType":"VariableDeclaration","scope":8777,"src":"24306:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8756,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:28","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:28"},"scope":9286,"src":"24251:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8802,"nodeType":"Block","src":"24872:150:28","statements":[{"expression":{"id":8790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8785,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8783,"src":"24882:10:28","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8780,"src":"24902:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":8786,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:28","typeDescriptions":{}}},"id":8789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:28","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":8791,"nodeType":"ExpressionStatement","src":"24882:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8792,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8783,"src":"24922:10:28","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8780,"src":"24936:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8801,"nodeType":"IfStatement","src":"24918:98:28","trueBody":{"id":8800,"nodeType":"Block","src":"24943:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:28","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8780,"src":"24999:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8795,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"24964:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8799,"nodeType":"RevertStatement","src":"24957:48:28"}]}}]},"documentation":{"id":8778,"nodeType":"StructuredDocumentation","src":"24481:312:28","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8803,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:28","nodeType":"FunctionDefinition","parameters":{"id":8781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8780,"mutability":"mutable","name":"value","nameLocation":"24823:5:28","nodeType":"VariableDeclaration","scope":8803,"src":"24816:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8779,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:28"},"returnParameters":{"id":8784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8783,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:28","nodeType":"VariableDeclaration","scope":8803,"src":"24853:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":8782,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:28","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:28"},"scope":9286,"src":"24798:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8828,"nodeType":"Block","src":"25419:150:28","statements":[{"expression":{"id":8816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8811,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8809,"src":"25429:10:28","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"25449:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":8812,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:28","typeDescriptions":{}}},"id":8815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:28","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":8817,"nodeType":"ExpressionStatement","src":"25429:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8818,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8809,"src":"25469:10:28","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"25483:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8827,"nodeType":"IfStatement","src":"25465:98:28","trueBody":{"id":8826,"nodeType":"Block","src":"25490:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:28","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"25546:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8821,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"25511:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8825,"nodeType":"RevertStatement","src":"25504:48:28"}]}}]},"documentation":{"id":8804,"nodeType":"StructuredDocumentation","src":"25028:312:28","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8829,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:28","nodeType":"FunctionDefinition","parameters":{"id":8807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8806,"mutability":"mutable","name":"value","nameLocation":"25370:5:28","nodeType":"VariableDeclaration","scope":8829,"src":"25363:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8805,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:28"},"returnParameters":{"id":8810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8809,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:28","nodeType":"VariableDeclaration","scope":8829,"src":"25400:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":8808,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:28","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:28"},"scope":9286,"src":"25345:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8854,"nodeType":"Block","src":"25966:150:28","statements":[{"expression":{"id":8842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8837,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8835,"src":"25976:10:28","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8832,"src":"25996:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":8838,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:28","typeDescriptions":{}}},"id":8841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:28","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8843,"nodeType":"ExpressionStatement","src":"25976:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8835,"src":"26016:10:28","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8832,"src":"26030:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8853,"nodeType":"IfStatement","src":"26012:98:28","trueBody":{"id":8852,"nodeType":"Block","src":"26037:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8832,"src":"26093:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8847,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"26058:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8851,"nodeType":"RevertStatement","src":"26051:48:28"}]}}]},"documentation":{"id":8830,"nodeType":"StructuredDocumentation","src":"25575:312:28","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8855,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:28","nodeType":"FunctionDefinition","parameters":{"id":8833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8832,"mutability":"mutable","name":"value","nameLocation":"25917:5:28","nodeType":"VariableDeclaration","scope":8855,"src":"25910:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8831,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:28"},"returnParameters":{"id":8836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8835,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:28","nodeType":"VariableDeclaration","scope":8855,"src":"25947:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8834,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:28","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:28"},"scope":9286,"src":"25892:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8880,"nodeType":"Block","src":"26513:150:28","statements":[{"expression":{"id":8868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8863,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8861,"src":"26523:10:28","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"26543:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":8864,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:28","typeDescriptions":{}}},"id":8867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:28","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":8869,"nodeType":"ExpressionStatement","src":"26523:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8870,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8861,"src":"26563:10:28","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"26577:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8879,"nodeType":"IfStatement","src":"26559:98:28","trueBody":{"id":8878,"nodeType":"Block","src":"26584:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:28","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"26640:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8873,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"26605:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8877,"nodeType":"RevertStatement","src":"26598:48:28"}]}}]},"documentation":{"id":8856,"nodeType":"StructuredDocumentation","src":"26122:312:28","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8881,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:28","nodeType":"FunctionDefinition","parameters":{"id":8859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8858,"mutability":"mutable","name":"value","nameLocation":"26464:5:28","nodeType":"VariableDeclaration","scope":8881,"src":"26457:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8857,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:28"},"returnParameters":{"id":8862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8861,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:28","nodeType":"VariableDeclaration","scope":8881,"src":"26494:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":8860,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:28","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:28"},"scope":9286,"src":"26439:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8906,"nodeType":"Block","src":"27060:150:28","statements":[{"expression":{"id":8894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8889,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8887,"src":"27070:10:28","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"27090:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":8890,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:28","typeDescriptions":{}}},"id":8893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:28","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":8895,"nodeType":"ExpressionStatement","src":"27070:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8896,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8887,"src":"27110:10:28","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"27124:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8905,"nodeType":"IfStatement","src":"27106:98:28","trueBody":{"id":8904,"nodeType":"Block","src":"27131:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:28","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"27187:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8899,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"27152:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8903,"nodeType":"RevertStatement","src":"27145:48:28"}]}}]},"documentation":{"id":8882,"nodeType":"StructuredDocumentation","src":"26669:312:28","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8907,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:28","nodeType":"FunctionDefinition","parameters":{"id":8885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8884,"mutability":"mutable","name":"value","nameLocation":"27011:5:28","nodeType":"VariableDeclaration","scope":8907,"src":"27004:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8883,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:28"},"returnParameters":{"id":8888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8887,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:28","nodeType":"VariableDeclaration","scope":8907,"src":"27041:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":8886,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:28","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:28"},"scope":9286,"src":"26986:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8932,"nodeType":"Block","src":"27607:150:28","statements":[{"expression":{"id":8920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8915,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8913,"src":"27617:10:28","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"27637:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":8916,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:28","typeDescriptions":{}}},"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:28","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":8921,"nodeType":"ExpressionStatement","src":"27617:26:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8922,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8913,"src":"27657:10:28","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"27671:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8931,"nodeType":"IfStatement","src":"27653:98:28","trueBody":{"id":8930,"nodeType":"Block","src":"27678:73:28","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:28","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"27734:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8925,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"27699:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8929,"nodeType":"RevertStatement","src":"27692:48:28"}]}}]},"documentation":{"id":8908,"nodeType":"StructuredDocumentation","src":"27216:312:28","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8933,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:28","nodeType":"FunctionDefinition","parameters":{"id":8911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8910,"mutability":"mutable","name":"value","nameLocation":"27558:5:28","nodeType":"VariableDeclaration","scope":8933,"src":"27551:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8909,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:28"},"returnParameters":{"id":8914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8913,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:28","nodeType":"VariableDeclaration","scope":8933,"src":"27588:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":8912,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:28","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:28"},"scope":9286,"src":"27533:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8958,"nodeType":"Block","src":"28147:148:28","statements":[{"expression":{"id":8946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8941,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8939,"src":"28157:10:28","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8936,"src":"28176:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":8942,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:28","typeDescriptions":{}}},"id":8945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:28","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":8947,"nodeType":"ExpressionStatement","src":"28157:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8948,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8939,"src":"28196:10:28","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8936,"src":"28210:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8957,"nodeType":"IfStatement","src":"28192:97:28","trueBody":{"id":8956,"nodeType":"Block","src":"28217:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:28","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8936,"src":"28272:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8951,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"28238:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8955,"nodeType":"RevertStatement","src":"28231:47:28"}]}}]},"documentation":{"id":8934,"nodeType":"StructuredDocumentation","src":"27763:307:28","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8959,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:28","nodeType":"FunctionDefinition","parameters":{"id":8937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8936,"mutability":"mutable","name":"value","nameLocation":"28099:5:28","nodeType":"VariableDeclaration","scope":8959,"src":"28092:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8935,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:28"},"returnParameters":{"id":8940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8939,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:28","nodeType":"VariableDeclaration","scope":8959,"src":"28129:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":8938,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:28","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:28"},"scope":9286,"src":"28075:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8984,"nodeType":"Block","src":"28685:148:28","statements":[{"expression":{"id":8972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8967,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8965,"src":"28695:10:28","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8962,"src":"28714:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":8968,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:28","typeDescriptions":{}}},"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:28","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8973,"nodeType":"ExpressionStatement","src":"28695:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8974,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8965,"src":"28734:10:28","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8962,"src":"28748:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8983,"nodeType":"IfStatement","src":"28730:97:28","trueBody":{"id":8982,"nodeType":"Block","src":"28755:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:28","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8962,"src":"28810:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8977,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"28776:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8981,"nodeType":"RevertStatement","src":"28769:47:28"}]}}]},"documentation":{"id":8960,"nodeType":"StructuredDocumentation","src":"28301:307:28","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8985,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:28","nodeType":"FunctionDefinition","parameters":{"id":8963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8962,"mutability":"mutable","name":"value","nameLocation":"28637:5:28","nodeType":"VariableDeclaration","scope":8985,"src":"28630:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8961,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:28"},"returnParameters":{"id":8966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8965,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:28","nodeType":"VariableDeclaration","scope":8985,"src":"28667:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":8964,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:28","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:28"},"scope":9286,"src":"28613:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9010,"nodeType":"Block","src":"29223:148:28","statements":[{"expression":{"id":8998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8993,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"29233:10:28","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"29252:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8994,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:28","typeDescriptions":{}}},"id":8997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:28","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8999,"nodeType":"ExpressionStatement","src":"29233:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9000,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"29272:10:28","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"29286:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9009,"nodeType":"IfStatement","src":"29268:97:28","trueBody":{"id":9008,"nodeType":"Block","src":"29293:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":9004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:28","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":9005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"29348:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9003,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"29314:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9007,"nodeType":"RevertStatement","src":"29307:47:28"}]}}]},"documentation":{"id":8986,"nodeType":"StructuredDocumentation","src":"28839:307:28","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":9011,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:28","nodeType":"FunctionDefinition","parameters":{"id":8989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8988,"mutability":"mutable","name":"value","nameLocation":"29175:5:28","nodeType":"VariableDeclaration","scope":9011,"src":"29168:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8987,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:28"},"returnParameters":{"id":8992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8991,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:28","nodeType":"VariableDeclaration","scope":9011,"src":"29205:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8990,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:28","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:28"},"scope":9286,"src":"29151:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9036,"nodeType":"Block","src":"29761:148:28","statements":[{"expression":{"id":9024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9019,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9017,"src":"29771:10:28","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9014,"src":"29790:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":9020,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:28","typeDescriptions":{}}},"id":9023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:28","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":9025,"nodeType":"ExpressionStatement","src":"29771:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9026,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9017,"src":"29810:10:28","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9014,"src":"29824:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9035,"nodeType":"IfStatement","src":"29806:97:28","trueBody":{"id":9034,"nodeType":"Block","src":"29831:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":9030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:28","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":9031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9014,"src":"29886:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9029,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"29852:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9033,"nodeType":"RevertStatement","src":"29845:47:28"}]}}]},"documentation":{"id":9012,"nodeType":"StructuredDocumentation","src":"29377:307:28","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":9037,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:28","nodeType":"FunctionDefinition","parameters":{"id":9015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9014,"mutability":"mutable","name":"value","nameLocation":"29713:5:28","nodeType":"VariableDeclaration","scope":9037,"src":"29706:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9013,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:28"},"returnParameters":{"id":9018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9017,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:28","nodeType":"VariableDeclaration","scope":9037,"src":"29743:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":9016,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:28","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:28"},"scope":9286,"src":"29689:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9062,"nodeType":"Block","src":"30299:148:28","statements":[{"expression":{"id":9050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9045,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9043,"src":"30309:10:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"30328:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":9046,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:28","typeDescriptions":{}}},"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":9051,"nodeType":"ExpressionStatement","src":"30309:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9052,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9043,"src":"30348:10:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"30362:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9061,"nodeType":"IfStatement","src":"30344:97:28","trueBody":{"id":9060,"nodeType":"Block","src":"30369:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":9056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":9057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"30424:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9055,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"30390:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9059,"nodeType":"RevertStatement","src":"30383:47:28"}]}}]},"documentation":{"id":9038,"nodeType":"StructuredDocumentation","src":"29915:307:28","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":9063,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:28","nodeType":"FunctionDefinition","parameters":{"id":9041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9040,"mutability":"mutable","name":"value","nameLocation":"30251:5:28","nodeType":"VariableDeclaration","scope":9063,"src":"30244:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9039,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:28"},"returnParameters":{"id":9044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9043,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:28","nodeType":"VariableDeclaration","scope":9063,"src":"30281:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9042,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:28"},"scope":9286,"src":"30227:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9088,"nodeType":"Block","src":"30837:148:28","statements":[{"expression":{"id":9076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9071,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9069,"src":"30847:10:28","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9066,"src":"30866:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":9072,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:28","typeDescriptions":{}}},"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:28","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":9077,"nodeType":"ExpressionStatement","src":"30847:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9078,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9069,"src":"30886:10:28","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9066,"src":"30900:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9087,"nodeType":"IfStatement","src":"30882:97:28","trueBody":{"id":9086,"nodeType":"Block","src":"30907:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":9082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:28","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":9083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9066,"src":"30962:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9081,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"30928:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9085,"nodeType":"RevertStatement","src":"30921:47:28"}]}}]},"documentation":{"id":9064,"nodeType":"StructuredDocumentation","src":"30453:307:28","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":9089,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:28","nodeType":"FunctionDefinition","parameters":{"id":9067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9066,"mutability":"mutable","name":"value","nameLocation":"30789:5:28","nodeType":"VariableDeclaration","scope":9089,"src":"30782:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9065,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:28"},"returnParameters":{"id":9070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9069,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:28","nodeType":"VariableDeclaration","scope":9089,"src":"30819:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":9068,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:28","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:28"},"scope":9286,"src":"30765:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9114,"nodeType":"Block","src":"31375:148:28","statements":[{"expression":{"id":9102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9097,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9095,"src":"31385:10:28","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9092,"src":"31404:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":9098,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:28","typeDescriptions":{}}},"id":9101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:28","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":9103,"nodeType":"ExpressionStatement","src":"31385:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9104,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9095,"src":"31424:10:28","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9092,"src":"31438:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9113,"nodeType":"IfStatement","src":"31420:97:28","trueBody":{"id":9112,"nodeType":"Block","src":"31445:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":9108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:28","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":9109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9092,"src":"31500:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9107,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"31466:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9111,"nodeType":"RevertStatement","src":"31459:47:28"}]}}]},"documentation":{"id":9090,"nodeType":"StructuredDocumentation","src":"30991:307:28","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":9115,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:28","nodeType":"FunctionDefinition","parameters":{"id":9093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9092,"mutability":"mutable","name":"value","nameLocation":"31327:5:28","nodeType":"VariableDeclaration","scope":9115,"src":"31320:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9091,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:28"},"returnParameters":{"id":9096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9095,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:28","nodeType":"VariableDeclaration","scope":9115,"src":"31357:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":9094,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:28","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:28"},"scope":9286,"src":"31303:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9140,"nodeType":"Block","src":"31913:148:28","statements":[{"expression":{"id":9128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9123,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9121,"src":"31923:10:28","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9118,"src":"31942:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":9124,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:28","typeDescriptions":{}}},"id":9127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:28","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":9129,"nodeType":"ExpressionStatement","src":"31923:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9130,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9121,"src":"31962:10:28","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9118,"src":"31976:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9139,"nodeType":"IfStatement","src":"31958:97:28","trueBody":{"id":9138,"nodeType":"Block","src":"31983:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":9134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:28","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":9135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9118,"src":"32038:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9133,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"32004:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9137,"nodeType":"RevertStatement","src":"31997:47:28"}]}}]},"documentation":{"id":9116,"nodeType":"StructuredDocumentation","src":"31529:307:28","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":9141,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:28","nodeType":"FunctionDefinition","parameters":{"id":9119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9118,"mutability":"mutable","name":"value","nameLocation":"31865:5:28","nodeType":"VariableDeclaration","scope":9141,"src":"31858:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9117,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:28"},"returnParameters":{"id":9122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9121,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:28","nodeType":"VariableDeclaration","scope":9141,"src":"31895:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":9120,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:28","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:28"},"scope":9286,"src":"31841:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9166,"nodeType":"Block","src":"32451:148:28","statements":[{"expression":{"id":9154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9149,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9147,"src":"32461:10:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9144,"src":"32480:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":9150,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:28","typeDescriptions":{}}},"id":9153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":9155,"nodeType":"ExpressionStatement","src":"32461:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9156,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9147,"src":"32500:10:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9144,"src":"32514:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9165,"nodeType":"IfStatement","src":"32496:97:28","trueBody":{"id":9164,"nodeType":"Block","src":"32521:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":9160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":9161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9144,"src":"32576:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9159,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"32542:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9163,"nodeType":"RevertStatement","src":"32535:47:28"}]}}]},"documentation":{"id":9142,"nodeType":"StructuredDocumentation","src":"32067:307:28","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":9167,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:28","nodeType":"FunctionDefinition","parameters":{"id":9145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9144,"mutability":"mutable","name":"value","nameLocation":"32403:5:28","nodeType":"VariableDeclaration","scope":9167,"src":"32396:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9143,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:28"},"returnParameters":{"id":9148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9147,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:28","nodeType":"VariableDeclaration","scope":9167,"src":"32433:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":9146,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:28"},"scope":9286,"src":"32379:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9192,"nodeType":"Block","src":"32989:148:28","statements":[{"expression":{"id":9180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9175,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"32999:10:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"33018:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":9176,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:28","typeDescriptions":{}}},"id":9179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":9181,"nodeType":"ExpressionStatement","src":"32999:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9182,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"33038:10:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"33052:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9191,"nodeType":"IfStatement","src":"33034:97:28","trueBody":{"id":9190,"nodeType":"Block","src":"33059:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":9186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:28","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":9187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"33114:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9185,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"33080:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9189,"nodeType":"RevertStatement","src":"33073:47:28"}]}}]},"documentation":{"id":9168,"nodeType":"StructuredDocumentation","src":"32605:307:28","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":9193,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:28","nodeType":"FunctionDefinition","parameters":{"id":9171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9170,"mutability":"mutable","name":"value","nameLocation":"32941:5:28","nodeType":"VariableDeclaration","scope":9193,"src":"32934:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9169,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:28"},"returnParameters":{"id":9174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9173,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:28","nodeType":"VariableDeclaration","scope":9193,"src":"32971:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":9172,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:28"},"scope":9286,"src":"32917:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9218,"nodeType":"Block","src":"33527:148:28","statements":[{"expression":{"id":9206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9201,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"33537:10:28","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9196,"src":"33556:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":9202,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:28","typeDescriptions":{}}},"id":9205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:28","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":9207,"nodeType":"ExpressionStatement","src":"33537:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9208,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"33576:10:28","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9196,"src":"33590:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9217,"nodeType":"IfStatement","src":"33572:97:28","trueBody":{"id":9216,"nodeType":"Block","src":"33597:72:28","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":9212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":9213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9196,"src":"33652:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9211,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"33618:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9215,"nodeType":"RevertStatement","src":"33611:47:28"}]}}]},"documentation":{"id":9194,"nodeType":"StructuredDocumentation","src":"33143:307:28","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":9219,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:28","nodeType":"FunctionDefinition","parameters":{"id":9197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9196,"mutability":"mutable","name":"value","nameLocation":"33479:5:28","nodeType":"VariableDeclaration","scope":9219,"src":"33472:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9195,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:28"},"returnParameters":{"id":9200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9199,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:28","nodeType":"VariableDeclaration","scope":9219,"src":"33509:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":9198,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:28","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:28"},"scope":9286,"src":"33455:220:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9244,"nodeType":"Block","src":"34058:146:28","statements":[{"expression":{"id":9232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9227,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9225,"src":"34068:10:28","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9222,"src":"34086:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":9228,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:28","typeDescriptions":{}}},"id":9231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:28","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":9233,"nodeType":"ExpressionStatement","src":"34068:24:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9234,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9225,"src":"34106:10:28","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9222,"src":"34120:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9243,"nodeType":"IfStatement","src":"34102:96:28","trueBody":{"id":9242,"nodeType":"Block","src":"34127:71:28","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":9238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":9239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9222,"src":"34181:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9237,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"34148:29:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9241,"nodeType":"RevertStatement","src":"34141:46:28"}]}}]},"documentation":{"id":9220,"nodeType":"StructuredDocumentation","src":"33681:302:28","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":9245,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:28","nodeType":"FunctionDefinition","parameters":{"id":9223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9222,"mutability":"mutable","name":"value","nameLocation":"34011:5:28","nodeType":"VariableDeclaration","scope":9245,"src":"34004:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9221,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:28"},"returnParameters":{"id":9226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9225,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:28","nodeType":"VariableDeclaration","scope":9245,"src":"34041:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":9224,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:28","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:28"},"scope":9286,"src":"33988:216:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9274,"nodeType":"Block","src":"34444:250:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9248,"src":"34557:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":9258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9257,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":9256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":9260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:28","memberName":"max","nodeType":"MemberAccess","src":"34573:16:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9254,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:28","typeDescriptions":{}}},"id":9261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9268,"nodeType":"IfStatement","src":"34553:105:28","trueBody":{"id":9267,"nodeType":"Block","src":"34592:66:28","statements":[{"errorCall":{"arguments":[{"id":9264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9248,"src":"34641:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9263,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"34613:27:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9266,"nodeType":"RevertStatement","src":"34606:41:28"}]}},{"expression":{"arguments":[{"id":9271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9248,"src":"34681:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9269,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:28","typeDescriptions":{}}},"id":9272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9252,"id":9273,"nodeType":"Return","src":"34667:20:28"}]},"documentation":{"id":9246,"nodeType":"StructuredDocumentation","src":"34210:165:28","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":9275,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:28","nodeType":"FunctionDefinition","parameters":{"id":9249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9248,"mutability":"mutable","name":"value","nameLocation":"34406:5:28","nodeType":"VariableDeclaration","scope":9275,"src":"34398:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9247,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:28"},"returnParameters":{"id":9252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9275,"src":"34436:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9250,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:28"},"scope":9286,"src":"34380:314:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9284,"nodeType":"Block","src":"34853:87:28","statements":[{"AST":{"nativeSrc":"34888:46:28","nodeType":"YulBlock","src":"34888:46:28","statements":[{"nativeSrc":"34902:22:28","nodeType":"YulAssignment","src":"34902:22:28","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:28","nodeType":"YulIdentifier","src":"34921:1:28"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:28","nodeType":"YulIdentifier","src":"34914:6:28"},"nativeSrc":"34914:9:28","nodeType":"YulFunctionCall","src":"34914:9:28"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:28","nodeType":"YulIdentifier","src":"34907:6:28"},"nativeSrc":"34907:17:28","nodeType":"YulFunctionCall","src":"34907:17:28"},"variableNames":[{"name":"u","nativeSrc":"34902:1:28","nodeType":"YulIdentifier","src":"34902:1:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9278,"isOffset":false,"isSlot":false,"src":"34921:1:28","valueSize":1},{"declaration":9281,"isOffset":false,"isSlot":false,"src":"34902:1:28","valueSize":1}],"flags":["memory-safe"],"id":9283,"nodeType":"InlineAssembly","src":"34863:71:28"}]},"documentation":{"id":9276,"nodeType":"StructuredDocumentation","src":"34700:90:28","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":9285,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:28","nodeType":"FunctionDefinition","parameters":{"id":9279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9278,"mutability":"mutable","name":"b","nameLocation":"34816:1:28","nodeType":"VariableDeclaration","scope":9285,"src":"34811:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9277,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:28"},"returnParameters":{"id":9282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9281,"mutability":"mutable","name":"u","nameLocation":"34850:1:28","nodeType":"VariableDeclaration","scope":9285,"src":"34842:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9280,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:28"},"scope":9286,"src":"34795:145:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9287,"src":"769:34173:28","usedErrors":[7531,7536,7543,7548],"usedEvents":[]}],"src":"192:34751:28"},"id":28},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[9286],"SignedMath":[9430]},"id":9431,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9288,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":9290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9431,"sourceUnit":9287,"src":"135:40:29","symbolAliases":[{"foreign":{"id":9289,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"143:8:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":9291,"nodeType":"StructuredDocumentation","src":"177:80:29","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":9430,"linearizedBaseContracts":[9430],"name":"SignedMath","nameLocation":"266:10:29","nodeType":"ContractDefinition","nodes":[{"body":{"id":9320,"nodeType":"Block","src":"746:215:29","statements":[{"id":9319,"nodeType":"UncheckedBlock","src":"756:199:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9303,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"894:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9296,"src":"900:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"904:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":9312,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9294,"src":"932:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9310,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"916:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9286_$","typeString":"type(library SafeCast)"}},"id":9311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9285,"src":"916:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":9313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9308,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:29","typeDescriptions":{}}},"id":9314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9302,"id":9318,"nodeType":"Return","src":"887:57:29"}]}]},"documentation":{"id":9292,"nodeType":"StructuredDocumentation","src":"283:374:29","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":9321,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:29","nodeType":"FunctionDefinition","parameters":{"id":9299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9294,"mutability":"mutable","name":"condition","nameLocation":"684:9:29","nodeType":"VariableDeclaration","scope":9321,"src":"679:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9293,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9296,"mutability":"mutable","name":"a","nameLocation":"702:1:29","nodeType":"VariableDeclaration","scope":9321,"src":"695:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9295,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9298,"mutability":"mutable","name":"b","nameLocation":"712:1:29","nodeType":"VariableDeclaration","scope":9321,"src":"705:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9297,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:29"},"returnParameters":{"id":9302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9321,"src":"738:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9300,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:29"},"scope":9430,"src":"662:299:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9339,"nodeType":"Block","src":"1102:44:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9324,"src":"1127:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9333,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9326,"src":"1131:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9335,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9324,"src":"1134:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9336,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9326,"src":"1137:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9331,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9321,"src":"1119:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9330,"id":9338,"nodeType":"Return","src":"1112:27:29"}]},"documentation":{"id":9322,"nodeType":"StructuredDocumentation","src":"967:66:29","text":" @dev Returns the largest of two signed numbers."},"id":9340,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:29","nodeType":"FunctionDefinition","parameters":{"id":9327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9324,"mutability":"mutable","name":"a","nameLocation":"1058:1:29","nodeType":"VariableDeclaration","scope":9340,"src":"1051:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9323,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9326,"mutability":"mutable","name":"b","nameLocation":"1068:1:29","nodeType":"VariableDeclaration","scope":9340,"src":"1061:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9325,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:29"},"returnParameters":{"id":9330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9340,"src":"1094:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9328,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:29"},"scope":9430,"src":"1038:108:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9358,"nodeType":"Block","src":"1288:44:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9351,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"1313:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9352,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9345,"src":"1317:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"1320:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9355,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9345,"src":"1323:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9350,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9321,"src":"1305:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9349,"id":9357,"nodeType":"Return","src":"1298:27:29"}]},"documentation":{"id":9341,"nodeType":"StructuredDocumentation","src":"1152:67:29","text":" @dev Returns the smallest of two signed numbers."},"id":9359,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:29","nodeType":"FunctionDefinition","parameters":{"id":9346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9343,"mutability":"mutable","name":"a","nameLocation":"1244:1:29","nodeType":"VariableDeclaration","scope":9359,"src":"1237:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9342,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9345,"mutability":"mutable","name":"b","nameLocation":"1254:1:29","nodeType":"VariableDeclaration","scope":9359,"src":"1247:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9344,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:29"},"returnParameters":{"id":9349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9359,"src":"1280:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9347,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:29"},"scope":9430,"src":"1224:108:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9402,"nodeType":"Block","src":"1537:162:29","statements":[{"assignments":[9370],"declarations":[{"constant":false,"id":9370,"mutability":"mutable","name":"x","nameLocation":"1606:1:29","nodeType":"VariableDeclaration","scope":9402,"src":"1599:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9369,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9383,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9362,"src":"1611:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9372,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9364,"src":"1615:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9362,"src":"1622:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9364,"src":"1626:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":9379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:29"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9384,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9370,"src":"1651:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9389,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9370,"src":"1671:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:29","typeDescriptions":{}}},"id":9390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:29","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9385,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:29","typeDescriptions":{}}},"id":9393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9362,"src":"1685:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9395,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9364,"src":"1689:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9368,"id":9401,"nodeType":"Return","src":"1644:48:29"}]},"documentation":{"id":9360,"nodeType":"StructuredDocumentation","src":"1338:126:29","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":9403,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:29","nodeType":"FunctionDefinition","parameters":{"id":9365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9362,"mutability":"mutable","name":"a","nameLocation":"1493:1:29","nodeType":"VariableDeclaration","scope":9403,"src":"1486:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9361,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9364,"mutability":"mutable","name":"b","nameLocation":"1503:1:29","nodeType":"VariableDeclaration","scope":9403,"src":"1496:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9363,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:29"},"returnParameters":{"id":9368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9403,"src":"1529:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9366,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:29"},"scope":9430,"src":"1469:230:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9428,"nodeType":"Block","src":"1843:767:29","statements":[{"id":9427,"nodeType":"UncheckedBlock","src":"1853:751:29","statements":[{"assignments":[9412],"declarations":[{"constant":false,"id":9412,"mutability":"mutable","name":"mask","nameLocation":"2424:4:29","nodeType":"VariableDeclaration","scope":9427,"src":"2417:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9411,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9416,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9413,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9406,"src":"2431:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:29","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9419,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9406,"src":"2576:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9420,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9412,"src":"2580:4:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9423,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9412,"src":"2588:4:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9417,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:29","typeDescriptions":{}}},"id":9425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9410,"id":9426,"nodeType":"Return","src":"2560:33:29"}]}]},"documentation":{"id":9404,"nodeType":"StructuredDocumentation","src":"1705:78:29","text":" @dev Returns the absolute unsigned value of a signed value."},"id":9429,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:29","nodeType":"FunctionDefinition","parameters":{"id":9407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9406,"mutability":"mutable","name":"n","nameLocation":"1808:1:29","nodeType":"VariableDeclaration","scope":9429,"src":"1801:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9405,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:29"},"returnParameters":{"id":9410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9429,"src":"1834:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:29"},"scope":9430,"src":"1788:822:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9431,"src":"258:2354:29","usedErrors":[],"usedEvents":[]}],"src":"109:2504:29"},"id":29},"contracts/EmojiChatV2.sol":{"ast":{"absolutePath":"contracts/EmojiChatV2.sol","exportedSymbols":{"ERC1155PausableUpgradeable":[1696],"ERC1155SupplyUpgradeable":[1935],"ERC1155Upgradeable":[1641],"EmojiChatV2":[9678],"Initializable":[462],"OwnableUpgradeable":[194],"Strings":[5888],"UUPSUpgradeable":[644]},"id":9679,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9432,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:30"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","id":9434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9679,"sourceUnit":1642,"src":"58:108:30","symbolAliases":[{"foreign":{"id":9433,"name":"ERC1155Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"66:18:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol","id":9436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9679,"sourceUnit":1697,"src":"167:135:30","symbolAliases":[{"foreign":{"id":9435,"name":"ERC1155PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"175:26:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol","id":9438,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9679,"sourceUnit":1936,"src":"303:131:30","symbolAliases":[{"foreign":{"id":9437,"name":"ERC1155SupplyUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"311:24:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":9440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9679,"sourceUnit":463,"src":"435:96:30","symbolAliases":[{"foreign":{"id":9439,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"443:13:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":9442,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9679,"sourceUnit":195,"src":"532:101:30","symbolAliases":[{"foreign":{"id":9441,"name":"OwnableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"540:18:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":9444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9679,"sourceUnit":645,"src":"634:100:30","symbolAliases":[{"foreign":{"id":9443,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"642:15:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":9446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9679,"sourceUnit":5889,"src":"735:66:30","symbolAliases":[{"foreign":{"id":9445,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"743:7:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9447,"name":"Initializable","nameLocations":["831:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"831:13:30"},"id":9448,"nodeType":"InheritanceSpecifier","src":"831:13:30"},{"baseName":{"id":9449,"name":"ERC1155Upgradeable","nameLocations":["850:18:30"],"nodeType":"IdentifierPath","referencedDeclaration":1641,"src":"850:18:30"},"id":9450,"nodeType":"InheritanceSpecifier","src":"850:18:30"},{"baseName":{"id":9451,"name":"OwnableUpgradeable","nameLocations":["874:18:30"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"874:18:30"},"id":9452,"nodeType":"InheritanceSpecifier","src":"874:18:30"},{"baseName":{"id":9453,"name":"ERC1155PausableUpgradeable","nameLocations":["898:26:30"],"nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"898:26:30"},"id":9454,"nodeType":"InheritanceSpecifier","src":"898:26:30"},{"baseName":{"id":9455,"name":"ERC1155SupplyUpgradeable","nameLocations":["930:24:30"],"nodeType":"IdentifierPath","referencedDeclaration":1935,"src":"930:24:30"},"id":9456,"nodeType":"InheritanceSpecifier","src":"930:24:30"},{"baseName":{"id":9457,"name":"UUPSUpgradeable","nameLocations":["960:15:30"],"nodeType":"IdentifierPath","referencedDeclaration":644,"src":"960:15:30"},"id":9458,"nodeType":"InheritanceSpecifier","src":"960:15:30"}],"canonicalName":"EmojiChatV2","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9678,"linearizedBaseContracts":[9678,644,2212,1935,1696,2141,194,1641,2349,2834,2776,2181,5900,1981,462],"name":"EmojiChatV2","nameLocation":"812:11:30","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9461,"libraryName":{"id":9459,"name":"Strings","nameLocations":["988:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":5888,"src":"988:7:30"},"nodeType":"UsingForDirective","src":"982:26:30","typeName":{"id":9460,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"documentation":{"id":9462,"nodeType":"StructuredDocumentation","src":"1014:50:30","text":"@dev Mapping from token ID to its first minter"},"functionSelector":"2faa69a8","id":9466,"mutability":"mutable","name":"firstMinter","nameLocation":"1104:11:30","nodeType":"VariableDeclaration","scope":9678,"src":"1069:46:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":9465,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9463,"name":"uint256","nodeType":"ElementaryTypeName","src":"1077:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1069:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9464,"name":"address","nodeType":"ElementaryTypeName","src":"1088:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"documentation":{"id":9467,"nodeType":"StructuredDocumentation","src":"1122:30:30","text":"@dev Base URI for metadata"},"id":9469,"mutability":"mutable","name":"_baseURI","nameLocation":"1172:8:30","nodeType":"VariableDeclaration","scope":9678,"src":"1157:23:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9468,"name":"string","nodeType":"ElementaryTypeName","src":"1157:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":9476,"nodeType":"Block","src":"1254:39:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9473,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1264:20:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1264:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9475,"nodeType":"ExpressionStatement","src":"1264:22:30"}]},"documentation":{"id":9470,"nodeType":"StructuredDocumentation","src":"1187:48:30","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":9477,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9471,"nodeType":"ParameterList","parameters":[],"src":"1251:2:30"},"returnParameters":{"id":9472,"nodeType":"ParameterList","parameters":[],"src":"1254:0:30"},"scope":9678,"src":"1240:53:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9501,"nodeType":"Block","src":"1360:173:30","statements":[{"expression":{"arguments":[{"hexValue":"","id":9485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9484,"name":"__ERC1155_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"1370:14:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":9486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1370:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9487,"nodeType":"ExpressionStatement","src":"1370:18:30"},{"expression":{"arguments":[{"id":9489,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9479,"src":"1413:12:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9488,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1398:14:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1398:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9491,"nodeType":"ExpressionStatement","src":"1398:28:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9492,"name":"__ERC1155Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"1436:22:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1436:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9494,"nodeType":"ExpressionStatement","src":"1436:24:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9495,"name":"__ERC1155Supply_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"1470:20:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1470:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9497,"nodeType":"ExpressionStatement","src":"1470:22:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9498,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"1502:22:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1502:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9500,"nodeType":"ExpressionStatement","src":"1502:24:30"}]},"functionSelector":"c4d66de8","id":9502,"implemented":true,"kind":"function","modifiers":[{"id":9482,"kind":"modifierInvocation","modifierName":{"id":9481,"name":"initializer","nameLocations":["1348:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"1348:11:30"},"nodeType":"ModifierInvocation","src":"1348:11:30"}],"name":"initialize","nameLocation":"1308:10:30","nodeType":"FunctionDefinition","parameters":{"id":9480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9479,"mutability":"mutable","name":"initialOwner","nameLocation":"1327:12:30","nodeType":"VariableDeclaration","scope":9502,"src":"1319:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9478,"name":"address","nodeType":"ElementaryTypeName","src":"1319:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1318:22:30"},"returnParameters":{"id":9483,"nodeType":"ParameterList","parameters":[],"src":"1360:0:30"},"scope":9678,"src":"1299:234:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[786],"body":{"id":9521,"nodeType":"Block","src":"1636:78:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":9514,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9469,"src":"1677:8:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9515,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9504,"src":"1687:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1695:8:30","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4600,"src":"1687:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":9517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1687:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":9512,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1660:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1664:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"1660:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1660:46:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1653:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":9510,"name":"string","nodeType":"ElementaryTypeName","src":"1653:6:30","typeDescriptions":{}}},"id":9519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1653:54:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9509,"id":9520,"nodeType":"Return","src":"1646:61:30"}]},"functionSelector":"0e89341c","id":9522,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1548:3:30","nodeType":"FunctionDefinition","overrides":{"id":9506,"nodeType":"OverrideSpecifier","overrides":[],"src":"1603:8:30"},"parameters":{"id":9505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9504,"mutability":"mutable","name":"tokenId","nameLocation":"1569:7:30","nodeType":"VariableDeclaration","scope":9522,"src":"1561:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1561:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1551:31:30"},"returnParameters":{"id":9509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9522,"src":"1621:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9507,"name":"string","nodeType":"ElementaryTypeName","src":"1621:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1620:15:30"},"scope":9678,"src":"1539:175:30","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9533,"nodeType":"Block","src":"1775:34:30","statements":[{"expression":{"id":9531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9529,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9469,"src":"1785:8:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9530,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9524,"src":"1796:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1785:17:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9532,"nodeType":"ExpressionStatement","src":"1785:17:30"}]},"functionSelector":"02fe5305","id":9534,"implemented":true,"kind":"function","modifiers":[{"id":9527,"kind":"modifierInvocation","modifierName":{"id":9526,"name":"onlyOwner","nameLocations":["1765:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1765:9:30"},"nodeType":"ModifierInvocation","src":"1765:9:30"}],"name":"setURI","nameLocation":"1729:6:30","nodeType":"FunctionDefinition","parameters":{"id":9525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9524,"mutability":"mutable","name":"newuri","nameLocation":"1750:6:30","nodeType":"VariableDeclaration","scope":9534,"src":"1736:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9523,"name":"string","nodeType":"ElementaryTypeName","src":"1736:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1735:22:30"},"returnParameters":{"id":9528,"nodeType":"ParameterList","parameters":[],"src":"1775:0:30"},"scope":9678,"src":"1720:89:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9542,"nodeType":"Block","src":"1849:25:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9539,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"1859:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1859:8:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9541,"nodeType":"ExpressionStatement","src":"1859:8:30"}]},"functionSelector":"8456cb59","id":9543,"implemented":true,"kind":"function","modifiers":[{"id":9537,"kind":"modifierInvocation","modifierName":{"id":9536,"name":"onlyOwner","nameLocations":["1839:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1839:9:30"},"nodeType":"ModifierInvocation","src":"1839:9:30"}],"name":"pause","nameLocation":"1824:5:30","nodeType":"FunctionDefinition","parameters":{"id":9535,"nodeType":"ParameterList","parameters":[],"src":"1829:2:30"},"returnParameters":{"id":9538,"nodeType":"ParameterList","parameters":[],"src":"1849:0:30"},"scope":9678,"src":"1815:59:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9551,"nodeType":"Block","src":"1916:27:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9548,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"1926:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1926:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9550,"nodeType":"ExpressionStatement","src":"1926:10:30"}]},"functionSelector":"3f4ba83a","id":9552,"implemented":true,"kind":"function","modifiers":[{"id":9546,"kind":"modifierInvocation","modifierName":{"id":9545,"name":"onlyOwner","nameLocations":["1906:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1906:9:30"},"nodeType":"ModifierInvocation","src":"1906:9:30"}],"name":"unpause","nameLocation":"1889:7:30","nodeType":"FunctionDefinition","parameters":{"id":9544,"nodeType":"ParameterList","parameters":[],"src":"1896:2:30"},"returnParameters":{"id":9547,"nodeType":"ParameterList","parameters":[],"src":"1916:0:30"},"scope":9678,"src":"1880:63:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9586,"nodeType":"Block","src":"2072:143:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9563,"name":"firstMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9466,"src":"2086:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":9565,"indexExpression":{"id":9564,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9556,"src":"2098:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2086:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2105:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9566,"name":"address","nodeType":"ElementaryTypeName","src":"2105:7:30","typeDescriptions":{}}},"id":9569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2086:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9578,"nodeType":"IfStatement","src":"2082:85:30","trueBody":{"id":9577,"nodeType":"Block","src":"2117:50:30","statements":[{"expression":{"id":9575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9571,"name":"firstMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9466,"src":"2131:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":9573,"indexExpression":{"id":9572,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9556,"src":"2143:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2131:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9574,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9554,"src":"2149:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2131:25:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9576,"nodeType":"ExpressionStatement","src":"2131:25:30"}]}},{"expression":{"arguments":[{"id":9580,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9554,"src":"2182:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9581,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9556,"src":"2191:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9582,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9558,"src":"2195:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9583,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9560,"src":"2203:4:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9579,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"2176:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":9584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9585,"nodeType":"ExpressionStatement","src":"2176:32:30"}]},"functionSelector":"731133e9","id":9587,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1958:4:30","nodeType":"FunctionDefinition","parameters":{"id":9561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9554,"mutability":"mutable","name":"account","nameLocation":"1980:7:30","nodeType":"VariableDeclaration","scope":9587,"src":"1972:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9553,"name":"address","nodeType":"ElementaryTypeName","src":"1972:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9556,"mutability":"mutable","name":"id","nameLocation":"2005:2:30","nodeType":"VariableDeclaration","scope":9587,"src":"1997:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9558,"mutability":"mutable","name":"amount","nameLocation":"2025:6:30","nodeType":"VariableDeclaration","scope":9587,"src":"2017:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2017:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9560,"mutability":"mutable","name":"data","nameLocation":"2054:4:30","nodeType":"VariableDeclaration","scope":9587,"src":"2041:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9559,"name":"bytes","nodeType":"ElementaryTypeName","src":"2041:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1962:102:30"},"returnParameters":{"id":9562,"nodeType":"ParameterList","parameters":[],"src":"2072:0:30"},"scope":9678,"src":"1949:266:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9640,"nodeType":"Block","src":"2364:221:30","statements":[{"body":{"id":9631,"nodeType":"Block","src":"2415:120:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9611,"name":"firstMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9466,"src":"2433:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":9615,"indexExpression":{"baseExpression":{"id":9612,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9592,"src":"2445:3:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9614,"indexExpression":{"id":9613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"2449:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2445:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2433:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2464:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2456:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9616,"name":"address","nodeType":"ElementaryTypeName","src":"2456:7:30","typeDescriptions":{}}},"id":9619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2456:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2433:33:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9630,"nodeType":"IfStatement","src":"2429:96:30","trueBody":{"id":9629,"nodeType":"Block","src":"2468:57:30","statements":[{"expression":{"id":9627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9621,"name":"firstMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9466,"src":"2486:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":9625,"indexExpression":{"baseExpression":{"id":9622,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9592,"src":"2498:3:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9624,"indexExpression":{"id":9623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"2502:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2498:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2486:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9589,"src":"2508:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2486:24:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9628,"nodeType":"ExpressionStatement","src":"2486:24:30"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9604,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"2394:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9605,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9592,"src":"2398:3:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2402:6:30","memberName":"length","nodeType":"MemberAccess","src":"2398:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2394:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9632,"initializationExpression":{"assignments":[9601],"declarations":[{"constant":false,"id":9601,"mutability":"mutable","name":"i","nameLocation":"2387:1:30","nodeType":"VariableDeclaration","scope":9632,"src":"2379:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9600,"name":"uint256","nodeType":"ElementaryTypeName","src":"2379:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9603,"initialValue":{"hexValue":"30","id":9602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2391:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2379:13:30"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2410:3:30","subExpression":{"id":9608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"2410:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9610,"nodeType":"ExpressionStatement","src":"2410:3:30"},"nodeType":"ForStatement","src":"2374:161:30"},{"expression":{"arguments":[{"id":9634,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9589,"src":"2555:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9635,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9592,"src":"2559:3:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9636,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9595,"src":"2564:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9637,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9597,"src":"2573:4:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9633,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"2544:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":9638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2544:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9639,"nodeType":"ExpressionStatement","src":"2544:34:30"}]},"functionSelector":"1f7fdffa","id":9641,"implemented":true,"kind":"function","modifiers":[],"name":"mintBatch","nameLocation":"2230:9:30","nodeType":"FunctionDefinition","parameters":{"id":9598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9589,"mutability":"mutable","name":"to","nameLocation":"2257:2:30","nodeType":"VariableDeclaration","scope":9641,"src":"2249:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9588,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9592,"mutability":"mutable","name":"ids","nameLocation":"2286:3:30","nodeType":"VariableDeclaration","scope":9641,"src":"2269:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9590,"name":"uint256","nodeType":"ElementaryTypeName","src":"2269:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9591,"nodeType":"ArrayTypeName","src":"2269:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9595,"mutability":"mutable","name":"amounts","nameLocation":"2316:7:30","nodeType":"VariableDeclaration","scope":9641,"src":"2299:24:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2299:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9594,"nodeType":"ArrayTypeName","src":"2299:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9597,"mutability":"mutable","name":"data","nameLocation":"2346:4:30","nodeType":"VariableDeclaration","scope":9641,"src":"2333:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9596,"name":"bytes","nodeType":"ElementaryTypeName","src":"2333:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2239:117:30"},"returnParameters":{"id":9599,"nodeType":"ParameterList","parameters":[],"src":"2364:0:30"},"scope":9678,"src":"2221:364:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[598],"body":{"id":9649,"nodeType":"Block","src":"2687:2:30","statements":[]},"id":9650,"implemented":true,"kind":"function","modifiers":[{"id":9647,"kind":"modifierInvocation","modifierName":{"id":9646,"name":"onlyOwner","nameLocations":["2677:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2677:9:30"},"nodeType":"ModifierInvocation","src":"2677:9:30"}],"name":"_authorizeUpgrade","nameLocation":"2600:17:30","nodeType":"FunctionDefinition","overrides":{"id":9645,"nodeType":"OverrideSpecifier","overrides":[],"src":"2668:8:30"},"parameters":{"id":9644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9643,"mutability":"mutable","name":"newImplementation","nameLocation":"2635:17:30","nodeType":"VariableDeclaration","scope":9650,"src":"2627:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9642,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2617:41:30"},"returnParameters":{"id":9648,"nodeType":"ParameterList","parameters":[],"src":"2687:0:30"},"scope":9678,"src":"2591:98:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1174,1695,1934],"body":{"id":9676,"nodeType":"Block","src":"3049:53:30","statements":[{"expression":{"arguments":[{"id":9670,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9652,"src":"3073:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9671,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9654,"src":"3079:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9672,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9657,"src":"3083:3:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9673,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9660,"src":"3088:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":9667,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3059:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_EmojiChatV2_$9678_$","typeString":"type(contract super EmojiChatV2)"}},"id":9669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3065:7:30","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"3059:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":9674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3059:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9675,"nodeType":"ExpressionStatement","src":"3059:36:30"}]},"id":9677,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2772:7:30","nodeType":"FunctionDefinition","overrides":{"id":9665,"nodeType":"OverrideSpecifier","overrides":[{"id":9662,"name":"ERC1155Upgradeable","nameLocations":["2938:18:30"],"nodeType":"IdentifierPath","referencedDeclaration":1641,"src":"2938:18:30"},{"id":9663,"name":"ERC1155PausableUpgradeable","nameLocations":["2970:26:30"],"nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"2970:26:30"},{"id":9664,"name":"ERC1155SupplyUpgradeable","nameLocations":["3010:24:30"],"nodeType":"IdentifierPath","referencedDeclaration":1935,"src":"3010:24:30"}],"src":"2916:128:30"},"parameters":{"id":9661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9652,"mutability":"mutable","name":"from","nameLocation":"2797:4:30","nodeType":"VariableDeclaration","scope":9677,"src":"2789:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9651,"name":"address","nodeType":"ElementaryTypeName","src":"2789:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9654,"mutability":"mutable","name":"to","nameLocation":"2819:2:30","nodeType":"VariableDeclaration","scope":9677,"src":"2811:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9653,"name":"address","nodeType":"ElementaryTypeName","src":"2811:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9657,"mutability":"mutable","name":"ids","nameLocation":"2848:3:30","nodeType":"VariableDeclaration","scope":9677,"src":"2831:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9655,"name":"uint256","nodeType":"ElementaryTypeName","src":"2831:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9656,"nodeType":"ArrayTypeName","src":"2831:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9660,"mutability":"mutable","name":"values","nameLocation":"2878:6:30","nodeType":"VariableDeclaration","scope":9677,"src":"2861:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9659,"nodeType":"ArrayTypeName","src":"2861:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2779:111:30"},"returnParameters":{"id":9666,"nodeType":"ParameterList","parameters":[],"src":"3049:0:30"},"scope":9678,"src":"2763:339:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":9679,"src":"803:2301:30","usedErrors":[30,35,211,214,489,494,2020,2023,2314,2319,2324,2331,2336,2341,2348,2369,2382,2998,4171],"usedEvents":[41,219,2012,2017,2189,2673,2688,2697,2704]}],"src":"32:3073:30"},"id":30}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ERC1155Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":\"ERC1155Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x3a0d63838dff3fd8b77c8c44ecf37cc39b15f26fd5269da3b690879478fa3cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://502cec8d2ef132cce69840b1c2aef2209092554292a50d628b27477ef7a441ca\",\"dweb:/ipfs/QmaSxcHDndhVuWm4E6LcSMRkhFYsMXxrgLWMLCQnyG3qHr\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol":{"ERC1155PausableUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","paused()":"5c975abb","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1155 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol\":\"ERC1155PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x3a0d63838dff3fd8b77c8c44ecf37cc39b15f26fd5269da3b690879478fa3cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://502cec8d2ef132cce69840b1c2aef2209092554292a50d628b27477ef7a441ca\",\"dweb:/ipfs/QmaSxcHDndhVuWm4E6LcSMRkhFYsMXxrgLWMLCQnyG3qHr\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol\":{\"keccak256\":\"0xdb9e44a214d97544cf0d65db9794a7d2bf67285cbfd14ed296665f7b13182ccb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2879c15dd81f2fb7d630f1bb8e6e0e86f84b337c871d49f7636ef343392fa362\",\"dweb:/ipfs/QmYzxzLibEbmbdMqXsxdjwXn6gdGrKdLFJZLkCoDQTNjwt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol":{"ERC1155SupplyUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","exists(uint256)":"4f558e79","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","totalSupply(uint256)":"bd85b039","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC-1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted. NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens that can be minted. CAUTION: This extension should not be added in an upgrade to an already deployed contract.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":\"ERC1155SupplyUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x3a0d63838dff3fd8b77c8c44ecf37cc39b15f26fd5269da3b690879478fa3cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://502cec8d2ef132cce69840b1c2aef2209092554292a50d628b27477ef7a441ca\",\"dweb:/ipfs/QmaSxcHDndhVuWm4E6LcSMRkhFYsMXxrgLWMLCQnyG3qHr\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":{\"keccak256\":\"0x82e5758c4890ae988fd2af513770764a7d651bfddd5e319a3d194813ca767fef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7797972b203536fa26a8eb36c7b7d1db715c28cace21a56f6a5c51693de2467\",\"dweb:/ipfs/QmUk7M3ETDji2dh4f5ERG9zfh6y3DzaAet2c5affPQC7Rc\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220282d6e13f29150aea007485a29c89218031bb875cd2872ee118a69af5d9c60c364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0x2D PUSH15 0x13F29150AEA007485A29C89218031B 0xB8 PUSH22 0xCD2872EE118A69AF5D9C60C364736F6C634300081C00 CALLER ","sourceMap":"496:5741:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220282d6e13f29150aea007485a29c89218031bb875cd2872ee118a69af5d9c60c364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0x2D PUSH15 0x13F29150AEA007485A29C89218031B 0xB8 PUSH22 0xCD2872EE118A69AF5D9C60C364736F6C634300081C00 CALLER ","sourceMap":"496:5741:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d975d00dfc76befb67e2fe88d57d2169bc0a9acb893152c642e0110585e1bb8564736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 PUSH22 0xD00DFC76BEFB67E2FE88D57D2169BC0A9ACB893152C6 TIMESTAMP 0xE0 GT SDIV DUP6 0xE1 0xBB DUP6 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"439:3110:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d975d00dfc76befb67e2fe88d57d2169bc0a9acb893152c642e0110585e1bb8564736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 PUSH22 0xD00DFC76BEFB67E2FE88D57D2169BC0A9ACB893152C6 TIMESTAMP 0xE0 GT SDIV DUP6 0xE1 0xBB DUP6 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"439:3110:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd6f7f92807443dc7e228416221bebd35dca6310896354927f3b5b5b186ab58764736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT PUSH16 0x7F92807443DC7E228416221BEBD35DCA PUSH4 0x10896354 SWAP3 PUSH32 0x3B5B5B186AB58764736F6C634300081C00330000000000000000000000000000 ","sourceMap":"233:5815:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd6f7f92807443dc7e228416221bebd35dca6310896354927f3b5b5b186ab58764736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT PUSH16 0x7F92807443DC7E228416221BEBD35DCA PUSH4 0x10896354 SWAP3 PUSH32 0x3B5B5B186AB58764736F6C634300081C00330000000000000000000000000000 ","sourceMap":"233:5815:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205210a59e75c2c679709c855a8c3900554ea79e9822db0e481c30970a24591f2e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE LT 0xA5 SWAP15 PUSH22 0xC2C679709C855A8C3900554EA79E9822DB0E481C3097 EXP 0x24 MSIZE 0x1F 0x2E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"459:17878:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205210a59e75c2c679709c855a8c3900554ea79e9822db0e481c30970a24591f2e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE LT 0xA5 SWAP15 PUSH22 0xC2C679709C855A8C3900554EA79E9822DB0E481C3097 EXP 0x24 MSIZE 0x1F 0x2E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"459:17878:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a24cff8dced09d2aed8655114155a6e8d65e2e79429fb59e97683d8033d86a9664736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0x4C SELFDESTRUCT DUP14 0xCE 0xD0 SWAP14 0x2A 0xED DUP7 SSTORE GT COINBASE SSTORE 0xA6 0xE8 0xD6 MCOPY 0x2E PUSH26 0x429FB59E97683D8033D86A9664736F6C634300081C0033000000 ","sourceMap":"224:218:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a24cff8dced09d2aed8655114155a6e8d65e2e79429fb59e97683d8033d86a9664736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0x4C SELFDESTRUCT DUP14 0xCE 0xD0 SWAP14 0x2A 0xED DUP7 SSTORE GT COINBASE SSTORE 0xA6 0xE8 0xD6 MCOPY 0x2E PUSH26 0x429FB59E97683D8033D86A9664736F6C634300081C0033000000 ","sourceMap":"224:218:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004b89e72da43ab1ee05bd033fb62a621154a79713cd82d3cd8a0e9353695a64e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xB8 SWAP15 PUSH19 0xDA43AB1EE05BD033FB62A621154A79713CD82D EXTCODECOPY 0xD8 LOG0 0xE9 CALLDATALOAD CALLDATASIZE SWAP6 0xA6 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"411:484:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004b89e72da43ab1ee05bd033fb62a621154a79713cd82d3cd8a0e9353695a64e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xB8 SWAP15 PUSH19 0xDA43AB1EE05BD033FB62A621154A79713CD82D EXTCODECOPY 0xD8 LOG0 0xE9 CALLDATALOAD CALLDATASIZE SWAP6 0xA6 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"411:484:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204330ae6ef8db2cc2a270e59c2c49e6261320031ffca55433d647cfb941b9ef8664736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER ADDRESS 0xAE PUSH15 0xF8DB2CC2A270E59C2C49E626132003 0x1F 0xFC 0xA5 SLOAD CALLER 0xD6 SELFBALANCE 0xCF 0xB9 COINBASE 0xB9 0xEF DUP7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1599:3723:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204330ae6ef8db2cc2a270e59c2c49e6261320031ffca55433d647cfb941b9ef8664736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER ADDRESS 0xAE PUSH15 0xF8DB2CC2A270E59C2C49E626132003 0x1F 0xFC 0xA5 SLOAD CALLER 0xD6 SELFBALANCE 0xCF 0xB9 COINBASE 0xB9 0xEF DUP7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1599:3723:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208dc4fb6f526126c0df922720c2870110d02d5610580dbbc0bfc9c16a15f5c32464736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xC4 0xFB PUSH16 0x526126C0DF922720C2870110D02D5610 PC 0xD 0xBB 0xC0 0xBF 0xC9 0xC1 PUSH11 0x15F5C32464736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"297:18980:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208dc4fb6f526126c0df922720c2870110d02d5610580dbbc0bfc9c16a15f5c32464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xC4 0xFB PUSH16 0x526126C0DF922720C2870110D02D5610 PC 0xD 0xBB 0xC0 0xBF 0xC9 0xC1 PUSH11 0x15F5C32464736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"297:18980:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201619ae7223aa01bdc7afa5042f76fccaa3f5955b0138f23cbc3d1bec23770a5f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NOT 0xAE PUSH19 0x23AA01BDC7AFA5042F76FCCAA3F5955B0138F2 EXTCODECOPY 0xBC RETURNDATASIZE SHL 0xEC 0x23 PUSH24 0xA5F64736F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201619ae7223aa01bdc7afa5042f76fccaa3f5955b0138f23cbc3d1bec23770a5f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NOT 0xAE PUSH19 0x23AA01BDC7AFA5042F76FCCAA3F5955B0138F2 EXTCODECOPY 0xBC RETURNDATASIZE SHL 0xEC 0x23 PUSH24 0xA5F64736F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/EmojiChatV2.sol":{"EmojiChatV2":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"firstMinter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newuri","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_9477":{"entryPoint":null,"id":9477,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_416":{"entryPoint":87,"id":416,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_461":{"entryPoint":347,"id":461,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":373,"id":447,"parameterSlots":0,"returnSlots":1},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":436,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":416,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:456:31","nodeType":"YulBlock","src":"0:456:31","statements":[{"body":{"nativeSrc":"51:57:31","nodeType":"YulBlock","src":"51:57:31","statements":[{"nativeSrc":"61:41:31","nodeType":"YulAssignment","src":"61:41:31","value":{"arguments":[{"name":"value","nativeSrc":"76:5:31","nodeType":"YulIdentifier","src":"76:5:31"},{"kind":"number","nativeSrc":"83:18:31","nodeType":"YulLiteral","src":"83:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"72:3:31","nodeType":"YulIdentifier","src":"72:3:31"},"nativeSrc":"72:30:31","nodeType":"YulFunctionCall","src":"72:30:31"},"variableNames":[{"name":"cleaned","nativeSrc":"61:7:31","nodeType":"YulIdentifier","src":"61:7:31"}]}]},"name":"cleanup_t_uint64","nativeSrc":"7:101:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33:5:31","nodeType":"YulTypedName","src":"33:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"43:7:31","nodeType":"YulTypedName","src":"43:7:31","type":""}],"src":"7:101:31"},{"body":{"nativeSrc":"177:52:31","nodeType":"YulBlock","src":"177:52:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"194:3:31","nodeType":"YulIdentifier","src":"194:3:31"},{"arguments":[{"name":"value","nativeSrc":"216:5:31","nodeType":"YulIdentifier","src":"216:5:31"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"199:16:31","nodeType":"YulIdentifier","src":"199:16:31"},"nativeSrc":"199:23:31","nodeType":"YulFunctionCall","src":"199:23:31"}],"functionName":{"name":"mstore","nativeSrc":"187:6:31","nodeType":"YulIdentifier","src":"187:6:31"},"nativeSrc":"187:36:31","nodeType":"YulFunctionCall","src":"187:36:31"},"nativeSrc":"187:36:31","nodeType":"YulExpressionStatement","src":"187:36:31"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"114:115:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"165:5:31","nodeType":"YulTypedName","src":"165:5:31","type":""},{"name":"pos","nativeSrc":"172:3:31","nodeType":"YulTypedName","src":"172:3:31","type":""}],"src":"114:115:31"},{"body":{"nativeSrc":"331:122:31","nodeType":"YulBlock","src":"331:122:31","statements":[{"nativeSrc":"341:26:31","nodeType":"YulAssignment","src":"341:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"353:9:31","nodeType":"YulIdentifier","src":"353:9:31"},{"kind":"number","nativeSrc":"364:2:31","nodeType":"YulLiteral","src":"364:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"349:3:31","nodeType":"YulIdentifier","src":"349:3:31"},"nativeSrc":"349:18:31","nodeType":"YulFunctionCall","src":"349:18:31"},"variableNames":[{"name":"tail","nativeSrc":"341:4:31","nodeType":"YulIdentifier","src":"341:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"419:6:31","nodeType":"YulIdentifier","src":"419:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"432:9:31","nodeType":"YulIdentifier","src":"432:9:31"},{"kind":"number","nativeSrc":"443:1:31","nodeType":"YulLiteral","src":"443:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"428:3:31","nodeType":"YulIdentifier","src":"428:3:31"},"nativeSrc":"428:17:31","nodeType":"YulFunctionCall","src":"428:17:31"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"377:41:31","nodeType":"YulIdentifier","src":"377:41:31"},"nativeSrc":"377:69:31","nodeType":"YulFunctionCall","src":"377:69:31"},"nativeSrc":"377:69:31","nodeType":"YulExpressionStatement","src":"377:69:31"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"235:218:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"303:9:31","nodeType":"YulTypedName","src":"303:9:31","type":""},{"name":"value0","nativeSrc":"315:6:31","nodeType":"YulTypedName","src":"315:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"326:4:31","nodeType":"YulTypedName","src":"326:4:31","type":""}],"src":"235:218:31"}]},"contents":"{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5061005261005760201b60201c565b6101de565b600061006761015b60201b60201c565b90508060000160089054906101000a900460ff16156100b2576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16146101585767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff60405161014f91906101c3565b60405180910390a15b50565b60008061016c61017560201b60201c565b90508091505090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b600067ffffffffffffffff82169050919050565b6101bd816101a0565b82525050565b60006020820190506101d860008301846101b4565b92915050565b6080516140296102076000396000818161147f015281816114d4015261168f01526140296000f3fe6080604052600436106101655760003560e01c806352d1902d116100d1578063a22cb4651161008a578063c4d66de811610064578063c4d66de81461051a578063e985e9c514610543578063f242432a14610580578063f2fde38b146105a957610165565b8063a22cb46514610489578063ad3cb1cc146104b2578063bd85b039146104dd57610165565b806352d1902d146103b15780635c975abb146103dc578063715018a614610407578063731133e91461041e5780638456cb59146104475780638da5cb5b1461045e57610165565b80632eb2c2d6116101235780632eb2c2d61461029e5780632faa69a8146102c75780633f4ba83a146103045780634e1273f41461031b5780634f1ef286146103585780634f558e791461037457610165565b8062fdd58e1461016a57806301ffc9a7146101a757806302fe5305146101e45780630e89341c1461020d57806318160ddd1461024a5780631f7fdffa14610275575b600080fd5b34801561017657600080fd5b50610191600480360381019061018c9190612cf7565b6105d2565b60405161019e9190612d46565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c99190612db9565b61063b565b6040516101db9190612e01565b60405180910390f35b3480156101f057600080fd5b5061020b60048036038101906102069190612f62565b61071d565b005b34801561021957600080fd5b50610234600480360381019061022f9190612fab565b610738565b6040516102419190613057565b60405180910390f35b34801561025657600080fd5b5061025f61076c565b60405161026c9190612d46565b60405180910390f35b34801561028157600080fd5b5061029c600480360381019061029791906131e2565b610784565b005b3480156102aa57600080fd5b506102c560048036038101906102c0919061329d565b61089c565b005b3480156102d357600080fd5b506102ee60048036038101906102e99190612fab565b610944565b6040516102fb919061337b565b60405180910390f35b34801561031057600080fd5b50610319610977565b005b34801561032757600080fd5b50610342600480360381019061033d9190613459565b610989565b60405161034f919061358f565b60405180910390f35b610372600480360381019061036d91906135b1565b610a92565b005b34801561038057600080fd5b5061039b60048036038101906103969190612fab565b610ab1565b6040516103a89190612e01565b60405180910390f35b3480156103bd57600080fd5b506103c6610ac5565b6040516103d39190613626565b60405180910390f35b3480156103e857600080fd5b506103f1610af8565b6040516103fe9190612e01565b60405180910390f35b34801561041357600080fd5b5061041c610b1d565b005b34801561042a57600080fd5b5061044560048036038101906104409190613641565b610b31565b005b34801561045357600080fd5b5061045c610bfb565b005b34801561046a57600080fd5b50610473610c0d565b604051610480919061337b565b60405180910390f35b34801561049557600080fd5b506104b060048036038101906104ab91906136f0565b610c45565b005b3480156104be57600080fd5b506104c7610c5b565b6040516104d49190613057565b60405180910390f35b3480156104e957600080fd5b5061050460048036038101906104ff9190612fab565b610c94565b6040516105119190612d46565b60405180910390f35b34801561052657600080fd5b50610541600480360381019061053c9190613730565b610cbf565b005b34801561054f57600080fd5b5061056a6004803603810190610565919061375d565b610e7e565b6040516105779190612e01565b60405180910390f35b34801561058c57600080fd5b506105a760048036038101906105a2919061379d565b610f20565b005b3480156105b557600080fd5b506105d060048036038101906105cb9190613730565b610fc8565b005b6000806105dd61104e565b905080600001600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061070657507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610716575061071582611076565b5b9050919050565b6107256110e0565b80600190816107349190613a40565b5050565b6060600161074583611167565b604051602001610756929190613bd1565b6040516020818303038152906040529050919050565b600080610777611235565b9050806001015491505090565b60005b835181101561088957600073ffffffffffffffffffffffffffffffffffffffff166000808684815181106107be576107bd613bf5565b5b6020026020010151815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361087c578460008086848151811061082757610826613bf5565b5b6020026020010151815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8080600101915050610787565b506108968484848461125d565b50505050565b60006108a66112e3565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156108eb57506108e98682610e7e565b155b1561092f5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610926929190613c24565b60405180910390fd5b61093c86868686866112eb565b505050505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61097f6110e0565b6109876113e3565b565b606081518351146109d557815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016109cc929190613c4d565b60405180910390fd5b6000835167ffffffffffffffff8111156109f2576109f1612e37565b5b604051908082528060200260200182016040528015610a205781602001602082028036833780820191505090505b50905060005b8451811015610a8757610a5d610a45828761145590919063ffffffff16565b610a58838761146990919063ffffffff16565b6105d2565b828281518110610a7057610a6f613bf5565b5b602002602001018181525050806001019050610a26565b508091505092915050565b610a9a61147d565b610aa382611563565b610aad828261156e565b5050565b600080610abd83610c94565b119050919050565b6000610acf61168d565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600080610b03611714565b90508060000160009054906101000a900460ff1691505090565b610b256110e0565b610b2f600061173c565b565b600073ffffffffffffffffffffffffffffffffffffffff1660008085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610be9578360008085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b610bf584848484611813565b50505050565b610c036110e0565b610c0b6118ac565b565b600080610c1861191e565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610c57610c506112e3565b8383611946565b5050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b600080610c9f611235565b905080600001600084815260200190815260200160002054915050919050565b6000610cc9611ac5565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610d175750825b9050600060018367ffffffffffffffff16148015610d4c575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610d5a575080155b15610d91576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610de15760018560000160086101000a81548160ff0219169083151502179055505b610df960405180602001604052806000815250611ad9565b610e0286611aed565b610e0a611b01565b610e12611b0b565b610e1a611b15565b8315610e765760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610e6d9190613cc5565b60405180910390a15b505050505050565b600080610e8961104e565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000610f2a6112e3565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610f6f5750610f6d8682610e7e565b155b15610fb35780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610faa929190613c24565b60405180910390fd5b610fc08686868686611b1f565b505050505050565b610fd06110e0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110425760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611039919061337b565b60405180910390fd5b61104b8161173c565b50565b60007f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6110e86112e3565b73ffffffffffffffffffffffffffffffffffffffff16611106610c0d565b73ffffffffffffffffffffffffffffffffffffffff1614611165576111296112e3565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161115c919061337b565b60405180910390fd5b565b60606000600161117684611c2a565b01905060008167ffffffffffffffff81111561119557611194612e37565b5b6040519080825280601f01601f1916602001820160405280156111c75781602001600182028036833780820191505090505b509050600082602001820190505b60011561122a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161121e5761121d613ce0565b5b049450600085036111d5575b819350505050919050565b60007f4a593662ee04d27b6a00ebb31be7fe0c102c2ade82a7c5d764f2df05dc4e2800905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112cf5760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112c6919061337b565b60405180910390fd5b6112dd600085858585611d7d565b50505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361135d5760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611354919061337b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036113cf5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016113c6919061337b565b60405180910390fd5b6113dc8585858585611d7d565b5050505050565b6113eb611e2f565b60006113f5611714565b905060008160000160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61143d6112e3565b60405161144a919061337b565b60405180910390a150565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061152a57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611511611e6f565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611561576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61156b6110e0565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156115d657506040513d601f19601f820116820180604052508101906115d39190613d3b565b60015b61161757816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161160e919061337b565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461167e57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016116759190613626565b60405180910390fd5b6116888383611ec6565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611712576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b600061174661191e565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036118855760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161187c919061337b565b60405180910390fd5b6000806118928585611f39565b915091506118a4600087848487611d7d565b505050505050565b6118b4611f69565b60006118be611714565b905060018160000160006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119066112e3565b604051611913919061337b565b60405180910390a150565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600061195061104e565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119c45760006040517fced3e1000000000000000000000000000000000000000000000000000000000081526004016119bb919061337b565b60405180910390fd5b818160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051611ab79190612e01565b60405180910390a350505050565b600080611ad0611faa565b90508091505090565b611ae1611fd5565b611aea81612015565b50565b611af5611fd5565b611afe81612029565b50565b611b09611fd5565b565b611b13611fd5565b565b611b1d611fd5565b565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b915760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611b88919061337b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611c035760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611bfa919061337b565b60405180910390fd5b600080611c108585611f39565b91509150611c218787848487611d7d565b50505050505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611c88577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611c7e57611c7d613ce0565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611cc5576d04ee2d6d415b85acef81000000008381611cbb57611cba613ce0565b5b0492506020810190505b662386f26fc100008310611cf457662386f26fc100008381611cea57611ce9613ce0565b5b0492506010810190505b6305f5e1008310611d1d576305f5e1008381611d1357611d12613ce0565b5b0492506008810190505b6127108310611d42576127108381611d3857611d37613ce0565b5b0492506004810190505b60648310611d655760648381611d5b57611d5a613ce0565b5b0492506002810190505b600a8310611d74576001810190505b80915050919050565b611d89858585856120af565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611e28576000611dc76112e3565b90506001845103611e17576000611de860008661146990919063ffffffff16565b90506000611e0060008661146990919063ffffffff16565b9050611e108389898585896120c1565b5050611e26565b611e25818787878787612275565b5b505b5050505050565b611e37610af8565b611e6d576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611e9d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612429565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611ecf82612433565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115611f2c57611f268282612500565b50611f35565b611f34612584565b5b5050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b611f71610af8565b15611fa8576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b611fdd6125c1565b612013576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61201d611fd5565b612026816125e1565b50565b612031611fd5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036120a35760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161209a919061337b565b60405180910390fd5b6120ac8161173c565b50565b6120bb84848484612603565b50505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111561226d578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401612122959493929190613dbd565b6020604051808303816000875af192505050801561215e57506040513d601f19601f8201168201806040525081019061215b9190613e2c565b60015b6121e2573d806000811461218e576040519150601f19603f3d011682016040523d82523d6000602084013e612193565b606091505b5060008151036121da57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016121d1919061337b565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461226b57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401612262919061337b565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115612421578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016122d6959493929190613e59565b6020604051808303816000875af192505050801561231257506040513d601f19601f8201168201806040525081019061230f9190613e2c565b60015b612396573d8060008114612342576040519150601f19603f3d011682016040523d82523d6000602084013e612347565b606091505b50600081510361238e57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401612385919061337b565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461241f57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401612416919061337b565b60405180910390fd5b505b505050505050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361248f57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612486919061337b565b60405180910390fd5b806124bc7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612429565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161252a9190613efd565b600060405180830381855af49150503d8060008114612565576040519150601f19603f3d011682016040523d82523d6000602084013e61256a565b606091505b509150915061257a8583836127a3565b9250505092915050565b60003411156125bf576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60006125cb611ac5565b60000160089054906101000a900460ff16905090565b60006125eb61104e565b9050818160020190816125fe9190613a40565b505050565b600061260d611235565b905061261b85858585612832565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036126e9576000805b84518110156126cb576000612671828661146990919063ffffffff16565b90508084600001600061268d858a61146990919063ffffffff16565b815260200190815260200160002060008282546126aa9190613f43565b9250508190555080836126bd9190613f43565b925050806001019050612653565b50808260010160008282546126e09190613f43565b92505081905550505b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361279c576000805b845181101561278757600061273f828661146990919063ffffffff16565b90508084600001600061275b858a61146990919063ffffffff16565b815260200190815260200160002060008282540392505081905550808301925050806001019050612721565b50808260010160008282540392505081905550505b5050505050565b6060826127b8576127b38261284c565b61282a565b600082511480156127e0575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561282257836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401612819919061337b565b60405180910390fd5b81905061282b565b5b9392505050565b61283a611f69565b61284684848484612891565b50505050565b60008151111561285f5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061289b61104e565b905081518351146128e757825182516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016128de929190613c4d565b60405180910390fd5b60006128f16112e3565b905060005b8451811015612b09576000612914828761146990919063ffffffff16565b9050600061292b838761146990919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614612a5e57600085600001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612a0357898183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016129fa9493929190613f77565b60405180910390fd5b81810386600001600085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614612afc578085600001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612af49190613f43565b925050819055505b50508060010190506128f6565b506001845103612bc8576000612b2960008661146990919063ffffffff16565b90506000612b4160008661146990919063ffffffff16565b90508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051612bb9929190613c4d565b60405180910390a45050612c47565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612c3e929190613fbc565b60405180910390a45b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612c8e82612c63565b9050919050565b612c9e81612c83565b8114612ca957600080fd5b50565b600081359050612cbb81612c95565b92915050565b6000819050919050565b612cd481612cc1565b8114612cdf57600080fd5b50565b600081359050612cf181612ccb565b92915050565b60008060408385031215612d0e57612d0d612c59565b5b6000612d1c85828601612cac565b9250506020612d2d85828601612ce2565b9150509250929050565b612d4081612cc1565b82525050565b6000602082019050612d5b6000830184612d37565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612d9681612d61565b8114612da157600080fd5b50565b600081359050612db381612d8d565b92915050565b600060208284031215612dcf57612dce612c59565b5b6000612ddd84828501612da4565b91505092915050565b60008115159050919050565b612dfb81612de6565b82525050565b6000602082019050612e166000830184612df2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612e6f82612e26565b810181811067ffffffffffffffff82111715612e8e57612e8d612e37565b5b80604052505050565b6000612ea1612c4f565b9050612ead8282612e66565b919050565b600067ffffffffffffffff821115612ecd57612ecc612e37565b5b612ed682612e26565b9050602081019050919050565b82818337600083830152505050565b6000612f05612f0084612eb2565b612e97565b905082815260208101848484011115612f2157612f20612e21565b5b612f2c848285612ee3565b509392505050565b600082601f830112612f4957612f48612e1c565b5b8135612f59848260208601612ef2565b91505092915050565b600060208284031215612f7857612f77612c59565b5b600082013567ffffffffffffffff811115612f9657612f95612c5e565b5b612fa284828501612f34565b91505092915050565b600060208284031215612fc157612fc0612c59565b5b6000612fcf84828501612ce2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613012578082015181840152602081019050612ff7565b60008484015250505050565b600061302982612fd8565b6130338185612fe3565b9350613043818560208601612ff4565b61304c81612e26565b840191505092915050565b60006020820190508181036000830152613071818461301e565b905092915050565b600067ffffffffffffffff82111561309457613093612e37565b5b602082029050602081019050919050565b600080fd5b60006130bd6130b884613079565b612e97565b905080838252602082019050602084028301858111156130e0576130df6130a5565b5b835b8181101561310957806130f58882612ce2565b8452602084019350506020810190506130e2565b5050509392505050565b600082601f83011261312857613127612e1c565b5b81356131388482602086016130aa565b91505092915050565b600067ffffffffffffffff82111561315c5761315b612e37565b5b61316582612e26565b9050602081019050919050565b600061318561318084613141565b612e97565b9050828152602081018484840111156131a1576131a0612e21565b5b6131ac848285612ee3565b509392505050565b600082601f8301126131c9576131c8612e1c565b5b81356131d9848260208601613172565b91505092915050565b600080600080608085870312156131fc576131fb612c59565b5b600061320a87828801612cac565b945050602085013567ffffffffffffffff81111561322b5761322a612c5e565b5b61323787828801613113565b935050604085013567ffffffffffffffff81111561325857613257612c5e565b5b61326487828801613113565b925050606085013567ffffffffffffffff81111561328557613284612c5e565b5b613291878288016131b4565b91505092959194509250565b600080600080600060a086880312156132b9576132b8612c59565b5b60006132c788828901612cac565b95505060206132d888828901612cac565b945050604086013567ffffffffffffffff8111156132f9576132f8612c5e565b5b61330588828901613113565b935050606086013567ffffffffffffffff81111561332657613325612c5e565b5b61333288828901613113565b925050608086013567ffffffffffffffff81111561335357613352612c5e565b5b61335f888289016131b4565b9150509295509295909350565b61337581612c83565b82525050565b6000602082019050613390600083018461336c565b92915050565b600067ffffffffffffffff8211156133b1576133b0612e37565b5b602082029050602081019050919050565b60006133d56133d084613396565b612e97565b905080838252602082019050602084028301858111156133f8576133f76130a5565b5b835b81811015613421578061340d8882612cac565b8452602084019350506020810190506133fa565b5050509392505050565b600082601f8301126134405761343f612e1c565b5b81356134508482602086016133c2565b91505092915050565b600080604083850312156134705761346f612c59565b5b600083013567ffffffffffffffff81111561348e5761348d612c5e565b5b61349a8582860161342b565b925050602083013567ffffffffffffffff8111156134bb576134ba612c5e565b5b6134c785828601613113565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61350681612cc1565b82525050565b600061351883836134fd565b60208301905092915050565b6000602082019050919050565b600061353c826134d1565b61354681856134dc565b9350613551836134ed565b8060005b83811015613582578151613569888261350c565b975061357483613524565b925050600181019050613555565b5085935050505092915050565b600060208201905081810360008301526135a98184613531565b905092915050565b600080604083850312156135c8576135c7612c59565b5b60006135d685828601612cac565b925050602083013567ffffffffffffffff8111156135f7576135f6612c5e565b5b613603858286016131b4565b9150509250929050565b6000819050919050565b6136208161360d565b82525050565b600060208201905061363b6000830184613617565b92915050565b6000806000806080858703121561365b5761365a612c59565b5b600061366987828801612cac565b945050602061367a87828801612ce2565b935050604061368b87828801612ce2565b925050606085013567ffffffffffffffff8111156136ac576136ab612c5e565b5b6136b8878288016131b4565b91505092959194509250565b6136cd81612de6565b81146136d857600080fd5b50565b6000813590506136ea816136c4565b92915050565b6000806040838503121561370757613706612c59565b5b600061371585828601612cac565b9250506020613726858286016136db565b9150509250929050565b60006020828403121561374657613745612c59565b5b600061375484828501612cac565b91505092915050565b6000806040838503121561377457613773612c59565b5b600061378285828601612cac565b925050602061379385828601612cac565b9150509250929050565b600080600080600060a086880312156137b9576137b8612c59565b5b60006137c788828901612cac565b95505060206137d888828901612cac565b94505060406137e988828901612ce2565b93505060606137fa88828901612ce2565b925050608086013567ffffffffffffffff81111561381b5761381a612c5e565b5b613827888289016131b4565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061387b57607f821691505b60208210810361388e5761388d613834565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026138f67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826138b9565b61390086836138b9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061393d61393861393384612cc1565b613918565b612cc1565b9050919050565b6000819050919050565b61395783613922565b61396b61396382613944565b8484546138c6565b825550505050565b600090565b613980613973565b61398b81848461394e565b505050565b5b818110156139af576139a4600082613978565b600181019050613991565b5050565b601f8211156139f4576139c581613894565b6139ce846138a9565b810160208510156139dd578190505b6139f16139e9856138a9565b830182613990565b50505b505050565b600082821c905092915050565b6000613a17600019846008026139f9565b1980831691505092915050565b6000613a308383613a06565b9150826002028217905092915050565b613a4982612fd8565b67ffffffffffffffff811115613a6257613a61612e37565b5b613a6c8254613863565b613a778282856139b3565b600060209050601f831160018114613aaa5760008415613a98578287015190505b613aa28582613a24565b865550613b0a565b601f198416613ab886613894565b60005b82811015613ae057848901518255600182019150602085019450602081019050613abb565b86831015613afd5784890151613af9601f891682613a06565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60008154613b2a81613863565b613b348186613b12565b94506001821660008114613b4f5760018114613b6457613b97565b60ff1983168652811515820286019350613b97565b613b6d85613894565b60005b83811015613b8f57815481890152600182019150602081019050613b70565b838801955050505b50505092915050565b6000613bab82612fd8565b613bb58185613b12565b9350613bc5818560208601612ff4565b80840191505092915050565b6000613bdd8285613b1d565b9150613be98284613ba0565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000604082019050613c39600083018561336c565b613c46602083018461336c565b9392505050565b6000604082019050613c626000830185612d37565b613c6f6020830184612d37565b9392505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000613caf613caa613ca584613c76565b613918565b613c80565b9050919050565b613cbf81613c94565b82525050565b6000602082019050613cda6000830184613cb6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b613d188161360d565b8114613d2357600080fd5b50565b600081519050613d3581613d0f565b92915050565b600060208284031215613d5157613d50612c59565b5b6000613d5f84828501613d26565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000613d8f82613d68565b613d998185613d73565b9350613da9818560208601612ff4565b613db281612e26565b840191505092915050565b600060a082019050613dd2600083018861336c565b613ddf602083018761336c565b613dec6040830186612d37565b613df96060830185612d37565b8181036080830152613e0b8184613d84565b90509695505050505050565b600081519050613e2681612d8d565b92915050565b600060208284031215613e4257613e41612c59565b5b6000613e5084828501613e17565b91505092915050565b600060a082019050613e6e600083018861336c565b613e7b602083018761336c565b8181036040830152613e8d8186613531565b90508181036060830152613ea18185613531565b90508181036080830152613eb58184613d84565b90509695505050505050565b600081905092915050565b6000613ed782613d68565b613ee18185613ec1565b9350613ef1818560208601612ff4565b80840191505092915050565b6000613f098284613ecc565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613f4e82612cc1565b9150613f5983612cc1565b9250828201905080821115613f7157613f70613f14565b5b92915050565b6000608082019050613f8c600083018761336c565b613f996020830186612d37565b613fa66040830185612d37565b613fb36060830184612d37565b95945050505050565b60006040820190508181036000830152613fd68185613531565b90508181036020830152613fea8184613531565b9050939250505056fea2646970667358221220a62c7e65c208625313518bc224f67b05089a2f8b1c4983eb7ff76248a42e1b6f64736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67 PUSH2 0x15B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x158 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16C PUSH2 0x175 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD DUP2 PUSH2 0x1A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x4029 PUSH2 0x207 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x147F ADD MSTORE DUP2 DUP2 PUSH2 0x14D4 ADD MSTORE PUSH2 0x168F ADD MSTORE PUSH2 0x4029 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x165 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A9 JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x4DD JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45E JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x2FAA69A8 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x374 JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x275 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x2CF7 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x2DB9 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x2F62 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2FAB JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x329D JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x2FAB JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 PUSH2 0x977 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x358F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x35B1 JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x2FAB JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C6 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x3626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F1 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41C PUSH2 0xB1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x445 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0xB31 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45C PUSH2 0xBFB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x473 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST PUSH2 0xC45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C7 PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x3057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x2FAB JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x541 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x3730 JUMP JUMPDEST PUSH2 0xCBF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x375D JUMP JUMPDEST PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x379D JUMP JUMPDEST PUSH2 0xF20 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x3730 JUMP JUMPDEST PUSH2 0xFC8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5DD PUSH2 0x104E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x706 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x716 JUMPI POP PUSH2 0x715 DUP3 PUSH2 0x1076 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x725 PUSH2 0x10E0 JUMP JUMPDEST DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x734 SWAP2 SWAP1 PUSH2 0x3A40 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH2 0x745 DUP4 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x756 SWAP3 SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x777 PUSH2 0x1235 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x889 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7BE JUMPI PUSH2 0x7BD PUSH2 0x3BF5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x87C JUMPI DUP5 PUSH1 0x0 DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x827 JUMPI PUSH2 0x826 PUSH2 0x3BF5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x787 JUMP JUMPDEST POP PUSH2 0x896 DUP5 DUP5 DUP5 DUP5 PUSH2 0x125D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8EB JUMPI POP PUSH2 0x8E9 DUP7 DUP3 PUSH2 0xE7E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x92F JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x926 SWAP3 SWAP2 SWAP1 PUSH2 0x3C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93C DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x12EB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x97F PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0x987 PUSH2 0x13E3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x9D5 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP3 SWAP2 SWAP1 PUSH2 0x3C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9F2 JUMPI PUSH2 0x9F1 PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA20 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA87 JUMPI PUSH2 0xA5D PUSH2 0xA45 DUP3 DUP8 PUSH2 0x1455 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA58 DUP4 DUP8 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA70 JUMPI PUSH2 0xA6F PUSH2 0x3BF5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xA26 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9A PUSH2 0x147D JUMP JUMPDEST PUSH2 0xAA3 DUP3 PUSH2 0x1563 JUMP JUMPDEST PUSH2 0xAAD DUP3 DUP3 PUSH2 0x156E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xABD DUP4 PUSH2 0xC94 JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACF PUSH2 0x168D JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB03 PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB25 PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0xB2F PUSH1 0x0 PUSH2 0x173C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE9 JUMPI DUP4 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBF5 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1813 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC03 PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0xC0B PUSH2 0x18AC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC18 PUSH2 0x191E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xC50 PUSH2 0x12E3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1946 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC9F PUSH2 0x1235 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC9 PUSH2 0x1AC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD17 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD4C JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xD5A JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xD91 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xDF9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0xE02 DUP7 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0xE0A PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0xE12 PUSH2 0x1B0B JUMP JUMPDEST PUSH2 0xE1A PUSH2 0x1B15 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x3CC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE89 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2A PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI POP PUSH2 0xF6D DUP7 DUP3 PUSH2 0xE7E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xFB3 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP3 SWAP2 SWAP1 PUSH2 0x3C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC0 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1B1F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFD0 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1042 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1039 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x104B DUP2 PUSH2 0x173C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4500 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E8 PUSH2 0x12E3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1106 PUSH2 0xC0D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1165 JUMPI PUSH2 0x1129 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115C SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1176 DUP5 PUSH2 0x1C2A JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1195 JUMPI PUSH2 0x1194 PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11C7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x122A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x121E JUMPI PUSH2 0x121D PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x11D5 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4A593662EE04D27B6A00EBB31BE7FE0C102C2ADE82A7C5D764F2DF05DC4E2800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12CF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C6 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12DD PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1D7D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x135D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1354 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13CF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C6 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13DC DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1D7D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13EB PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F5 PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x143D PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144A SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x152A JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1511 PUSH2 0x1E6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1561 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x156B PUSH2 0x10E0 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15D6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15D3 SWAP2 SWAP1 PUSH2 0x3D3B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1617 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160E SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x167E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1675 SWAP2 SWAP1 PUSH2 0x3626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1688 DUP4 DUP4 PUSH2 0x1EC6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1712 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1746 PUSH2 0x191E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1885 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187C SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1892 DUP6 DUP6 PUSH2 0x1F39 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x18A4 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1D7D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18B4 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BE PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1906 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1913 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1950 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19C4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BB SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1AB7 SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1AD0 PUSH2 0x1FAA JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1AE1 PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x1AEA DUP2 PUSH2 0x2015 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AF5 PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x1AFE DUP2 PUSH2 0x2029 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B09 PUSH2 0x1FD5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1B13 PUSH2 0x1FD5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1B1D PUSH2 0x1FD5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B91 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B88 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C03 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BFA SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C10 DUP6 DUP6 PUSH2 0x1F39 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1C21 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1D7D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1C88 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1C7E JUMPI PUSH2 0x1C7D PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1CC5 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1CBB JUMPI PUSH2 0x1CBA PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1CF4 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1CEA JUMPI PUSH2 0x1CE9 PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1D1D JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1D13 JUMPI PUSH2 0x1D12 PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1D42 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1D38 JUMPI PUSH2 0x1D37 PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1D65 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1D5B JUMPI PUSH2 0x1D5A PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1D74 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D89 DUP6 DUP6 DUP6 DUP6 PUSH2 0x20AF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E28 JUMPI PUSH1 0x0 PUSH2 0x1DC7 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1E17 JUMPI PUSH1 0x0 PUSH2 0x1DE8 PUSH1 0x0 DUP7 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E00 PUSH1 0x0 DUP7 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1E10 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x20C1 JUMP JUMPDEST POP POP PUSH2 0x1E26 JUMP JUMPDEST PUSH2 0x1E25 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2275 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E37 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x1E6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2429 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1ECF DUP3 PUSH2 0x2433 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1F2C JUMPI PUSH2 0x1F26 DUP3 DUP3 PUSH2 0x2500 JUMP JUMPDEST POP PUSH2 0x1F35 JUMP JUMPDEST PUSH2 0x1F34 PUSH2 0x2584 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F71 PUSH2 0xAF8 JUMP JUMPDEST ISZERO PUSH2 0x1FA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FDD PUSH2 0x25C1 JUMP JUMPDEST PUSH2 0x2013 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x201D PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x2026 DUP2 PUSH2 0x25E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2031 PUSH2 0x1FD5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x209A SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20AC DUP2 PUSH2 0x173C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x20BB DUP5 DUP5 DUP5 DUP5 PUSH2 0x2603 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x226D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2122 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DBD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x215E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x215B SWAP2 SWAP1 PUSH2 0x3E2C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x21E2 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x218E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x21DA JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D1 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x226B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2262 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2421 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E59 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2312 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x230F SWAP2 SWAP1 PUSH2 0x3E2C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2396 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2342 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x238E JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2385 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x241F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2416 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x248F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2486 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x24BC PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2429 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x252A SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2565 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x256A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x257A DUP6 DUP4 DUP4 PUSH2 0x27A3 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x25BF JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25CB PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25EB PUSH2 0x104E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x25FE SWAP2 SWAP1 PUSH2 0x3A40 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260D PUSH2 0x1235 JUMP JUMPDEST SWAP1 POP PUSH2 0x261B DUP6 DUP6 DUP6 DUP6 PUSH2 0x2832 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26E9 JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x26CB JUMPI PUSH1 0x0 PUSH2 0x2671 DUP3 DUP7 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x268D DUP6 DUP11 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26AA SWAP2 SWAP1 PUSH2 0x3F43 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH2 0x26BD SWAP2 SWAP1 PUSH2 0x3F43 JUMP JUMPDEST SWAP3 POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2653 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26E0 SWAP2 SWAP1 PUSH2 0x3F43 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x279C JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2787 JUMPI PUSH1 0x0 PUSH2 0x273F DUP3 DUP7 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x275B DUP6 DUP11 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 ADD SWAP3 POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2721 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x27B8 JUMPI PUSH2 0x27B3 DUP3 PUSH2 0x284C JUMP JUMPDEST PUSH2 0x282A JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x27E0 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2822 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2819 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x282B JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x283A PUSH2 0x1F69 JUMP JUMPDEST PUSH2 0x2846 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2891 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x285F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x289B PUSH2 0x104E JUMP JUMPDEST SWAP1 POP DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x28E7 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28DE SWAP3 SWAP2 SWAP1 PUSH2 0x3C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x28F1 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2B09 JUMPI PUSH1 0x0 PUSH2 0x2914 DUP3 DUP8 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x292B DUP4 DUP8 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2A5E JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2A03 JUMPI DUP10 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29FA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP7 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AFC JUMPI DUP1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2AF4 SWAP2 SWAP1 PUSH2 0x3F43 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x28F6 JUMP JUMPDEST POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x2BC8 JUMPI PUSH1 0x0 PUSH2 0x2B29 PUSH1 0x0 DUP7 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B41 PUSH1 0x0 DUP7 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2BB9 SWAP3 SWAP2 SWAP1 PUSH2 0x3C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x2C47 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2C3E SWAP3 SWAP2 SWAP1 PUSH2 0x3FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8E DUP3 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C9E DUP2 PUSH2 0x2C83 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CBB DUP2 PUSH2 0x2C95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD4 DUP2 PUSH2 0x2CC1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CF1 DUP2 PUSH2 0x2CCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D0E JUMPI PUSH2 0x2D0D PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D1C DUP6 DUP3 DUP7 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D2D DUP6 DUP3 DUP7 ADD PUSH2 0x2CE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D40 DUP2 PUSH2 0x2CC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D96 DUP2 PUSH2 0x2D61 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2DB3 DUP2 PUSH2 0x2D8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DCF JUMPI PUSH2 0x2DCE PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DDD DUP5 DUP3 DUP6 ADD PUSH2 0x2DA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DFB DUP2 PUSH2 0x2DE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E16 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2E6F DUP3 PUSH2 0x2E26 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2E8E JUMPI PUSH2 0x2E8D PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EA1 PUSH2 0x2C4F JUMP JUMPDEST SWAP1 POP PUSH2 0x2EAD DUP3 DUP3 PUSH2 0x2E66 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2ECD JUMPI PUSH2 0x2ECC PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH2 0x2ED6 DUP3 PUSH2 0x2E26 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F05 PUSH2 0x2F00 DUP5 PUSH2 0x2EB2 JUMP JUMPDEST PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2F21 JUMPI PUSH2 0x2F20 PUSH2 0x2E21 JUMP JUMPDEST JUMPDEST PUSH2 0x2F2C DUP5 DUP3 DUP6 PUSH2 0x2EE3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F49 JUMPI PUSH2 0x2F48 PUSH2 0x2E1C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2F59 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2EF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F78 JUMPI PUSH2 0x2F77 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F96 JUMPI PUSH2 0x2F95 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x2FA2 DUP5 DUP3 DUP6 ADD PUSH2 0x2F34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FC1 JUMPI PUSH2 0x2FC0 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FCF DUP5 DUP3 DUP6 ADD PUSH2 0x2CE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3012 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FF7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3029 DUP3 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x3033 DUP2 DUP6 PUSH2 0x2FE3 JUMP JUMPDEST SWAP4 POP PUSH2 0x3043 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF4 JUMP JUMPDEST PUSH2 0x304C DUP2 PUSH2 0x2E26 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3071 DUP2 DUP5 PUSH2 0x301E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3094 JUMPI PUSH2 0x3093 PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30BD PUSH2 0x30B8 DUP5 PUSH2 0x3079 JUMP JUMPDEST PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x30E0 JUMPI PUSH2 0x30DF PUSH2 0x30A5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3109 JUMPI DUP1 PUSH2 0x30F5 DUP9 DUP3 PUSH2 0x2CE2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x30E2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3128 JUMPI PUSH2 0x3127 PUSH2 0x2E1C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3138 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x30AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x315C JUMPI PUSH2 0x315B PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH2 0x3165 DUP3 PUSH2 0x2E26 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3185 PUSH2 0x3180 DUP5 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x31A1 JUMPI PUSH2 0x31A0 PUSH2 0x2E21 JUMP JUMPDEST JUMPDEST PUSH2 0x31AC DUP5 DUP3 DUP6 PUSH2 0x2EE3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31C9 JUMPI PUSH2 0x31C8 PUSH2 0x2E1C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x31D9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3172 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x31FC JUMPI PUSH2 0x31FB PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x320A DUP8 DUP3 DUP9 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x322B JUMPI PUSH2 0x322A PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3237 DUP8 DUP3 DUP9 ADD PUSH2 0x3113 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3258 JUMPI PUSH2 0x3257 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3264 DUP8 DUP3 DUP9 ADD PUSH2 0x3113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3285 JUMPI PUSH2 0x3284 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3291 DUP8 DUP3 DUP9 ADD PUSH2 0x31B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x32B9 JUMPI PUSH2 0x32B8 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32C7 DUP9 DUP3 DUP10 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x32D8 DUP9 DUP3 DUP10 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32F9 JUMPI PUSH2 0x32F8 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3305 DUP9 DUP3 DUP10 ADD PUSH2 0x3113 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3326 JUMPI PUSH2 0x3325 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3332 DUP9 DUP3 DUP10 ADD PUSH2 0x3113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3353 JUMPI PUSH2 0x3352 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x335F DUP9 DUP3 DUP10 ADD PUSH2 0x31B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x3375 DUP2 PUSH2 0x2C83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3390 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x336C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x33B1 JUMPI PUSH2 0x33B0 PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D5 PUSH2 0x33D0 DUP5 PUSH2 0x3396 JUMP JUMPDEST PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x33F8 JUMPI PUSH2 0x33F7 PUSH2 0x30A5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3421 JUMPI DUP1 PUSH2 0x340D DUP9 DUP3 PUSH2 0x2CAC JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x33FA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3440 JUMPI PUSH2 0x343F PUSH2 0x2E1C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3450 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x33C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3470 JUMPI PUSH2 0x346F PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x348E JUMPI PUSH2 0x348D PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x349A DUP6 DUP3 DUP7 ADD PUSH2 0x342B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34BB JUMPI PUSH2 0x34BA PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x34C7 DUP6 DUP3 DUP7 ADD PUSH2 0x3113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3506 DUP2 PUSH2 0x2CC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3518 DUP4 DUP4 PUSH2 0x34FD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x353C DUP3 PUSH2 0x34D1 JUMP JUMPDEST PUSH2 0x3546 DUP2 DUP6 PUSH2 0x34DC JUMP JUMPDEST SWAP4 POP PUSH2 0x3551 DUP4 PUSH2 0x34ED JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3582 JUMPI DUP2 MLOAD PUSH2 0x3569 DUP9 DUP3 PUSH2 0x350C JUMP JUMPDEST SWAP8 POP PUSH2 0x3574 DUP4 PUSH2 0x3524 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3555 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35A9 DUP2 DUP5 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35C8 JUMPI PUSH2 0x35C7 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35D6 DUP6 DUP3 DUP7 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35F7 JUMPI PUSH2 0x35F6 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3603 DUP6 DUP3 DUP7 ADD PUSH2 0x31B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3620 DUP2 PUSH2 0x360D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x363B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3617 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x365B JUMPI PUSH2 0x365A PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3669 DUP8 DUP3 DUP9 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x367A DUP8 DUP3 DUP9 ADD PUSH2 0x2CE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x368B DUP8 DUP3 DUP9 ADD PUSH2 0x2CE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36AC JUMPI PUSH2 0x36AB PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x36B8 DUP8 DUP3 DUP9 ADD PUSH2 0x31B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x36CD DUP2 PUSH2 0x2DE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x36D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36EA DUP2 PUSH2 0x36C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3707 JUMPI PUSH2 0x3706 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3715 DUP6 DUP3 DUP7 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3726 DUP6 DUP3 DUP7 ADD PUSH2 0x36DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3746 JUMPI PUSH2 0x3745 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3754 DUP5 DUP3 DUP6 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3774 JUMPI PUSH2 0x3773 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3782 DUP6 DUP3 DUP7 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3793 DUP6 DUP3 DUP7 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x37B9 JUMPI PUSH2 0x37B8 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37C7 DUP9 DUP3 DUP10 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x37D8 DUP9 DUP3 DUP10 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x37E9 DUP9 DUP3 DUP10 ADD PUSH2 0x2CE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x37FA DUP9 DUP3 DUP10 ADD PUSH2 0x2CE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x381B JUMPI PUSH2 0x381A PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3827 DUP9 DUP3 DUP10 ADD PUSH2 0x31B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x387B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x388E JUMPI PUSH2 0x388D PUSH2 0x3834 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x38F6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x38B9 JUMP JUMPDEST PUSH2 0x3900 DUP7 DUP4 PUSH2 0x38B9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x393D PUSH2 0x3938 PUSH2 0x3933 DUP5 PUSH2 0x2CC1 JUMP JUMPDEST PUSH2 0x3918 JUMP JUMPDEST PUSH2 0x2CC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3957 DUP4 PUSH2 0x3922 JUMP JUMPDEST PUSH2 0x396B PUSH2 0x3963 DUP3 PUSH2 0x3944 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x38C6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3980 PUSH2 0x3973 JUMP JUMPDEST PUSH2 0x398B DUP2 DUP5 DUP5 PUSH2 0x394E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39AF JUMPI PUSH2 0x39A4 PUSH1 0x0 DUP3 PUSH2 0x3978 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3991 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x39F4 JUMPI PUSH2 0x39C5 DUP2 PUSH2 0x3894 JUMP JUMPDEST PUSH2 0x39CE DUP5 PUSH2 0x38A9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x39DD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x39F1 PUSH2 0x39E9 DUP6 PUSH2 0x38A9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3990 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A17 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x39F9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A30 DUP4 DUP4 PUSH2 0x3A06 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A49 DUP3 PUSH2 0x2FD8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A62 JUMPI PUSH2 0x3A61 PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH2 0x3A6C DUP3 SLOAD PUSH2 0x3863 JUMP JUMPDEST PUSH2 0x3A77 DUP3 DUP3 DUP6 PUSH2 0x39B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3AAA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3A98 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3AA2 DUP6 DUP3 PUSH2 0x3A24 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3B0A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3AB8 DUP7 PUSH2 0x3894 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3AE0 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3ABB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3AFD JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3AF9 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3A06 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3B2A DUP2 PUSH2 0x3863 JUMP JUMPDEST PUSH2 0x3B34 DUP2 DUP7 PUSH2 0x3B12 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3B4F JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3B64 JUMPI PUSH2 0x3B97 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x3B97 JUMP JUMPDEST PUSH2 0x3B6D DUP6 PUSH2 0x3894 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B8F JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B70 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BAB DUP3 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x3BB5 DUP2 DUP6 PUSH2 0x3B12 JUMP JUMPDEST SWAP4 POP PUSH2 0x3BC5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BDD DUP3 DUP6 PUSH2 0x3B1D JUMP JUMPDEST SWAP2 POP PUSH2 0x3BE9 DUP3 DUP5 PUSH2 0x3BA0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C39 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x3C46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x336C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C62 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D37 JUMP JUMPDEST PUSH2 0x3C6F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D37 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CAF PUSH2 0x3CAA PUSH2 0x3CA5 DUP5 PUSH2 0x3C76 JUMP JUMPDEST PUSH2 0x3918 JUMP JUMPDEST PUSH2 0x3C80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CBF DUP2 PUSH2 0x3C94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CDA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3D18 DUP2 PUSH2 0x360D JUMP JUMPDEST DUP2 EQ PUSH2 0x3D23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D35 DUP2 PUSH2 0x3D0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D51 JUMPI PUSH2 0x3D50 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D5F DUP5 DUP3 DUP6 ADD PUSH2 0x3D26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D8F DUP3 PUSH2 0x3D68 JUMP JUMPDEST PUSH2 0x3D99 DUP2 DUP6 PUSH2 0x3D73 JUMP JUMPDEST SWAP4 POP PUSH2 0x3DA9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF4 JUMP JUMPDEST PUSH2 0x3DB2 DUP2 PUSH2 0x2E26 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3DD2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x3DDF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x3DEC PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2D37 JUMP JUMPDEST PUSH2 0x3DF9 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2D37 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3E0B DUP2 DUP5 PUSH2 0x3D84 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E26 DUP2 PUSH2 0x2D8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E42 JUMPI PUSH2 0x3E41 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E50 DUP5 DUP3 DUP6 ADD PUSH2 0x3E17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3E6E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x3E7B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x336C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3E8D DUP2 DUP7 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3EA1 DUP2 DUP6 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3EB5 DUP2 DUP5 PUSH2 0x3D84 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED7 DUP3 PUSH2 0x3D68 JUMP JUMPDEST PUSH2 0x3EE1 DUP2 DUP6 PUSH2 0x3EC1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3EF1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F09 DUP3 DUP5 PUSH2 0x3ECC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F4E DUP3 PUSH2 0x2CC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F59 DUP4 PUSH2 0x2CC1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3F71 JUMPI PUSH2 0x3F70 PUSH2 0x3F14 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F8C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x3F99 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2D37 JUMP JUMPDEST PUSH2 0x3FA6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2D37 JUMP JUMPDEST PUSH2 0x3FB3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2D37 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FD6 DUP2 DUP6 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3FEA DUP2 DUP5 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0x2C PUSH31 0x65C208625313518BC224F67B05089A2F8B1C4983EB7FF76248A42E1B6F6473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"803:2301:30:-:0;;;1171:4:2;1128:48;;;;;;;;;1240:53:30;;;;;;;;;;1264:22;:20;;;:22;;:::i;:::-;803:2301;;7709:422:1;7824:30;7857:26;:24;;;:26;;:::i;:::-;7824:59;;7898:1;:15;;;;;;;;;;;;7894:76;;;7936:23;;;;;;;;;;;;;;7894:76;8001:16;7983:34;;:1;:14;;;;;;;;;;;;:34;;;7979:146;;8050:16;8033:1;:14;;;:33;;;;;;;;;;;;;;;;;;8085:29;8097:16;8085:29;;;;;;:::i;:::-;;;;;;;;7979:146;7758:373;7709:422::o;9071:205::-;9129:30;9171:12;9186:27;:25;;;:27;;:::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;8819:122::-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7:101:31:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;803:2301:30:-;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_486":{"entryPoint":3163,"id":486,"parameterSlots":0,"returnSlots":0},"@__ERC1155Pausable_init_1662":{"entryPoint":6913,"id":1662,"parameterSlots":0,"returnSlots":0},"@__ERC1155Supply_init_1738":{"entryPoint":6923,"id":1738,"parameterSlots":0,"returnSlots":0},"@__ERC1155_init_725":{"entryPoint":6873,"id":725,"parameterSlots":1,"returnSlots":0},"@__ERC1155_init_unchained_737":{"entryPoint":8213,"id":737,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":6893,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":8233,"id":81,"parameterSlots":1,"returnSlots":0},"@__UUPSUpgradeable_init_516":{"entryPoint":6933,"id":516,"parameterSlots":0,"returnSlots":0},"@_asSingletonArrays_1640":{"entryPoint":7993,"id":1640,"parameterSlots":2,"returnSlots":2},"@_authorizeUpgrade_9650":{"entryPoint":5475,"id":9650,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":8149,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_2642":{"entryPoint":9604,"id":2642,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_592":{"entryPoint":5773,"id":592,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":4320,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkProxy_576":{"entryPoint":5245,"id":576,"parameterSlots":0,"returnSlots":0},"@_getERC1155Storage_712":{"entryPoint":4174,"id":712,"parameterSlots":0,"returnSlots":1},"@_getERC1155SupplyStorage_1732":{"entryPoint":4661,"id":1732,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_461":{"entryPoint":6853,"id":461,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":6430,"id":25,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_2007":{"entryPoint":5908,"id":2007,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":8106,"id":447,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":9665,"id":438,"parameterSlots":0,"returnSlots":1},"@_mintBatch_1487":{"entryPoint":4701,"id":1487,"parameterSlots":4,"returnSlots":0},"@_mint_1446":{"entryPoint":6163,"id":1446,"parameterSlots":4,"returnSlots":0},"@_msgSender_1963":{"entryPoint":4835,"id":1963,"parameterSlots":0,"returnSlots":1},"@_pause_2116":{"entryPoint":6316,"id":2116,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_2079":{"entryPoint":8041,"id":2079,"parameterSlots":0,"returnSlots":0},"@_requirePaused_2092":{"entryPoint":7727,"id":2092,"parameterSlots":0,"returnSlots":0},"@_revert_3247":{"entryPoint":10316,"id":3247,"parameterSlots":1,"returnSlots":0},"@_safeBatchTransferFrom_1375":{"entryPoint":4843,"id":1375,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_1320":{"entryPoint":6943,"id":1320,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1624":{"entryPoint":6470,"id":1624,"parameterSlots":3,"returnSlots":0},"@_setImplementation_2422":{"entryPoint":9267,"id":2422,"parameterSlots":1,"returnSlots":0},"@_setURI_1394":{"entryPoint":9697,"id":1394,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":5948,"id":193,"parameterSlots":1,"returnSlots":0},"@_unpause_2140":{"entryPoint":5091,"id":2140,"parameterSlots":0,"returnSlots":0},"@_updateWithAcceptanceCheck_1254":{"entryPoint":7549,"id":1254,"parameterSlots":5,"returnSlots":0},"@_update_1174":{"entryPoint":10385,"id":1174,"parameterSlots":4,"returnSlots":0},"@_update_1695":{"entryPoint":10290,"id":1695,"parameterSlots":4,"returnSlots":0},"@_update_1934":{"entryPoint":9731,"id":1934,"parameterSlots":4,"returnSlots":0},"@_update_9677":{"entryPoint":8367,"id":9677,"parameterSlots":4,"returnSlots":0},"@_upgradeToAndCallUUPS_643":{"entryPoint":5486,"id":643,"parameterSlots":2,"returnSlots":0},"@balanceOfBatch_880":{"entryPoint":2441,"id":880,"parameterSlots":2,"returnSlots":1},"@balanceOf_810":{"entryPoint":1490,"id":810,"parameterSlots":2,"returnSlots":1},"@checkOnERC1155BatchReceived_2987":{"entryPoint":8821,"id":2987,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_2913":{"entryPoint":8385,"id":2913,"parameterSlots":6,"returnSlots":0},"@exists_1795":{"entryPoint":2737,"id":1795,"parameterSlots":1,"returnSlots":1},"@firstMinter_9466":{"entryPoint":2372,"id":9466,"parameterSlots":0,"returnSlots":0},"@functionDelegateCall_3165":{"entryPoint":9472,"id":3165,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_4397":{"entryPoint":9257,"id":4397,"parameterSlots":1,"returnSlots":1},"@getImplementation_2395":{"entryPoint":7791,"id":2395,"parameterSlots":0,"returnSlots":1},"@initialize_9502":{"entryPoint":3263,"id":9502,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_920":{"entryPoint":3710,"id":920,"parameterSlots":2,"returnSlots":1},"@log10_7353":{"entryPoint":7210,"id":7353,"parameterSlots":1,"returnSlots":1},"@mintBatch_9641":{"entryPoint":1924,"id":9641,"parameterSlots":4,"returnSlots":0},"@mint_9587":{"entryPoint":2865,"id":9587,"parameterSlots":4,"returnSlots":0},"@owner_105":{"entryPoint":3085,"id":105,"parameterSlots":0,"returnSlots":1},"@pause_9543":{"entryPoint":3067,"id":9543,"parameterSlots":0,"returnSlots":0},"@paused_2067":{"entryPoint":2808,"id":2067,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_534":{"entryPoint":2757,"id":534,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_136":{"entryPoint":2845,"id":136,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_1010":{"entryPoint":2204,"id":1010,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_964":{"entryPoint":3872,"id":964,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_896":{"entryPoint":3141,"id":896,"parameterSlots":2,"returnSlots":0},"@setURI_9534":{"entryPoint":1821,"id":9534,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2180":{"entryPoint":4214,"id":2180,"parameterSlots":1,"returnSlots":1},"@supportsInterface_768":{"entryPoint":1595,"id":768,"parameterSlots":1,"returnSlots":1},"@toString_4600":{"entryPoint":4455,"id":4600,"parameterSlots":1,"returnSlots":1},"@totalSupply_1764":{"entryPoint":3220,"id":1764,"parameterSlots":1,"returnSlots":1},"@totalSupply_1780":{"entryPoint":1900,"id":1780,"parameterSlots":0,"returnSlots":1},"@transferOwnership_164":{"entryPoint":4040,"id":164,"parameterSlots":1,"returnSlots":0},"@unpause_9552":{"entryPoint":2423,"id":9552,"parameterSlots":0,"returnSlots":0},"@unsafeMemoryAccess_4066":{"entryPoint":5205,"id":4066,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_4092":{"entryPoint":5225,"id":4092,"parameterSlots":2,"returnSlots":1},"@upgradeToAndCall_2458":{"entryPoint":7878,"id":2458,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_554":{"entryPoint":2706,"id":554,"parameterSlots":2,"returnSlots":0},"@uri_9522":{"entryPoint":1848,"id":9522,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_3205":{"entryPoint":10147,"id":3205,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":13250,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12458,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":12658,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":12018,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":11436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":13355,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":14043,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":15654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":11684,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":15895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":12724,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":12084,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":11490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":14128,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":14173,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":12957,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":14237,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":12770,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":14064,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":13745,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":11511,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":13889,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13401,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":15675,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":11705,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":15916,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":12130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":12203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":13580,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":13164,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":11762,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":13847,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":15748,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16076,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":15542,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":12318,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":13565,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11575,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15313,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":13179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":15396,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15961,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15805,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16247,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13711,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":16316,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11777,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":13862,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":15557,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12375,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15437,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":11927,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":11343,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":13206,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12409,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":12609,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":11954,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13549,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":14484,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13521,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":15720,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12248,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13604,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13532,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":15731,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16065,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12259,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15122,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":16195,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":14771,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":11395,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":11750,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":13837,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":11617,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":15478,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":11363,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":11457,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":15488,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":14736,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":15508,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":14626,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":14912,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":12003,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":12276,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":14505,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":14435,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":14884,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":11878,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":14616,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":14854,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":16148,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":15584,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":14388,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15349,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11831,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":14660,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":11804,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":12453,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":11809,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":11358,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":11353,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":11814,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":14521,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":14841,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":14712,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":14534,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":14670,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":11413,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":14020,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":15631,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":11661,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":11467,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":14707,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:37017:31","nodeType":"YulBlock","src":"0:37017:31","statements":[{"body":{"nativeSrc":"47:35:31","nodeType":"YulBlock","src":"47:35:31","statements":[{"nativeSrc":"57:19:31","nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:31","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:31","nodeType":"YulIdentifier","src":"67:5:31"},"nativeSrc":"67:9:31","nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:31","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:31","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nativeSrc":"177:28:31","nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:31","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:31","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:31","nodeType":"YulIdentifier","src":"187:6:31"},"nativeSrc":"187:12:31","nodeType":"YulFunctionCall","src":"187:12:31"},"nativeSrc":"187:12:31","nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:31","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nativeSrc":"300:28:31","nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:31","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:31","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:31","nodeType":"YulIdentifier","src":"310:6:31"},"nativeSrc":"310:12:31","nodeType":"YulFunctionCall","src":"310:12:31"},"nativeSrc":"310:12:31","nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:31","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nativeSrc":"379:81:31","nodeType":"YulBlock","src":"379:81:31","statements":[{"nativeSrc":"389:65:31","nodeType":"YulAssignment","src":"389:65:31","value":{"arguments":[{"name":"value","nativeSrc":"404:5:31","nodeType":"YulIdentifier","src":"404:5:31"},{"kind":"number","nativeSrc":"411:42:31","nodeType":"YulLiteral","src":"411:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:31","nodeType":"YulIdentifier","src":"400:3:31"},"nativeSrc":"400:54:31","nodeType":"YulFunctionCall","src":"400:54:31"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:31","nodeType":"YulIdentifier","src":"389:7:31"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:31","nodeType":"YulTypedName","src":"361:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:31","nodeType":"YulTypedName","src":"371:7:31","type":""}],"src":"334:126:31"},{"body":{"nativeSrc":"511:51:31","nodeType":"YulBlock","src":"511:51:31","statements":[{"nativeSrc":"521:35:31","nodeType":"YulAssignment","src":"521:35:31","value":{"arguments":[{"name":"value","nativeSrc":"550:5:31","nodeType":"YulIdentifier","src":"550:5:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:31","nodeType":"YulIdentifier","src":"532:17:31"},"nativeSrc":"532:24:31","nodeType":"YulFunctionCall","src":"532:24:31"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:31","nodeType":"YulIdentifier","src":"521:7:31"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:31","nodeType":"YulTypedName","src":"493:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:31","nodeType":"YulTypedName","src":"503:7:31","type":""}],"src":"466:96:31"},{"body":{"nativeSrc":"611:79:31","nodeType":"YulBlock","src":"611:79:31","statements":[{"body":{"nativeSrc":"668:16:31","nodeType":"YulBlock","src":"668:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:31","nodeType":"YulLiteral","src":"677:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:31","nodeType":"YulLiteral","src":"680:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:31","nodeType":"YulIdentifier","src":"670:6:31"},"nativeSrc":"670:12:31","nodeType":"YulFunctionCall","src":"670:12:31"},"nativeSrc":"670:12:31","nodeType":"YulExpressionStatement","src":"670:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:31","nodeType":"YulIdentifier","src":"634:5:31"},{"arguments":[{"name":"value","nativeSrc":"659:5:31","nodeType":"YulIdentifier","src":"659:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:31","nodeType":"YulIdentifier","src":"641:17:31"},"nativeSrc":"641:24:31","nodeType":"YulFunctionCall","src":"641:24:31"}],"functionName":{"name":"eq","nativeSrc":"631:2:31","nodeType":"YulIdentifier","src":"631:2:31"},"nativeSrc":"631:35:31","nodeType":"YulFunctionCall","src":"631:35:31"}],"functionName":{"name":"iszero","nativeSrc":"624:6:31","nodeType":"YulIdentifier","src":"624:6:31"},"nativeSrc":"624:43:31","nodeType":"YulFunctionCall","src":"624:43:31"},"nativeSrc":"621:63:31","nodeType":"YulIf","src":"621:63:31"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:31","nodeType":"YulTypedName","src":"604:5:31","type":""}],"src":"568:122:31"},{"body":{"nativeSrc":"748:87:31","nodeType":"YulBlock","src":"748:87:31","statements":[{"nativeSrc":"758:29:31","nodeType":"YulAssignment","src":"758:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:31","nodeType":"YulIdentifier","src":"780:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:31","nodeType":"YulIdentifier","src":"767:12:31"},"nativeSrc":"767:20:31","nodeType":"YulFunctionCall","src":"767:20:31"},"variableNames":[{"name":"value","nativeSrc":"758:5:31","nodeType":"YulIdentifier","src":"758:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:31","nodeType":"YulIdentifier","src":"823:5:31"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:31","nodeType":"YulIdentifier","src":"796:26:31"},"nativeSrc":"796:33:31","nodeType":"YulFunctionCall","src":"796:33:31"},"nativeSrc":"796:33:31","nodeType":"YulExpressionStatement","src":"796:33:31"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:31","nodeType":"YulTypedName","src":"726:6:31","type":""},{"name":"end","nativeSrc":"734:3:31","nodeType":"YulTypedName","src":"734:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:31","nodeType":"YulTypedName","src":"742:5:31","type":""}],"src":"696:139:31"},{"body":{"nativeSrc":"886:32:31","nodeType":"YulBlock","src":"886:32:31","statements":[{"nativeSrc":"896:16:31","nodeType":"YulAssignment","src":"896:16:31","value":{"name":"value","nativeSrc":"907:5:31","nodeType":"YulIdentifier","src":"907:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"896:7:31","nodeType":"YulIdentifier","src":"896:7:31"}]}]},"name":"cleanup_t_uint256","nativeSrc":"841:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"868:5:31","nodeType":"YulTypedName","src":"868:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"878:7:31","nodeType":"YulTypedName","src":"878:7:31","type":""}],"src":"841:77:31"},{"body":{"nativeSrc":"967:79:31","nodeType":"YulBlock","src":"967:79:31","statements":[{"body":{"nativeSrc":"1024:16:31","nodeType":"YulBlock","src":"1024:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1033:1:31","nodeType":"YulLiteral","src":"1033:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"1036:1:31","nodeType":"YulLiteral","src":"1036:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1026:6:31","nodeType":"YulIdentifier","src":"1026:6:31"},"nativeSrc":"1026:12:31","nodeType":"YulFunctionCall","src":"1026:12:31"},"nativeSrc":"1026:12:31","nodeType":"YulExpressionStatement","src":"1026:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"990:5:31","nodeType":"YulIdentifier","src":"990:5:31"},{"arguments":[{"name":"value","nativeSrc":"1015:5:31","nodeType":"YulIdentifier","src":"1015:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"997:17:31","nodeType":"YulIdentifier","src":"997:17:31"},"nativeSrc":"997:24:31","nodeType":"YulFunctionCall","src":"997:24:31"}],"functionName":{"name":"eq","nativeSrc":"987:2:31","nodeType":"YulIdentifier","src":"987:2:31"},"nativeSrc":"987:35:31","nodeType":"YulFunctionCall","src":"987:35:31"}],"functionName":{"name":"iszero","nativeSrc":"980:6:31","nodeType":"YulIdentifier","src":"980:6:31"},"nativeSrc":"980:43:31","nodeType":"YulFunctionCall","src":"980:43:31"},"nativeSrc":"977:63:31","nodeType":"YulIf","src":"977:63:31"}]},"name":"validator_revert_t_uint256","nativeSrc":"924:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"960:5:31","nodeType":"YulTypedName","src":"960:5:31","type":""}],"src":"924:122:31"},{"body":{"nativeSrc":"1104:87:31","nodeType":"YulBlock","src":"1104:87:31","statements":[{"nativeSrc":"1114:29:31","nodeType":"YulAssignment","src":"1114:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"1136:6:31","nodeType":"YulIdentifier","src":"1136:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"1123:12:31","nodeType":"YulIdentifier","src":"1123:12:31"},"nativeSrc":"1123:20:31","nodeType":"YulFunctionCall","src":"1123:20:31"},"variableNames":[{"name":"value","nativeSrc":"1114:5:31","nodeType":"YulIdentifier","src":"1114:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1179:5:31","nodeType":"YulIdentifier","src":"1179:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1152:26:31","nodeType":"YulIdentifier","src":"1152:26:31"},"nativeSrc":"1152:33:31","nodeType":"YulFunctionCall","src":"1152:33:31"},"nativeSrc":"1152:33:31","nodeType":"YulExpressionStatement","src":"1152:33:31"}]},"name":"abi_decode_t_uint256","nativeSrc":"1052:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:31","nodeType":"YulTypedName","src":"1082:6:31","type":""},{"name":"end","nativeSrc":"1090:3:31","nodeType":"YulTypedName","src":"1090:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1098:5:31","nodeType":"YulTypedName","src":"1098:5:31","type":""}],"src":"1052:139:31"},{"body":{"nativeSrc":"1280:391:31","nodeType":"YulBlock","src":"1280:391:31","statements":[{"body":{"nativeSrc":"1326:83:31","nodeType":"YulBlock","src":"1326:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1328:77:31","nodeType":"YulIdentifier","src":"1328:77:31"},"nativeSrc":"1328:79:31","nodeType":"YulFunctionCall","src":"1328:79:31"},"nativeSrc":"1328:79:31","nodeType":"YulExpressionStatement","src":"1328:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1301:7:31","nodeType":"YulIdentifier","src":"1301:7:31"},{"name":"headStart","nativeSrc":"1310:9:31","nodeType":"YulIdentifier","src":"1310:9:31"}],"functionName":{"name":"sub","nativeSrc":"1297:3:31","nodeType":"YulIdentifier","src":"1297:3:31"},"nativeSrc":"1297:23:31","nodeType":"YulFunctionCall","src":"1297:23:31"},{"kind":"number","nativeSrc":"1322:2:31","nodeType":"YulLiteral","src":"1322:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1293:3:31","nodeType":"YulIdentifier","src":"1293:3:31"},"nativeSrc":"1293:32:31","nodeType":"YulFunctionCall","src":"1293:32:31"},"nativeSrc":"1290:119:31","nodeType":"YulIf","src":"1290:119:31"},{"nativeSrc":"1419:117:31","nodeType":"YulBlock","src":"1419:117:31","statements":[{"nativeSrc":"1434:15:31","nodeType":"YulVariableDeclaration","src":"1434:15:31","value":{"kind":"number","nativeSrc":"1448:1:31","nodeType":"YulLiteral","src":"1448:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1438:6:31","nodeType":"YulTypedName","src":"1438:6:31","type":""}]},{"nativeSrc":"1463:63:31","nodeType":"YulAssignment","src":"1463:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1498:9:31","nodeType":"YulIdentifier","src":"1498:9:31"},{"name":"offset","nativeSrc":"1509:6:31","nodeType":"YulIdentifier","src":"1509:6:31"}],"functionName":{"name":"add","nativeSrc":"1494:3:31","nodeType":"YulIdentifier","src":"1494:3:31"},"nativeSrc":"1494:22:31","nodeType":"YulFunctionCall","src":"1494:22:31"},{"name":"dataEnd","nativeSrc":"1518:7:31","nodeType":"YulIdentifier","src":"1518:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1473:20:31","nodeType":"YulIdentifier","src":"1473:20:31"},"nativeSrc":"1473:53:31","nodeType":"YulFunctionCall","src":"1473:53:31"},"variableNames":[{"name":"value0","nativeSrc":"1463:6:31","nodeType":"YulIdentifier","src":"1463:6:31"}]}]},{"nativeSrc":"1546:118:31","nodeType":"YulBlock","src":"1546:118:31","statements":[{"nativeSrc":"1561:16:31","nodeType":"YulVariableDeclaration","src":"1561:16:31","value":{"kind":"number","nativeSrc":"1575:2:31","nodeType":"YulLiteral","src":"1575:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1565:6:31","nodeType":"YulTypedName","src":"1565:6:31","type":""}]},{"nativeSrc":"1591:63:31","nodeType":"YulAssignment","src":"1591:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1626:9:31","nodeType":"YulIdentifier","src":"1626:9:31"},{"name":"offset","nativeSrc":"1637:6:31","nodeType":"YulIdentifier","src":"1637:6:31"}],"functionName":{"name":"add","nativeSrc":"1622:3:31","nodeType":"YulIdentifier","src":"1622:3:31"},"nativeSrc":"1622:22:31","nodeType":"YulFunctionCall","src":"1622:22:31"},{"name":"dataEnd","nativeSrc":"1646:7:31","nodeType":"YulIdentifier","src":"1646:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1601:20:31","nodeType":"YulIdentifier","src":"1601:20:31"},"nativeSrc":"1601:53:31","nodeType":"YulFunctionCall","src":"1601:53:31"},"variableNames":[{"name":"value1","nativeSrc":"1591:6:31","nodeType":"YulIdentifier","src":"1591:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1197:474:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1242:9:31","nodeType":"YulTypedName","src":"1242:9:31","type":""},{"name":"dataEnd","nativeSrc":"1253:7:31","nodeType":"YulTypedName","src":"1253:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1265:6:31","nodeType":"YulTypedName","src":"1265:6:31","type":""},{"name":"value1","nativeSrc":"1273:6:31","nodeType":"YulTypedName","src":"1273:6:31","type":""}],"src":"1197:474:31"},{"body":{"nativeSrc":"1742:53:31","nodeType":"YulBlock","src":"1742:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1759:3:31","nodeType":"YulIdentifier","src":"1759:3:31"},{"arguments":[{"name":"value","nativeSrc":"1782:5:31","nodeType":"YulIdentifier","src":"1782:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1764:17:31","nodeType":"YulIdentifier","src":"1764:17:31"},"nativeSrc":"1764:24:31","nodeType":"YulFunctionCall","src":"1764:24:31"}],"functionName":{"name":"mstore","nativeSrc":"1752:6:31","nodeType":"YulIdentifier","src":"1752:6:31"},"nativeSrc":"1752:37:31","nodeType":"YulFunctionCall","src":"1752:37:31"},"nativeSrc":"1752:37:31","nodeType":"YulExpressionStatement","src":"1752:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1677:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1730:5:31","nodeType":"YulTypedName","src":"1730:5:31","type":""},{"name":"pos","nativeSrc":"1737:3:31","nodeType":"YulTypedName","src":"1737:3:31","type":""}],"src":"1677:118:31"},{"body":{"nativeSrc":"1899:124:31","nodeType":"YulBlock","src":"1899:124:31","statements":[{"nativeSrc":"1909:26:31","nodeType":"YulAssignment","src":"1909:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"1921:9:31","nodeType":"YulIdentifier","src":"1921:9:31"},{"kind":"number","nativeSrc":"1932:2:31","nodeType":"YulLiteral","src":"1932:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1917:3:31","nodeType":"YulIdentifier","src":"1917:3:31"},"nativeSrc":"1917:18:31","nodeType":"YulFunctionCall","src":"1917:18:31"},"variableNames":[{"name":"tail","nativeSrc":"1909:4:31","nodeType":"YulIdentifier","src":"1909:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1989:6:31","nodeType":"YulIdentifier","src":"1989:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"2002:9:31","nodeType":"YulIdentifier","src":"2002:9:31"},{"kind":"number","nativeSrc":"2013:1:31","nodeType":"YulLiteral","src":"2013:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1998:3:31","nodeType":"YulIdentifier","src":"1998:3:31"},"nativeSrc":"1998:17:31","nodeType":"YulFunctionCall","src":"1998:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1945:43:31","nodeType":"YulIdentifier","src":"1945:43:31"},"nativeSrc":"1945:71:31","nodeType":"YulFunctionCall","src":"1945:71:31"},"nativeSrc":"1945:71:31","nodeType":"YulExpressionStatement","src":"1945:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1801:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1871:9:31","nodeType":"YulTypedName","src":"1871:9:31","type":""},{"name":"value0","nativeSrc":"1883:6:31","nodeType":"YulTypedName","src":"1883:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1894:4:31","nodeType":"YulTypedName","src":"1894:4:31","type":""}],"src":"1801:222:31"},{"body":{"nativeSrc":"2073:105:31","nodeType":"YulBlock","src":"2073:105:31","statements":[{"nativeSrc":"2083:89:31","nodeType":"YulAssignment","src":"2083:89:31","value":{"arguments":[{"name":"value","nativeSrc":"2098:5:31","nodeType":"YulIdentifier","src":"2098:5:31"},{"kind":"number","nativeSrc":"2105:66:31","nodeType":"YulLiteral","src":"2105:66:31","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"2094:3:31","nodeType":"YulIdentifier","src":"2094:3:31"},"nativeSrc":"2094:78:31","nodeType":"YulFunctionCall","src":"2094:78:31"},"variableNames":[{"name":"cleaned","nativeSrc":"2083:7:31","nodeType":"YulIdentifier","src":"2083:7:31"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"2029:149:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2055:5:31","nodeType":"YulTypedName","src":"2055:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2065:7:31","nodeType":"YulTypedName","src":"2065:7:31","type":""}],"src":"2029:149:31"},{"body":{"nativeSrc":"2226:78:31","nodeType":"YulBlock","src":"2226:78:31","statements":[{"body":{"nativeSrc":"2282:16:31","nodeType":"YulBlock","src":"2282:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2291:1:31","nodeType":"YulLiteral","src":"2291:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"2294:1:31","nodeType":"YulLiteral","src":"2294:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2284:6:31","nodeType":"YulIdentifier","src":"2284:6:31"},"nativeSrc":"2284:12:31","nodeType":"YulFunctionCall","src":"2284:12:31"},"nativeSrc":"2284:12:31","nodeType":"YulExpressionStatement","src":"2284:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2249:5:31","nodeType":"YulIdentifier","src":"2249:5:31"},{"arguments":[{"name":"value","nativeSrc":"2273:5:31","nodeType":"YulIdentifier","src":"2273:5:31"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"2256:16:31","nodeType":"YulIdentifier","src":"2256:16:31"},"nativeSrc":"2256:23:31","nodeType":"YulFunctionCall","src":"2256:23:31"}],"functionName":{"name":"eq","nativeSrc":"2246:2:31","nodeType":"YulIdentifier","src":"2246:2:31"},"nativeSrc":"2246:34:31","nodeType":"YulFunctionCall","src":"2246:34:31"}],"functionName":{"name":"iszero","nativeSrc":"2239:6:31","nodeType":"YulIdentifier","src":"2239:6:31"},"nativeSrc":"2239:42:31","nodeType":"YulFunctionCall","src":"2239:42:31"},"nativeSrc":"2236:62:31","nodeType":"YulIf","src":"2236:62:31"}]},"name":"validator_revert_t_bytes4","nativeSrc":"2184:120:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2219:5:31","nodeType":"YulTypedName","src":"2219:5:31","type":""}],"src":"2184:120:31"},{"body":{"nativeSrc":"2361:86:31","nodeType":"YulBlock","src":"2361:86:31","statements":[{"nativeSrc":"2371:29:31","nodeType":"YulAssignment","src":"2371:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"2393:6:31","nodeType":"YulIdentifier","src":"2393:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"2380:12:31","nodeType":"YulIdentifier","src":"2380:12:31"},"nativeSrc":"2380:20:31","nodeType":"YulFunctionCall","src":"2380:20:31"},"variableNames":[{"name":"value","nativeSrc":"2371:5:31","nodeType":"YulIdentifier","src":"2371:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2435:5:31","nodeType":"YulIdentifier","src":"2435:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"2409:25:31","nodeType":"YulIdentifier","src":"2409:25:31"},"nativeSrc":"2409:32:31","nodeType":"YulFunctionCall","src":"2409:32:31"},"nativeSrc":"2409:32:31","nodeType":"YulExpressionStatement","src":"2409:32:31"}]},"name":"abi_decode_t_bytes4","nativeSrc":"2310:137:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2339:6:31","nodeType":"YulTypedName","src":"2339:6:31","type":""},{"name":"end","nativeSrc":"2347:3:31","nodeType":"YulTypedName","src":"2347:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2355:5:31","nodeType":"YulTypedName","src":"2355:5:31","type":""}],"src":"2310:137:31"},{"body":{"nativeSrc":"2518:262:31","nodeType":"YulBlock","src":"2518:262:31","statements":[{"body":{"nativeSrc":"2564:83:31","nodeType":"YulBlock","src":"2564:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2566:77:31","nodeType":"YulIdentifier","src":"2566:77:31"},"nativeSrc":"2566:79:31","nodeType":"YulFunctionCall","src":"2566:79:31"},"nativeSrc":"2566:79:31","nodeType":"YulExpressionStatement","src":"2566:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2539:7:31","nodeType":"YulIdentifier","src":"2539:7:31"},{"name":"headStart","nativeSrc":"2548:9:31","nodeType":"YulIdentifier","src":"2548:9:31"}],"functionName":{"name":"sub","nativeSrc":"2535:3:31","nodeType":"YulIdentifier","src":"2535:3:31"},"nativeSrc":"2535:23:31","nodeType":"YulFunctionCall","src":"2535:23:31"},{"kind":"number","nativeSrc":"2560:2:31","nodeType":"YulLiteral","src":"2560:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2531:3:31","nodeType":"YulIdentifier","src":"2531:3:31"},"nativeSrc":"2531:32:31","nodeType":"YulFunctionCall","src":"2531:32:31"},"nativeSrc":"2528:119:31","nodeType":"YulIf","src":"2528:119:31"},{"nativeSrc":"2657:116:31","nodeType":"YulBlock","src":"2657:116:31","statements":[{"nativeSrc":"2672:15:31","nodeType":"YulVariableDeclaration","src":"2672:15:31","value":{"kind":"number","nativeSrc":"2686:1:31","nodeType":"YulLiteral","src":"2686:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2676:6:31","nodeType":"YulTypedName","src":"2676:6:31","type":""}]},{"nativeSrc":"2701:62:31","nodeType":"YulAssignment","src":"2701:62:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2735:9:31","nodeType":"YulIdentifier","src":"2735:9:31"},{"name":"offset","nativeSrc":"2746:6:31","nodeType":"YulIdentifier","src":"2746:6:31"}],"functionName":{"name":"add","nativeSrc":"2731:3:31","nodeType":"YulIdentifier","src":"2731:3:31"},"nativeSrc":"2731:22:31","nodeType":"YulFunctionCall","src":"2731:22:31"},{"name":"dataEnd","nativeSrc":"2755:7:31","nodeType":"YulIdentifier","src":"2755:7:31"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"2711:19:31","nodeType":"YulIdentifier","src":"2711:19:31"},"nativeSrc":"2711:52:31","nodeType":"YulFunctionCall","src":"2711:52:31"},"variableNames":[{"name":"value0","nativeSrc":"2701:6:31","nodeType":"YulIdentifier","src":"2701:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"2453:327:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2488:9:31","nodeType":"YulTypedName","src":"2488:9:31","type":""},{"name":"dataEnd","nativeSrc":"2499:7:31","nodeType":"YulTypedName","src":"2499:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2511:6:31","nodeType":"YulTypedName","src":"2511:6:31","type":""}],"src":"2453:327:31"},{"body":{"nativeSrc":"2828:48:31","nodeType":"YulBlock","src":"2828:48:31","statements":[{"nativeSrc":"2838:32:31","nodeType":"YulAssignment","src":"2838:32:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2863:5:31","nodeType":"YulIdentifier","src":"2863:5:31"}],"functionName":{"name":"iszero","nativeSrc":"2856:6:31","nodeType":"YulIdentifier","src":"2856:6:31"},"nativeSrc":"2856:13:31","nodeType":"YulFunctionCall","src":"2856:13:31"}],"functionName":{"name":"iszero","nativeSrc":"2849:6:31","nodeType":"YulIdentifier","src":"2849:6:31"},"nativeSrc":"2849:21:31","nodeType":"YulFunctionCall","src":"2849:21:31"},"variableNames":[{"name":"cleaned","nativeSrc":"2838:7:31","nodeType":"YulIdentifier","src":"2838:7:31"}]}]},"name":"cleanup_t_bool","nativeSrc":"2786:90:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2810:5:31","nodeType":"YulTypedName","src":"2810:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2820:7:31","nodeType":"YulTypedName","src":"2820:7:31","type":""}],"src":"2786:90:31"},{"body":{"nativeSrc":"2941:50:31","nodeType":"YulBlock","src":"2941:50:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2958:3:31","nodeType":"YulIdentifier","src":"2958:3:31"},{"arguments":[{"name":"value","nativeSrc":"2978:5:31","nodeType":"YulIdentifier","src":"2978:5:31"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"2963:14:31","nodeType":"YulIdentifier","src":"2963:14:31"},"nativeSrc":"2963:21:31","nodeType":"YulFunctionCall","src":"2963:21:31"}],"functionName":{"name":"mstore","nativeSrc":"2951:6:31","nodeType":"YulIdentifier","src":"2951:6:31"},"nativeSrc":"2951:34:31","nodeType":"YulFunctionCall","src":"2951:34:31"},"nativeSrc":"2951:34:31","nodeType":"YulExpressionStatement","src":"2951:34:31"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2882:109:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2929:5:31","nodeType":"YulTypedName","src":"2929:5:31","type":""},{"name":"pos","nativeSrc":"2936:3:31","nodeType":"YulTypedName","src":"2936:3:31","type":""}],"src":"2882:109:31"},{"body":{"nativeSrc":"3089:118:31","nodeType":"YulBlock","src":"3089:118:31","statements":[{"nativeSrc":"3099:26:31","nodeType":"YulAssignment","src":"3099:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"3111:9:31","nodeType":"YulIdentifier","src":"3111:9:31"},{"kind":"number","nativeSrc":"3122:2:31","nodeType":"YulLiteral","src":"3122:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3107:3:31","nodeType":"YulIdentifier","src":"3107:3:31"},"nativeSrc":"3107:18:31","nodeType":"YulFunctionCall","src":"3107:18:31"},"variableNames":[{"name":"tail","nativeSrc":"3099:4:31","nodeType":"YulIdentifier","src":"3099:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3173:6:31","nodeType":"YulIdentifier","src":"3173:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"3186:9:31","nodeType":"YulIdentifier","src":"3186:9:31"},{"kind":"number","nativeSrc":"3197:1:31","nodeType":"YulLiteral","src":"3197:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3182:3:31","nodeType":"YulIdentifier","src":"3182:3:31"},"nativeSrc":"3182:17:31","nodeType":"YulFunctionCall","src":"3182:17:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3135:37:31","nodeType":"YulIdentifier","src":"3135:37:31"},"nativeSrc":"3135:65:31","nodeType":"YulFunctionCall","src":"3135:65:31"},"nativeSrc":"3135:65:31","nodeType":"YulExpressionStatement","src":"3135:65:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"2997:210:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3061:9:31","nodeType":"YulTypedName","src":"3061:9:31","type":""},{"name":"value0","nativeSrc":"3073:6:31","nodeType":"YulTypedName","src":"3073:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3084:4:31","nodeType":"YulTypedName","src":"3084:4:31","type":""}],"src":"2997:210:31"},{"body":{"nativeSrc":"3302:28:31","nodeType":"YulBlock","src":"3302:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3319:1:31","nodeType":"YulLiteral","src":"3319:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3322:1:31","nodeType":"YulLiteral","src":"3322:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3312:6:31","nodeType":"YulIdentifier","src":"3312:6:31"},"nativeSrc":"3312:12:31","nodeType":"YulFunctionCall","src":"3312:12:31"},"nativeSrc":"3312:12:31","nodeType":"YulExpressionStatement","src":"3312:12:31"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"3213:117:31","nodeType":"YulFunctionDefinition","src":"3213:117:31"},{"body":{"nativeSrc":"3425:28:31","nodeType":"YulBlock","src":"3425:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3442:1:31","nodeType":"YulLiteral","src":"3442:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3445:1:31","nodeType":"YulLiteral","src":"3445:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3435:6:31","nodeType":"YulIdentifier","src":"3435:6:31"},"nativeSrc":"3435:12:31","nodeType":"YulFunctionCall","src":"3435:12:31"},"nativeSrc":"3435:12:31","nodeType":"YulExpressionStatement","src":"3435:12:31"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"3336:117:31","nodeType":"YulFunctionDefinition","src":"3336:117:31"},{"body":{"nativeSrc":"3507:54:31","nodeType":"YulBlock","src":"3507:54:31","statements":[{"nativeSrc":"3517:38:31","nodeType":"YulAssignment","src":"3517:38:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3535:5:31","nodeType":"YulIdentifier","src":"3535:5:31"},{"kind":"number","nativeSrc":"3542:2:31","nodeType":"YulLiteral","src":"3542:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3531:3:31","nodeType":"YulIdentifier","src":"3531:3:31"},"nativeSrc":"3531:14:31","nodeType":"YulFunctionCall","src":"3531:14:31"},{"arguments":[{"kind":"number","nativeSrc":"3551:2:31","nodeType":"YulLiteral","src":"3551:2:31","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3547:3:31","nodeType":"YulIdentifier","src":"3547:3:31"},"nativeSrc":"3547:7:31","nodeType":"YulFunctionCall","src":"3547:7:31"}],"functionName":{"name":"and","nativeSrc":"3527:3:31","nodeType":"YulIdentifier","src":"3527:3:31"},"nativeSrc":"3527:28:31","nodeType":"YulFunctionCall","src":"3527:28:31"},"variableNames":[{"name":"result","nativeSrc":"3517:6:31","nodeType":"YulIdentifier","src":"3517:6:31"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"3459:102:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3490:5:31","nodeType":"YulTypedName","src":"3490:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3500:6:31","nodeType":"YulTypedName","src":"3500:6:31","type":""}],"src":"3459:102:31"},{"body":{"nativeSrc":"3595:152:31","nodeType":"YulBlock","src":"3595:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3612:1:31","nodeType":"YulLiteral","src":"3612:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3615:77:31","nodeType":"YulLiteral","src":"3615:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3605:6:31","nodeType":"YulIdentifier","src":"3605:6:31"},"nativeSrc":"3605:88:31","nodeType":"YulFunctionCall","src":"3605:88:31"},"nativeSrc":"3605:88:31","nodeType":"YulExpressionStatement","src":"3605:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3709:1:31","nodeType":"YulLiteral","src":"3709:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"3712:4:31","nodeType":"YulLiteral","src":"3712:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3702:6:31","nodeType":"YulIdentifier","src":"3702:6:31"},"nativeSrc":"3702:15:31","nodeType":"YulFunctionCall","src":"3702:15:31"},"nativeSrc":"3702:15:31","nodeType":"YulExpressionStatement","src":"3702:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3733:1:31","nodeType":"YulLiteral","src":"3733:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3736:4:31","nodeType":"YulLiteral","src":"3736:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3726:6:31","nodeType":"YulIdentifier","src":"3726:6:31"},"nativeSrc":"3726:15:31","nodeType":"YulFunctionCall","src":"3726:15:31"},"nativeSrc":"3726:15:31","nodeType":"YulExpressionStatement","src":"3726:15:31"}]},"name":"panic_error_0x41","nativeSrc":"3567:180:31","nodeType":"YulFunctionDefinition","src":"3567:180:31"},{"body":{"nativeSrc":"3796:238:31","nodeType":"YulBlock","src":"3796:238:31","statements":[{"nativeSrc":"3806:58:31","nodeType":"YulVariableDeclaration","src":"3806:58:31","value":{"arguments":[{"name":"memPtr","nativeSrc":"3828:6:31","nodeType":"YulIdentifier","src":"3828:6:31"},{"arguments":[{"name":"size","nativeSrc":"3858:4:31","nodeType":"YulIdentifier","src":"3858:4:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3836:21:31","nodeType":"YulIdentifier","src":"3836:21:31"},"nativeSrc":"3836:27:31","nodeType":"YulFunctionCall","src":"3836:27:31"}],"functionName":{"name":"add","nativeSrc":"3824:3:31","nodeType":"YulIdentifier","src":"3824:3:31"},"nativeSrc":"3824:40:31","nodeType":"YulFunctionCall","src":"3824:40:31"},"variables":[{"name":"newFreePtr","nativeSrc":"3810:10:31","nodeType":"YulTypedName","src":"3810:10:31","type":""}]},{"body":{"nativeSrc":"3975:22:31","nodeType":"YulBlock","src":"3975:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3977:16:31","nodeType":"YulIdentifier","src":"3977:16:31"},"nativeSrc":"3977:18:31","nodeType":"YulFunctionCall","src":"3977:18:31"},"nativeSrc":"3977:18:31","nodeType":"YulExpressionStatement","src":"3977:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3918:10:31","nodeType":"YulIdentifier","src":"3918:10:31"},{"kind":"number","nativeSrc":"3930:18:31","nodeType":"YulLiteral","src":"3930:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3915:2:31","nodeType":"YulIdentifier","src":"3915:2:31"},"nativeSrc":"3915:34:31","nodeType":"YulFunctionCall","src":"3915:34:31"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3954:10:31","nodeType":"YulIdentifier","src":"3954:10:31"},{"name":"memPtr","nativeSrc":"3966:6:31","nodeType":"YulIdentifier","src":"3966:6:31"}],"functionName":{"name":"lt","nativeSrc":"3951:2:31","nodeType":"YulIdentifier","src":"3951:2:31"},"nativeSrc":"3951:22:31","nodeType":"YulFunctionCall","src":"3951:22:31"}],"functionName":{"name":"or","nativeSrc":"3912:2:31","nodeType":"YulIdentifier","src":"3912:2:31"},"nativeSrc":"3912:62:31","nodeType":"YulFunctionCall","src":"3912:62:31"},"nativeSrc":"3909:88:31","nodeType":"YulIf","src":"3909:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4013:2:31","nodeType":"YulLiteral","src":"4013:2:31","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4017:10:31","nodeType":"YulIdentifier","src":"4017:10:31"}],"functionName":{"name":"mstore","nativeSrc":"4006:6:31","nodeType":"YulIdentifier","src":"4006:6:31"},"nativeSrc":"4006:22:31","nodeType":"YulFunctionCall","src":"4006:22:31"},"nativeSrc":"4006:22:31","nodeType":"YulExpressionStatement","src":"4006:22:31"}]},"name":"finalize_allocation","nativeSrc":"3753:281:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3782:6:31","nodeType":"YulTypedName","src":"3782:6:31","type":""},{"name":"size","nativeSrc":"3790:4:31","nodeType":"YulTypedName","src":"3790:4:31","type":""}],"src":"3753:281:31"},{"body":{"nativeSrc":"4081:88:31","nodeType":"YulBlock","src":"4081:88:31","statements":[{"nativeSrc":"4091:30:31","nodeType":"YulAssignment","src":"4091:30:31","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"4101:18:31","nodeType":"YulIdentifier","src":"4101:18:31"},"nativeSrc":"4101:20:31","nodeType":"YulFunctionCall","src":"4101:20:31"},"variableNames":[{"name":"memPtr","nativeSrc":"4091:6:31","nodeType":"YulIdentifier","src":"4091:6:31"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"4150:6:31","nodeType":"YulIdentifier","src":"4150:6:31"},{"name":"size","nativeSrc":"4158:4:31","nodeType":"YulIdentifier","src":"4158:4:31"}],"functionName":{"name":"finalize_allocation","nativeSrc":"4130:19:31","nodeType":"YulIdentifier","src":"4130:19:31"},"nativeSrc":"4130:33:31","nodeType":"YulFunctionCall","src":"4130:33:31"},"nativeSrc":"4130:33:31","nodeType":"YulExpressionStatement","src":"4130:33:31"}]},"name":"allocate_memory","nativeSrc":"4040:129:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"4065:4:31","nodeType":"YulTypedName","src":"4065:4:31","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"4074:6:31","nodeType":"YulTypedName","src":"4074:6:31","type":""}],"src":"4040:129:31"},{"body":{"nativeSrc":"4242:241:31","nodeType":"YulBlock","src":"4242:241:31","statements":[{"body":{"nativeSrc":"4347:22:31","nodeType":"YulBlock","src":"4347:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4349:16:31","nodeType":"YulIdentifier","src":"4349:16:31"},"nativeSrc":"4349:18:31","nodeType":"YulFunctionCall","src":"4349:18:31"},"nativeSrc":"4349:18:31","nodeType":"YulExpressionStatement","src":"4349:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4319:6:31","nodeType":"YulIdentifier","src":"4319:6:31"},{"kind":"number","nativeSrc":"4327:18:31","nodeType":"YulLiteral","src":"4327:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4316:2:31","nodeType":"YulIdentifier","src":"4316:2:31"},"nativeSrc":"4316:30:31","nodeType":"YulFunctionCall","src":"4316:30:31"},"nativeSrc":"4313:56:31","nodeType":"YulIf","src":"4313:56:31"},{"nativeSrc":"4379:37:31","nodeType":"YulAssignment","src":"4379:37:31","value":{"arguments":[{"name":"length","nativeSrc":"4409:6:31","nodeType":"YulIdentifier","src":"4409:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4387:21:31","nodeType":"YulIdentifier","src":"4387:21:31"},"nativeSrc":"4387:29:31","nodeType":"YulFunctionCall","src":"4387:29:31"},"variableNames":[{"name":"size","nativeSrc":"4379:4:31","nodeType":"YulIdentifier","src":"4379:4:31"}]},{"nativeSrc":"4453:23:31","nodeType":"YulAssignment","src":"4453:23:31","value":{"arguments":[{"name":"size","nativeSrc":"4465:4:31","nodeType":"YulIdentifier","src":"4465:4:31"},{"kind":"number","nativeSrc":"4471:4:31","nodeType":"YulLiteral","src":"4471:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4461:3:31","nodeType":"YulIdentifier","src":"4461:3:31"},"nativeSrc":"4461:15:31","nodeType":"YulFunctionCall","src":"4461:15:31"},"variableNames":[{"name":"size","nativeSrc":"4453:4:31","nodeType":"YulIdentifier","src":"4453:4:31"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"4175:308:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"4226:6:31","nodeType":"YulTypedName","src":"4226:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"4237:4:31","nodeType":"YulTypedName","src":"4237:4:31","type":""}],"src":"4175:308:31"},{"body":{"nativeSrc":"4553:84:31","nodeType":"YulBlock","src":"4553:84:31","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"4577:3:31","nodeType":"YulIdentifier","src":"4577:3:31"},{"name":"src","nativeSrc":"4582:3:31","nodeType":"YulIdentifier","src":"4582:3:31"},{"name":"length","nativeSrc":"4587:6:31","nodeType":"YulIdentifier","src":"4587:6:31"}],"functionName":{"name":"calldatacopy","nativeSrc":"4564:12:31","nodeType":"YulIdentifier","src":"4564:12:31"},"nativeSrc":"4564:30:31","nodeType":"YulFunctionCall","src":"4564:30:31"},"nativeSrc":"4564:30:31","nodeType":"YulExpressionStatement","src":"4564:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4614:3:31","nodeType":"YulIdentifier","src":"4614:3:31"},{"name":"length","nativeSrc":"4619:6:31","nodeType":"YulIdentifier","src":"4619:6:31"}],"functionName":{"name":"add","nativeSrc":"4610:3:31","nodeType":"YulIdentifier","src":"4610:3:31"},"nativeSrc":"4610:16:31","nodeType":"YulFunctionCall","src":"4610:16:31"},{"kind":"number","nativeSrc":"4628:1:31","nodeType":"YulLiteral","src":"4628:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4603:6:31","nodeType":"YulIdentifier","src":"4603:6:31"},"nativeSrc":"4603:27:31","nodeType":"YulFunctionCall","src":"4603:27:31"},"nativeSrc":"4603:27:31","nodeType":"YulExpressionStatement","src":"4603:27:31"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"4489:148:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4535:3:31","nodeType":"YulTypedName","src":"4535:3:31","type":""},{"name":"dst","nativeSrc":"4540:3:31","nodeType":"YulTypedName","src":"4540:3:31","type":""},{"name":"length","nativeSrc":"4545:6:31","nodeType":"YulTypedName","src":"4545:6:31","type":""}],"src":"4489:148:31"},{"body":{"nativeSrc":"4727:341:31","nodeType":"YulBlock","src":"4727:341:31","statements":[{"nativeSrc":"4737:75:31","nodeType":"YulAssignment","src":"4737:75:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4804:6:31","nodeType":"YulIdentifier","src":"4804:6:31"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"4762:41:31","nodeType":"YulIdentifier","src":"4762:41:31"},"nativeSrc":"4762:49:31","nodeType":"YulFunctionCall","src":"4762:49:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"4746:15:31","nodeType":"YulIdentifier","src":"4746:15:31"},"nativeSrc":"4746:66:31","nodeType":"YulFunctionCall","src":"4746:66:31"},"variableNames":[{"name":"array","nativeSrc":"4737:5:31","nodeType":"YulIdentifier","src":"4737:5:31"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"4828:5:31","nodeType":"YulIdentifier","src":"4828:5:31"},{"name":"length","nativeSrc":"4835:6:31","nodeType":"YulIdentifier","src":"4835:6:31"}],"functionName":{"name":"mstore","nativeSrc":"4821:6:31","nodeType":"YulIdentifier","src":"4821:6:31"},"nativeSrc":"4821:21:31","nodeType":"YulFunctionCall","src":"4821:21:31"},"nativeSrc":"4821:21:31","nodeType":"YulExpressionStatement","src":"4821:21:31"},{"nativeSrc":"4851:27:31","nodeType":"YulVariableDeclaration","src":"4851:27:31","value":{"arguments":[{"name":"array","nativeSrc":"4866:5:31","nodeType":"YulIdentifier","src":"4866:5:31"},{"kind":"number","nativeSrc":"4873:4:31","nodeType":"YulLiteral","src":"4873:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4862:3:31","nodeType":"YulIdentifier","src":"4862:3:31"},"nativeSrc":"4862:16:31","nodeType":"YulFunctionCall","src":"4862:16:31"},"variables":[{"name":"dst","nativeSrc":"4855:3:31","nodeType":"YulTypedName","src":"4855:3:31","type":""}]},{"body":{"nativeSrc":"4916:83:31","nodeType":"YulBlock","src":"4916:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"4918:77:31","nodeType":"YulIdentifier","src":"4918:77:31"},"nativeSrc":"4918:79:31","nodeType":"YulFunctionCall","src":"4918:79:31"},"nativeSrc":"4918:79:31","nodeType":"YulExpressionStatement","src":"4918:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4897:3:31","nodeType":"YulIdentifier","src":"4897:3:31"},{"name":"length","nativeSrc":"4902:6:31","nodeType":"YulIdentifier","src":"4902:6:31"}],"functionName":{"name":"add","nativeSrc":"4893:3:31","nodeType":"YulIdentifier","src":"4893:3:31"},"nativeSrc":"4893:16:31","nodeType":"YulFunctionCall","src":"4893:16:31"},{"name":"end","nativeSrc":"4911:3:31","nodeType":"YulIdentifier","src":"4911:3:31"}],"functionName":{"name":"gt","nativeSrc":"4890:2:31","nodeType":"YulIdentifier","src":"4890:2:31"},"nativeSrc":"4890:25:31","nodeType":"YulFunctionCall","src":"4890:25:31"},"nativeSrc":"4887:112:31","nodeType":"YulIf","src":"4887:112:31"},{"expression":{"arguments":[{"name":"src","nativeSrc":"5045:3:31","nodeType":"YulIdentifier","src":"5045:3:31"},{"name":"dst","nativeSrc":"5050:3:31","nodeType":"YulIdentifier","src":"5050:3:31"},{"name":"length","nativeSrc":"5055:6:31","nodeType":"YulIdentifier","src":"5055:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"5008:36:31","nodeType":"YulIdentifier","src":"5008:36:31"},"nativeSrc":"5008:54:31","nodeType":"YulFunctionCall","src":"5008:54:31"},"nativeSrc":"5008:54:31","nodeType":"YulExpressionStatement","src":"5008:54:31"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"4643:425:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4700:3:31","nodeType":"YulTypedName","src":"4700:3:31","type":""},{"name":"length","nativeSrc":"4705:6:31","nodeType":"YulTypedName","src":"4705:6:31","type":""},{"name":"end","nativeSrc":"4713:3:31","nodeType":"YulTypedName","src":"4713:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4721:5:31","nodeType":"YulTypedName","src":"4721:5:31","type":""}],"src":"4643:425:31"},{"body":{"nativeSrc":"5150:278:31","nodeType":"YulBlock","src":"5150:278:31","statements":[{"body":{"nativeSrc":"5199:83:31","nodeType":"YulBlock","src":"5199:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5201:77:31","nodeType":"YulIdentifier","src":"5201:77:31"},"nativeSrc":"5201:79:31","nodeType":"YulFunctionCall","src":"5201:79:31"},"nativeSrc":"5201:79:31","nodeType":"YulExpressionStatement","src":"5201:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5178:6:31","nodeType":"YulIdentifier","src":"5178:6:31"},{"kind":"number","nativeSrc":"5186:4:31","nodeType":"YulLiteral","src":"5186:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5174:3:31","nodeType":"YulIdentifier","src":"5174:3:31"},"nativeSrc":"5174:17:31","nodeType":"YulFunctionCall","src":"5174:17:31"},{"name":"end","nativeSrc":"5193:3:31","nodeType":"YulIdentifier","src":"5193:3:31"}],"functionName":{"name":"slt","nativeSrc":"5170:3:31","nodeType":"YulIdentifier","src":"5170:3:31"},"nativeSrc":"5170:27:31","nodeType":"YulFunctionCall","src":"5170:27:31"}],"functionName":{"name":"iszero","nativeSrc":"5163:6:31","nodeType":"YulIdentifier","src":"5163:6:31"},"nativeSrc":"5163:35:31","nodeType":"YulFunctionCall","src":"5163:35:31"},"nativeSrc":"5160:122:31","nodeType":"YulIf","src":"5160:122:31"},{"nativeSrc":"5291:34:31","nodeType":"YulVariableDeclaration","src":"5291:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"5318:6:31","nodeType":"YulIdentifier","src":"5318:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"5305:12:31","nodeType":"YulIdentifier","src":"5305:12:31"},"nativeSrc":"5305:20:31","nodeType":"YulFunctionCall","src":"5305:20:31"},"variables":[{"name":"length","nativeSrc":"5295:6:31","nodeType":"YulTypedName","src":"5295:6:31","type":""}]},{"nativeSrc":"5334:88:31","nodeType":"YulAssignment","src":"5334:88:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5395:6:31","nodeType":"YulIdentifier","src":"5395:6:31"},{"kind":"number","nativeSrc":"5403:4:31","nodeType":"YulLiteral","src":"5403:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5391:3:31","nodeType":"YulIdentifier","src":"5391:3:31"},"nativeSrc":"5391:17:31","nodeType":"YulFunctionCall","src":"5391:17:31"},{"name":"length","nativeSrc":"5410:6:31","nodeType":"YulIdentifier","src":"5410:6:31"},{"name":"end","nativeSrc":"5418:3:31","nodeType":"YulIdentifier","src":"5418:3:31"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"5343:47:31","nodeType":"YulIdentifier","src":"5343:47:31"},"nativeSrc":"5343:79:31","nodeType":"YulFunctionCall","src":"5343:79:31"},"variableNames":[{"name":"array","nativeSrc":"5334:5:31","nodeType":"YulIdentifier","src":"5334:5:31"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"5088:340:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5128:6:31","nodeType":"YulTypedName","src":"5128:6:31","type":""},{"name":"end","nativeSrc":"5136:3:31","nodeType":"YulTypedName","src":"5136:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"5144:5:31","nodeType":"YulTypedName","src":"5144:5:31","type":""}],"src":"5088:340:31"},{"body":{"nativeSrc":"5510:433:31","nodeType":"YulBlock","src":"5510:433:31","statements":[{"body":{"nativeSrc":"5556:83:31","nodeType":"YulBlock","src":"5556:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5558:77:31","nodeType":"YulIdentifier","src":"5558:77:31"},"nativeSrc":"5558:79:31","nodeType":"YulFunctionCall","src":"5558:79:31"},"nativeSrc":"5558:79:31","nodeType":"YulExpressionStatement","src":"5558:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5531:7:31","nodeType":"YulIdentifier","src":"5531:7:31"},{"name":"headStart","nativeSrc":"5540:9:31","nodeType":"YulIdentifier","src":"5540:9:31"}],"functionName":{"name":"sub","nativeSrc":"5527:3:31","nodeType":"YulIdentifier","src":"5527:3:31"},"nativeSrc":"5527:23:31","nodeType":"YulFunctionCall","src":"5527:23:31"},{"kind":"number","nativeSrc":"5552:2:31","nodeType":"YulLiteral","src":"5552:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5523:3:31","nodeType":"YulIdentifier","src":"5523:3:31"},"nativeSrc":"5523:32:31","nodeType":"YulFunctionCall","src":"5523:32:31"},"nativeSrc":"5520:119:31","nodeType":"YulIf","src":"5520:119:31"},{"nativeSrc":"5649:287:31","nodeType":"YulBlock","src":"5649:287:31","statements":[{"nativeSrc":"5664:45:31","nodeType":"YulVariableDeclaration","src":"5664:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5695:9:31","nodeType":"YulIdentifier","src":"5695:9:31"},{"kind":"number","nativeSrc":"5706:1:31","nodeType":"YulLiteral","src":"5706:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5691:3:31","nodeType":"YulIdentifier","src":"5691:3:31"},"nativeSrc":"5691:17:31","nodeType":"YulFunctionCall","src":"5691:17:31"}],"functionName":{"name":"calldataload","nativeSrc":"5678:12:31","nodeType":"YulIdentifier","src":"5678:12:31"},"nativeSrc":"5678:31:31","nodeType":"YulFunctionCall","src":"5678:31:31"},"variables":[{"name":"offset","nativeSrc":"5668:6:31","nodeType":"YulTypedName","src":"5668:6:31","type":""}]},{"body":{"nativeSrc":"5756:83:31","nodeType":"YulBlock","src":"5756:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"5758:77:31","nodeType":"YulIdentifier","src":"5758:77:31"},"nativeSrc":"5758:79:31","nodeType":"YulFunctionCall","src":"5758:79:31"},"nativeSrc":"5758:79:31","nodeType":"YulExpressionStatement","src":"5758:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5728:6:31","nodeType":"YulIdentifier","src":"5728:6:31"},{"kind":"number","nativeSrc":"5736:18:31","nodeType":"YulLiteral","src":"5736:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5725:2:31","nodeType":"YulIdentifier","src":"5725:2:31"},"nativeSrc":"5725:30:31","nodeType":"YulFunctionCall","src":"5725:30:31"},"nativeSrc":"5722:117:31","nodeType":"YulIf","src":"5722:117:31"},{"nativeSrc":"5853:73:31","nodeType":"YulAssignment","src":"5853:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5898:9:31","nodeType":"YulIdentifier","src":"5898:9:31"},{"name":"offset","nativeSrc":"5909:6:31","nodeType":"YulIdentifier","src":"5909:6:31"}],"functionName":{"name":"add","nativeSrc":"5894:3:31","nodeType":"YulIdentifier","src":"5894:3:31"},"nativeSrc":"5894:22:31","nodeType":"YulFunctionCall","src":"5894:22:31"},{"name":"dataEnd","nativeSrc":"5918:7:31","nodeType":"YulIdentifier","src":"5918:7:31"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"5863:30:31","nodeType":"YulIdentifier","src":"5863:30:31"},"nativeSrc":"5863:63:31","nodeType":"YulFunctionCall","src":"5863:63:31"},"variableNames":[{"name":"value0","nativeSrc":"5853:6:31","nodeType":"YulIdentifier","src":"5853:6:31"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nativeSrc":"5434:509:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5480:9:31","nodeType":"YulTypedName","src":"5480:9:31","type":""},{"name":"dataEnd","nativeSrc":"5491:7:31","nodeType":"YulTypedName","src":"5491:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5503:6:31","nodeType":"YulTypedName","src":"5503:6:31","type":""}],"src":"5434:509:31"},{"body":{"nativeSrc":"6015:263:31","nodeType":"YulBlock","src":"6015:263:31","statements":[{"body":{"nativeSrc":"6061:83:31","nodeType":"YulBlock","src":"6061:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6063:77:31","nodeType":"YulIdentifier","src":"6063:77:31"},"nativeSrc":"6063:79:31","nodeType":"YulFunctionCall","src":"6063:79:31"},"nativeSrc":"6063:79:31","nodeType":"YulExpressionStatement","src":"6063:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6036:7:31","nodeType":"YulIdentifier","src":"6036:7:31"},{"name":"headStart","nativeSrc":"6045:9:31","nodeType":"YulIdentifier","src":"6045:9:31"}],"functionName":{"name":"sub","nativeSrc":"6032:3:31","nodeType":"YulIdentifier","src":"6032:3:31"},"nativeSrc":"6032:23:31","nodeType":"YulFunctionCall","src":"6032:23:31"},{"kind":"number","nativeSrc":"6057:2:31","nodeType":"YulLiteral","src":"6057:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6028:3:31","nodeType":"YulIdentifier","src":"6028:3:31"},"nativeSrc":"6028:32:31","nodeType":"YulFunctionCall","src":"6028:32:31"},"nativeSrc":"6025:119:31","nodeType":"YulIf","src":"6025:119:31"},{"nativeSrc":"6154:117:31","nodeType":"YulBlock","src":"6154:117:31","statements":[{"nativeSrc":"6169:15:31","nodeType":"YulVariableDeclaration","src":"6169:15:31","value":{"kind":"number","nativeSrc":"6183:1:31","nodeType":"YulLiteral","src":"6183:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6173:6:31","nodeType":"YulTypedName","src":"6173:6:31","type":""}]},{"nativeSrc":"6198:63:31","nodeType":"YulAssignment","src":"6198:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6233:9:31","nodeType":"YulIdentifier","src":"6233:9:31"},{"name":"offset","nativeSrc":"6244:6:31","nodeType":"YulIdentifier","src":"6244:6:31"}],"functionName":{"name":"add","nativeSrc":"6229:3:31","nodeType":"YulIdentifier","src":"6229:3:31"},"nativeSrc":"6229:22:31","nodeType":"YulFunctionCall","src":"6229:22:31"},{"name":"dataEnd","nativeSrc":"6253:7:31","nodeType":"YulIdentifier","src":"6253:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6208:20:31","nodeType":"YulIdentifier","src":"6208:20:31"},"nativeSrc":"6208:53:31","nodeType":"YulFunctionCall","src":"6208:53:31"},"variableNames":[{"name":"value0","nativeSrc":"6198:6:31","nodeType":"YulIdentifier","src":"6198:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5949:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5985:9:31","nodeType":"YulTypedName","src":"5985:9:31","type":""},{"name":"dataEnd","nativeSrc":"5996:7:31","nodeType":"YulTypedName","src":"5996:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6008:6:31","nodeType":"YulTypedName","src":"6008:6:31","type":""}],"src":"5949:329:31"},{"body":{"nativeSrc":"6343:40:31","nodeType":"YulBlock","src":"6343:40:31","statements":[{"nativeSrc":"6354:22:31","nodeType":"YulAssignment","src":"6354:22:31","value":{"arguments":[{"name":"value","nativeSrc":"6370:5:31","nodeType":"YulIdentifier","src":"6370:5:31"}],"functionName":{"name":"mload","nativeSrc":"6364:5:31","nodeType":"YulIdentifier","src":"6364:5:31"},"nativeSrc":"6364:12:31","nodeType":"YulFunctionCall","src":"6364:12:31"},"variableNames":[{"name":"length","nativeSrc":"6354:6:31","nodeType":"YulIdentifier","src":"6354:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"6284:99:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6326:5:31","nodeType":"YulTypedName","src":"6326:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6336:6:31","nodeType":"YulTypedName","src":"6336:6:31","type":""}],"src":"6284:99:31"},{"body":{"nativeSrc":"6485:73:31","nodeType":"YulBlock","src":"6485:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6502:3:31","nodeType":"YulIdentifier","src":"6502:3:31"},{"name":"length","nativeSrc":"6507:6:31","nodeType":"YulIdentifier","src":"6507:6:31"}],"functionName":{"name":"mstore","nativeSrc":"6495:6:31","nodeType":"YulIdentifier","src":"6495:6:31"},"nativeSrc":"6495:19:31","nodeType":"YulFunctionCall","src":"6495:19:31"},"nativeSrc":"6495:19:31","nodeType":"YulExpressionStatement","src":"6495:19:31"},{"nativeSrc":"6523:29:31","nodeType":"YulAssignment","src":"6523:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"6542:3:31","nodeType":"YulIdentifier","src":"6542:3:31"},{"kind":"number","nativeSrc":"6547:4:31","nodeType":"YulLiteral","src":"6547:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6538:3:31","nodeType":"YulIdentifier","src":"6538:3:31"},"nativeSrc":"6538:14:31","nodeType":"YulFunctionCall","src":"6538:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"6523:11:31","nodeType":"YulIdentifier","src":"6523:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6389:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6457:3:31","nodeType":"YulTypedName","src":"6457:3:31","type":""},{"name":"length","nativeSrc":"6462:6:31","nodeType":"YulTypedName","src":"6462:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6473:11:31","nodeType":"YulTypedName","src":"6473:11:31","type":""}],"src":"6389:169:31"},{"body":{"nativeSrc":"6626:186:31","nodeType":"YulBlock","src":"6626:186:31","statements":[{"nativeSrc":"6637:10:31","nodeType":"YulVariableDeclaration","src":"6637:10:31","value":{"kind":"number","nativeSrc":"6646:1:31","nodeType":"YulLiteral","src":"6646:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6641:1:31","nodeType":"YulTypedName","src":"6641:1:31","type":""}]},{"body":{"nativeSrc":"6706:63:31","nodeType":"YulBlock","src":"6706:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6731:3:31","nodeType":"YulIdentifier","src":"6731:3:31"},{"name":"i","nativeSrc":"6736:1:31","nodeType":"YulIdentifier","src":"6736:1:31"}],"functionName":{"name":"add","nativeSrc":"6727:3:31","nodeType":"YulIdentifier","src":"6727:3:31"},"nativeSrc":"6727:11:31","nodeType":"YulFunctionCall","src":"6727:11:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6750:3:31","nodeType":"YulIdentifier","src":"6750:3:31"},{"name":"i","nativeSrc":"6755:1:31","nodeType":"YulIdentifier","src":"6755:1:31"}],"functionName":{"name":"add","nativeSrc":"6746:3:31","nodeType":"YulIdentifier","src":"6746:3:31"},"nativeSrc":"6746:11:31","nodeType":"YulFunctionCall","src":"6746:11:31"}],"functionName":{"name":"mload","nativeSrc":"6740:5:31","nodeType":"YulIdentifier","src":"6740:5:31"},"nativeSrc":"6740:18:31","nodeType":"YulFunctionCall","src":"6740:18:31"}],"functionName":{"name":"mstore","nativeSrc":"6720:6:31","nodeType":"YulIdentifier","src":"6720:6:31"},"nativeSrc":"6720:39:31","nodeType":"YulFunctionCall","src":"6720:39:31"},"nativeSrc":"6720:39:31","nodeType":"YulExpressionStatement","src":"6720:39:31"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6667:1:31","nodeType":"YulIdentifier","src":"6667:1:31"},{"name":"length","nativeSrc":"6670:6:31","nodeType":"YulIdentifier","src":"6670:6:31"}],"functionName":{"name":"lt","nativeSrc":"6664:2:31","nodeType":"YulIdentifier","src":"6664:2:31"},"nativeSrc":"6664:13:31","nodeType":"YulFunctionCall","src":"6664:13:31"},"nativeSrc":"6656:113:31","nodeType":"YulForLoop","post":{"nativeSrc":"6678:19:31","nodeType":"YulBlock","src":"6678:19:31","statements":[{"nativeSrc":"6680:15:31","nodeType":"YulAssignment","src":"6680:15:31","value":{"arguments":[{"name":"i","nativeSrc":"6689:1:31","nodeType":"YulIdentifier","src":"6689:1:31"},{"kind":"number","nativeSrc":"6692:2:31","nodeType":"YulLiteral","src":"6692:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6685:3:31","nodeType":"YulIdentifier","src":"6685:3:31"},"nativeSrc":"6685:10:31","nodeType":"YulFunctionCall","src":"6685:10:31"},"variableNames":[{"name":"i","nativeSrc":"6680:1:31","nodeType":"YulIdentifier","src":"6680:1:31"}]}]},"pre":{"nativeSrc":"6660:3:31","nodeType":"YulBlock","src":"6660:3:31","statements":[]},"src":"6656:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6789:3:31","nodeType":"YulIdentifier","src":"6789:3:31"},{"name":"length","nativeSrc":"6794:6:31","nodeType":"YulIdentifier","src":"6794:6:31"}],"functionName":{"name":"add","nativeSrc":"6785:3:31","nodeType":"YulIdentifier","src":"6785:3:31"},"nativeSrc":"6785:16:31","nodeType":"YulFunctionCall","src":"6785:16:31"},{"kind":"number","nativeSrc":"6803:1:31","nodeType":"YulLiteral","src":"6803:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6778:6:31","nodeType":"YulIdentifier","src":"6778:6:31"},"nativeSrc":"6778:27:31","nodeType":"YulFunctionCall","src":"6778:27:31"},"nativeSrc":"6778:27:31","nodeType":"YulExpressionStatement","src":"6778:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6564:248:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6608:3:31","nodeType":"YulTypedName","src":"6608:3:31","type":""},{"name":"dst","nativeSrc":"6613:3:31","nodeType":"YulTypedName","src":"6613:3:31","type":""},{"name":"length","nativeSrc":"6618:6:31","nodeType":"YulTypedName","src":"6618:6:31","type":""}],"src":"6564:248:31"},{"body":{"nativeSrc":"6910:285:31","nodeType":"YulBlock","src":"6910:285:31","statements":[{"nativeSrc":"6920:53:31","nodeType":"YulVariableDeclaration","src":"6920:53:31","value":{"arguments":[{"name":"value","nativeSrc":"6967:5:31","nodeType":"YulIdentifier","src":"6967:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"6934:32:31","nodeType":"YulIdentifier","src":"6934:32:31"},"nativeSrc":"6934:39:31","nodeType":"YulFunctionCall","src":"6934:39:31"},"variables":[{"name":"length","nativeSrc":"6924:6:31","nodeType":"YulTypedName","src":"6924:6:31","type":""}]},{"nativeSrc":"6982:78:31","nodeType":"YulAssignment","src":"6982:78:31","value":{"arguments":[{"name":"pos","nativeSrc":"7048:3:31","nodeType":"YulIdentifier","src":"7048:3:31"},{"name":"length","nativeSrc":"7053:6:31","nodeType":"YulIdentifier","src":"7053:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6989:58:31","nodeType":"YulIdentifier","src":"6989:58:31"},"nativeSrc":"6989:71:31","nodeType":"YulFunctionCall","src":"6989:71:31"},"variableNames":[{"name":"pos","nativeSrc":"6982:3:31","nodeType":"YulIdentifier","src":"6982:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7108:5:31","nodeType":"YulIdentifier","src":"7108:5:31"},{"kind":"number","nativeSrc":"7115:4:31","nodeType":"YulLiteral","src":"7115:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7104:3:31","nodeType":"YulIdentifier","src":"7104:3:31"},"nativeSrc":"7104:16:31","nodeType":"YulFunctionCall","src":"7104:16:31"},{"name":"pos","nativeSrc":"7122:3:31","nodeType":"YulIdentifier","src":"7122:3:31"},{"name":"length","nativeSrc":"7127:6:31","nodeType":"YulIdentifier","src":"7127:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7069:34:31","nodeType":"YulIdentifier","src":"7069:34:31"},"nativeSrc":"7069:65:31","nodeType":"YulFunctionCall","src":"7069:65:31"},"nativeSrc":"7069:65:31","nodeType":"YulExpressionStatement","src":"7069:65:31"},{"nativeSrc":"7143:46:31","nodeType":"YulAssignment","src":"7143:46:31","value":{"arguments":[{"name":"pos","nativeSrc":"7154:3:31","nodeType":"YulIdentifier","src":"7154:3:31"},{"arguments":[{"name":"length","nativeSrc":"7181:6:31","nodeType":"YulIdentifier","src":"7181:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7159:21:31","nodeType":"YulIdentifier","src":"7159:21:31"},"nativeSrc":"7159:29:31","nodeType":"YulFunctionCall","src":"7159:29:31"}],"functionName":{"name":"add","nativeSrc":"7150:3:31","nodeType":"YulIdentifier","src":"7150:3:31"},"nativeSrc":"7150:39:31","nodeType":"YulFunctionCall","src":"7150:39:31"},"variableNames":[{"name":"end","nativeSrc":"7143:3:31","nodeType":"YulIdentifier","src":"7143:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"6818:377:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6891:5:31","nodeType":"YulTypedName","src":"6891:5:31","type":""},{"name":"pos","nativeSrc":"6898:3:31","nodeType":"YulTypedName","src":"6898:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6906:3:31","nodeType":"YulTypedName","src":"6906:3:31","type":""}],"src":"6818:377:31"},{"body":{"nativeSrc":"7319:195:31","nodeType":"YulBlock","src":"7319:195:31","statements":[{"nativeSrc":"7329:26:31","nodeType":"YulAssignment","src":"7329:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"7341:9:31","nodeType":"YulIdentifier","src":"7341:9:31"},{"kind":"number","nativeSrc":"7352:2:31","nodeType":"YulLiteral","src":"7352:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7337:3:31","nodeType":"YulIdentifier","src":"7337:3:31"},"nativeSrc":"7337:18:31","nodeType":"YulFunctionCall","src":"7337:18:31"},"variableNames":[{"name":"tail","nativeSrc":"7329:4:31","nodeType":"YulIdentifier","src":"7329:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7376:9:31","nodeType":"YulIdentifier","src":"7376:9:31"},{"kind":"number","nativeSrc":"7387:1:31","nodeType":"YulLiteral","src":"7387:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7372:3:31","nodeType":"YulIdentifier","src":"7372:3:31"},"nativeSrc":"7372:17:31","nodeType":"YulFunctionCall","src":"7372:17:31"},{"arguments":[{"name":"tail","nativeSrc":"7395:4:31","nodeType":"YulIdentifier","src":"7395:4:31"},{"name":"headStart","nativeSrc":"7401:9:31","nodeType":"YulIdentifier","src":"7401:9:31"}],"functionName":{"name":"sub","nativeSrc":"7391:3:31","nodeType":"YulIdentifier","src":"7391:3:31"},"nativeSrc":"7391:20:31","nodeType":"YulFunctionCall","src":"7391:20:31"}],"functionName":{"name":"mstore","nativeSrc":"7365:6:31","nodeType":"YulIdentifier","src":"7365:6:31"},"nativeSrc":"7365:47:31","nodeType":"YulFunctionCall","src":"7365:47:31"},"nativeSrc":"7365:47:31","nodeType":"YulExpressionStatement","src":"7365:47:31"},{"nativeSrc":"7421:86:31","nodeType":"YulAssignment","src":"7421:86:31","value":{"arguments":[{"name":"value0","nativeSrc":"7493:6:31","nodeType":"YulIdentifier","src":"7493:6:31"},{"name":"tail","nativeSrc":"7502:4:31","nodeType":"YulIdentifier","src":"7502:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7429:63:31","nodeType":"YulIdentifier","src":"7429:63:31"},"nativeSrc":"7429:78:31","nodeType":"YulFunctionCall","src":"7429:78:31"},"variableNames":[{"name":"tail","nativeSrc":"7421:4:31","nodeType":"YulIdentifier","src":"7421:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7201:313:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7291:9:31","nodeType":"YulTypedName","src":"7291:9:31","type":""},{"name":"value0","nativeSrc":"7303:6:31","nodeType":"YulTypedName","src":"7303:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7314:4:31","nodeType":"YulTypedName","src":"7314:4:31","type":""}],"src":"7201:313:31"},{"body":{"nativeSrc":"7602:229:31","nodeType":"YulBlock","src":"7602:229:31","statements":[{"body":{"nativeSrc":"7707:22:31","nodeType":"YulBlock","src":"7707:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7709:16:31","nodeType":"YulIdentifier","src":"7709:16:31"},"nativeSrc":"7709:18:31","nodeType":"YulFunctionCall","src":"7709:18:31"},"nativeSrc":"7709:18:31","nodeType":"YulExpressionStatement","src":"7709:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7679:6:31","nodeType":"YulIdentifier","src":"7679:6:31"},{"kind":"number","nativeSrc":"7687:18:31","nodeType":"YulLiteral","src":"7687:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7676:2:31","nodeType":"YulIdentifier","src":"7676:2:31"},"nativeSrc":"7676:30:31","nodeType":"YulFunctionCall","src":"7676:30:31"},"nativeSrc":"7673:56:31","nodeType":"YulIf","src":"7673:56:31"},{"nativeSrc":"7739:25:31","nodeType":"YulAssignment","src":"7739:25:31","value":{"arguments":[{"name":"length","nativeSrc":"7751:6:31","nodeType":"YulIdentifier","src":"7751:6:31"},{"kind":"number","nativeSrc":"7759:4:31","nodeType":"YulLiteral","src":"7759:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"7747:3:31","nodeType":"YulIdentifier","src":"7747:3:31"},"nativeSrc":"7747:17:31","nodeType":"YulFunctionCall","src":"7747:17:31"},"variableNames":[{"name":"size","nativeSrc":"7739:4:31","nodeType":"YulIdentifier","src":"7739:4:31"}]},{"nativeSrc":"7801:23:31","nodeType":"YulAssignment","src":"7801:23:31","value":{"arguments":[{"name":"size","nativeSrc":"7813:4:31","nodeType":"YulIdentifier","src":"7813:4:31"},{"kind":"number","nativeSrc":"7819:4:31","nodeType":"YulLiteral","src":"7819:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7809:3:31","nodeType":"YulIdentifier","src":"7809:3:31"},"nativeSrc":"7809:15:31","nodeType":"YulFunctionCall","src":"7809:15:31"},"variableNames":[{"name":"size","nativeSrc":"7801:4:31","nodeType":"YulIdentifier","src":"7801:4:31"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7520:311:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"7586:6:31","nodeType":"YulTypedName","src":"7586:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"7597:4:31","nodeType":"YulTypedName","src":"7597:4:31","type":""}],"src":"7520:311:31"},{"body":{"nativeSrc":"7926:28:31","nodeType":"YulBlock","src":"7926:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7943:1:31","nodeType":"YulLiteral","src":"7943:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"7946:1:31","nodeType":"YulLiteral","src":"7946:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7936:6:31","nodeType":"YulIdentifier","src":"7936:6:31"},"nativeSrc":"7936:12:31","nodeType":"YulFunctionCall","src":"7936:12:31"},"nativeSrc":"7936:12:31","nodeType":"YulExpressionStatement","src":"7936:12:31"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"7837:117:31","nodeType":"YulFunctionDefinition","src":"7837:117:31"},{"body":{"nativeSrc":"8079:608:31","nodeType":"YulBlock","src":"8079:608:31","statements":[{"nativeSrc":"8089:90:31","nodeType":"YulAssignment","src":"8089:90:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"8171:6:31","nodeType":"YulIdentifier","src":"8171:6:31"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8114:56:31","nodeType":"YulIdentifier","src":"8114:56:31"},"nativeSrc":"8114:64:31","nodeType":"YulFunctionCall","src":"8114:64:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"8098:15:31","nodeType":"YulIdentifier","src":"8098:15:31"},"nativeSrc":"8098:81:31","nodeType":"YulFunctionCall","src":"8098:81:31"},"variableNames":[{"name":"array","nativeSrc":"8089:5:31","nodeType":"YulIdentifier","src":"8089:5:31"}]},{"nativeSrc":"8188:16:31","nodeType":"YulVariableDeclaration","src":"8188:16:31","value":{"name":"array","nativeSrc":"8199:5:31","nodeType":"YulIdentifier","src":"8199:5:31"},"variables":[{"name":"dst","nativeSrc":"8192:3:31","nodeType":"YulTypedName","src":"8192:3:31","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"8221:5:31","nodeType":"YulIdentifier","src":"8221:5:31"},{"name":"length","nativeSrc":"8228:6:31","nodeType":"YulIdentifier","src":"8228:6:31"}],"functionName":{"name":"mstore","nativeSrc":"8214:6:31","nodeType":"YulIdentifier","src":"8214:6:31"},"nativeSrc":"8214:21:31","nodeType":"YulFunctionCall","src":"8214:21:31"},"nativeSrc":"8214:21:31","nodeType":"YulExpressionStatement","src":"8214:21:31"},{"nativeSrc":"8244:23:31","nodeType":"YulAssignment","src":"8244:23:31","value":{"arguments":[{"name":"array","nativeSrc":"8255:5:31","nodeType":"YulIdentifier","src":"8255:5:31"},{"kind":"number","nativeSrc":"8262:4:31","nodeType":"YulLiteral","src":"8262:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8251:3:31","nodeType":"YulIdentifier","src":"8251:3:31"},"nativeSrc":"8251:16:31","nodeType":"YulFunctionCall","src":"8251:16:31"},"variableNames":[{"name":"dst","nativeSrc":"8244:3:31","nodeType":"YulIdentifier","src":"8244:3:31"}]},{"nativeSrc":"8277:44:31","nodeType":"YulVariableDeclaration","src":"8277:44:31","value":{"arguments":[{"name":"offset","nativeSrc":"8295:6:31","nodeType":"YulIdentifier","src":"8295:6:31"},{"arguments":[{"name":"length","nativeSrc":"8307:6:31","nodeType":"YulIdentifier","src":"8307:6:31"},{"kind":"number","nativeSrc":"8315:4:31","nodeType":"YulLiteral","src":"8315:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"8303:3:31","nodeType":"YulIdentifier","src":"8303:3:31"},"nativeSrc":"8303:17:31","nodeType":"YulFunctionCall","src":"8303:17:31"}],"functionName":{"name":"add","nativeSrc":"8291:3:31","nodeType":"YulIdentifier","src":"8291:3:31"},"nativeSrc":"8291:30:31","nodeType":"YulFunctionCall","src":"8291:30:31"},"variables":[{"name":"srcEnd","nativeSrc":"8281:6:31","nodeType":"YulTypedName","src":"8281:6:31","type":""}]},{"body":{"nativeSrc":"8349:103:31","nodeType":"YulBlock","src":"8349:103:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"8363:77:31","nodeType":"YulIdentifier","src":"8363:77:31"},"nativeSrc":"8363:79:31","nodeType":"YulFunctionCall","src":"8363:79:31"},"nativeSrc":"8363:79:31","nodeType":"YulExpressionStatement","src":"8363:79:31"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"8336:6:31","nodeType":"YulIdentifier","src":"8336:6:31"},{"name":"end","nativeSrc":"8344:3:31","nodeType":"YulIdentifier","src":"8344:3:31"}],"functionName":{"name":"gt","nativeSrc":"8333:2:31","nodeType":"YulIdentifier","src":"8333:2:31"},"nativeSrc":"8333:15:31","nodeType":"YulFunctionCall","src":"8333:15:31"},"nativeSrc":"8330:122:31","nodeType":"YulIf","src":"8330:122:31"},{"body":{"nativeSrc":"8537:144:31","nodeType":"YulBlock","src":"8537:144:31","statements":[{"nativeSrc":"8552:21:31","nodeType":"YulVariableDeclaration","src":"8552:21:31","value":{"name":"src","nativeSrc":"8570:3:31","nodeType":"YulIdentifier","src":"8570:3:31"},"variables":[{"name":"elementPos","nativeSrc":"8556:10:31","nodeType":"YulTypedName","src":"8556:10:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"8594:3:31","nodeType":"YulIdentifier","src":"8594:3:31"},{"arguments":[{"name":"elementPos","nativeSrc":"8620:10:31","nodeType":"YulIdentifier","src":"8620:10:31"},{"name":"end","nativeSrc":"8632:3:31","nodeType":"YulIdentifier","src":"8632:3:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8599:20:31","nodeType":"YulIdentifier","src":"8599:20:31"},"nativeSrc":"8599:37:31","nodeType":"YulFunctionCall","src":"8599:37:31"}],"functionName":{"name":"mstore","nativeSrc":"8587:6:31","nodeType":"YulIdentifier","src":"8587:6:31"},"nativeSrc":"8587:50:31","nodeType":"YulFunctionCall","src":"8587:50:31"},"nativeSrc":"8587:50:31","nodeType":"YulExpressionStatement","src":"8587:50:31"},{"nativeSrc":"8650:21:31","nodeType":"YulAssignment","src":"8650:21:31","value":{"arguments":[{"name":"dst","nativeSrc":"8661:3:31","nodeType":"YulIdentifier","src":"8661:3:31"},{"kind":"number","nativeSrc":"8666:4:31","nodeType":"YulLiteral","src":"8666:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8657:3:31","nodeType":"YulIdentifier","src":"8657:3:31"},"nativeSrc":"8657:14:31","nodeType":"YulFunctionCall","src":"8657:14:31"},"variableNames":[{"name":"dst","nativeSrc":"8650:3:31","nodeType":"YulIdentifier","src":"8650:3:31"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"8490:3:31","nodeType":"YulIdentifier","src":"8490:3:31"},{"name":"srcEnd","nativeSrc":"8495:6:31","nodeType":"YulIdentifier","src":"8495:6:31"}],"functionName":{"name":"lt","nativeSrc":"8487:2:31","nodeType":"YulIdentifier","src":"8487:2:31"},"nativeSrc":"8487:15:31","nodeType":"YulFunctionCall","src":"8487:15:31"},"nativeSrc":"8461:220:31","nodeType":"YulForLoop","post":{"nativeSrc":"8503:25:31","nodeType":"YulBlock","src":"8503:25:31","statements":[{"nativeSrc":"8505:21:31","nodeType":"YulAssignment","src":"8505:21:31","value":{"arguments":[{"name":"src","nativeSrc":"8516:3:31","nodeType":"YulIdentifier","src":"8516:3:31"},{"kind":"number","nativeSrc":"8521:4:31","nodeType":"YulLiteral","src":"8521:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8512:3:31","nodeType":"YulIdentifier","src":"8512:3:31"},"nativeSrc":"8512:14:31","nodeType":"YulFunctionCall","src":"8512:14:31"},"variableNames":[{"name":"src","nativeSrc":"8505:3:31","nodeType":"YulIdentifier","src":"8505:3:31"}]}]},"pre":{"nativeSrc":"8465:21:31","nodeType":"YulBlock","src":"8465:21:31","statements":[{"nativeSrc":"8467:17:31","nodeType":"YulVariableDeclaration","src":"8467:17:31","value":{"name":"offset","nativeSrc":"8478:6:31","nodeType":"YulIdentifier","src":"8478:6:31"},"variables":[{"name":"src","nativeSrc":"8471:3:31","nodeType":"YulTypedName","src":"8471:3:31","type":""}]}]},"src":"8461:220:31"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7977:710:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8049:6:31","nodeType":"YulTypedName","src":"8049:6:31","type":""},{"name":"length","nativeSrc":"8057:6:31","nodeType":"YulTypedName","src":"8057:6:31","type":""},{"name":"end","nativeSrc":"8065:3:31","nodeType":"YulTypedName","src":"8065:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8073:5:31","nodeType":"YulTypedName","src":"8073:5:31","type":""}],"src":"7977:710:31"},{"body":{"nativeSrc":"8787:293:31","nodeType":"YulBlock","src":"8787:293:31","statements":[{"body":{"nativeSrc":"8836:83:31","nodeType":"YulBlock","src":"8836:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8838:77:31","nodeType":"YulIdentifier","src":"8838:77:31"},"nativeSrc":"8838:79:31","nodeType":"YulFunctionCall","src":"8838:79:31"},"nativeSrc":"8838:79:31","nodeType":"YulExpressionStatement","src":"8838:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8815:6:31","nodeType":"YulIdentifier","src":"8815:6:31"},{"kind":"number","nativeSrc":"8823:4:31","nodeType":"YulLiteral","src":"8823:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8811:3:31","nodeType":"YulIdentifier","src":"8811:3:31"},"nativeSrc":"8811:17:31","nodeType":"YulFunctionCall","src":"8811:17:31"},{"name":"end","nativeSrc":"8830:3:31","nodeType":"YulIdentifier","src":"8830:3:31"}],"functionName":{"name":"slt","nativeSrc":"8807:3:31","nodeType":"YulIdentifier","src":"8807:3:31"},"nativeSrc":"8807:27:31","nodeType":"YulFunctionCall","src":"8807:27:31"}],"functionName":{"name":"iszero","nativeSrc":"8800:6:31","nodeType":"YulIdentifier","src":"8800:6:31"},"nativeSrc":"8800:35:31","nodeType":"YulFunctionCall","src":"8800:35:31"},"nativeSrc":"8797:122:31","nodeType":"YulIf","src":"8797:122:31"},{"nativeSrc":"8928:34:31","nodeType":"YulVariableDeclaration","src":"8928:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"8955:6:31","nodeType":"YulIdentifier","src":"8955:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"8942:12:31","nodeType":"YulIdentifier","src":"8942:12:31"},"nativeSrc":"8942:20:31","nodeType":"YulFunctionCall","src":"8942:20:31"},"variables":[{"name":"length","nativeSrc":"8932:6:31","nodeType":"YulTypedName","src":"8932:6:31","type":""}]},{"nativeSrc":"8971:103:31","nodeType":"YulAssignment","src":"8971:103:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9047:6:31","nodeType":"YulIdentifier","src":"9047:6:31"},{"kind":"number","nativeSrc":"9055:4:31","nodeType":"YulLiteral","src":"9055:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9043:3:31","nodeType":"YulIdentifier","src":"9043:3:31"},"nativeSrc":"9043:17:31","nodeType":"YulFunctionCall","src":"9043:17:31"},{"name":"length","nativeSrc":"9062:6:31","nodeType":"YulIdentifier","src":"9062:6:31"},{"name":"end","nativeSrc":"9070:3:31","nodeType":"YulIdentifier","src":"9070:3:31"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8980:62:31","nodeType":"YulIdentifier","src":"8980:62:31"},"nativeSrc":"8980:94:31","nodeType":"YulFunctionCall","src":"8980:94:31"},"variableNames":[{"name":"array","nativeSrc":"8971:5:31","nodeType":"YulIdentifier","src":"8971:5:31"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8710:370:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8765:6:31","nodeType":"YulTypedName","src":"8765:6:31","type":""},{"name":"end","nativeSrc":"8773:3:31","nodeType":"YulTypedName","src":"8773:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8781:5:31","nodeType":"YulTypedName","src":"8781:5:31","type":""}],"src":"8710:370:31"},{"body":{"nativeSrc":"9152:241:31","nodeType":"YulBlock","src":"9152:241:31","statements":[{"body":{"nativeSrc":"9257:22:31","nodeType":"YulBlock","src":"9257:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9259:16:31","nodeType":"YulIdentifier","src":"9259:16:31"},"nativeSrc":"9259:18:31","nodeType":"YulFunctionCall","src":"9259:18:31"},"nativeSrc":"9259:18:31","nodeType":"YulExpressionStatement","src":"9259:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"9229:6:31","nodeType":"YulIdentifier","src":"9229:6:31"},{"kind":"number","nativeSrc":"9237:18:31","nodeType":"YulLiteral","src":"9237:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9226:2:31","nodeType":"YulIdentifier","src":"9226:2:31"},"nativeSrc":"9226:30:31","nodeType":"YulFunctionCall","src":"9226:30:31"},"nativeSrc":"9223:56:31","nodeType":"YulIf","src":"9223:56:31"},{"nativeSrc":"9289:37:31","nodeType":"YulAssignment","src":"9289:37:31","value":{"arguments":[{"name":"length","nativeSrc":"9319:6:31","nodeType":"YulIdentifier","src":"9319:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"9297:21:31","nodeType":"YulIdentifier","src":"9297:21:31"},"nativeSrc":"9297:29:31","nodeType":"YulFunctionCall","src":"9297:29:31"},"variableNames":[{"name":"size","nativeSrc":"9289:4:31","nodeType":"YulIdentifier","src":"9289:4:31"}]},{"nativeSrc":"9363:23:31","nodeType":"YulAssignment","src":"9363:23:31","value":{"arguments":[{"name":"size","nativeSrc":"9375:4:31","nodeType":"YulIdentifier","src":"9375:4:31"},{"kind":"number","nativeSrc":"9381:4:31","nodeType":"YulLiteral","src":"9381:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9371:3:31","nodeType":"YulIdentifier","src":"9371:3:31"},"nativeSrc":"9371:15:31","nodeType":"YulFunctionCall","src":"9371:15:31"},"variableNames":[{"name":"size","nativeSrc":"9363:4:31","nodeType":"YulIdentifier","src":"9363:4:31"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"9086:307:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"9136:6:31","nodeType":"YulTypedName","src":"9136:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"9147:4:31","nodeType":"YulTypedName","src":"9147:4:31","type":""}],"src":"9086:307:31"},{"body":{"nativeSrc":"9482:340:31","nodeType":"YulBlock","src":"9482:340:31","statements":[{"nativeSrc":"9492:74:31","nodeType":"YulAssignment","src":"9492:74:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"9558:6:31","nodeType":"YulIdentifier","src":"9558:6:31"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"9517:40:31","nodeType":"YulIdentifier","src":"9517:40:31"},"nativeSrc":"9517:48:31","nodeType":"YulFunctionCall","src":"9517:48:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"9501:15:31","nodeType":"YulIdentifier","src":"9501:15:31"},"nativeSrc":"9501:65:31","nodeType":"YulFunctionCall","src":"9501:65:31"},"variableNames":[{"name":"array","nativeSrc":"9492:5:31","nodeType":"YulIdentifier","src":"9492:5:31"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"9582:5:31","nodeType":"YulIdentifier","src":"9582:5:31"},{"name":"length","nativeSrc":"9589:6:31","nodeType":"YulIdentifier","src":"9589:6:31"}],"functionName":{"name":"mstore","nativeSrc":"9575:6:31","nodeType":"YulIdentifier","src":"9575:6:31"},"nativeSrc":"9575:21:31","nodeType":"YulFunctionCall","src":"9575:21:31"},"nativeSrc":"9575:21:31","nodeType":"YulExpressionStatement","src":"9575:21:31"},{"nativeSrc":"9605:27:31","nodeType":"YulVariableDeclaration","src":"9605:27:31","value":{"arguments":[{"name":"array","nativeSrc":"9620:5:31","nodeType":"YulIdentifier","src":"9620:5:31"},{"kind":"number","nativeSrc":"9627:4:31","nodeType":"YulLiteral","src":"9627:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9616:3:31","nodeType":"YulIdentifier","src":"9616:3:31"},"nativeSrc":"9616:16:31","nodeType":"YulFunctionCall","src":"9616:16:31"},"variables":[{"name":"dst","nativeSrc":"9609:3:31","nodeType":"YulTypedName","src":"9609:3:31","type":""}]},{"body":{"nativeSrc":"9670:83:31","nodeType":"YulBlock","src":"9670:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"9672:77:31","nodeType":"YulIdentifier","src":"9672:77:31"},"nativeSrc":"9672:79:31","nodeType":"YulFunctionCall","src":"9672:79:31"},"nativeSrc":"9672:79:31","nodeType":"YulExpressionStatement","src":"9672:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9651:3:31","nodeType":"YulIdentifier","src":"9651:3:31"},{"name":"length","nativeSrc":"9656:6:31","nodeType":"YulIdentifier","src":"9656:6:31"}],"functionName":{"name":"add","nativeSrc":"9647:3:31","nodeType":"YulIdentifier","src":"9647:3:31"},"nativeSrc":"9647:16:31","nodeType":"YulFunctionCall","src":"9647:16:31"},{"name":"end","nativeSrc":"9665:3:31","nodeType":"YulIdentifier","src":"9665:3:31"}],"functionName":{"name":"gt","nativeSrc":"9644:2:31","nodeType":"YulIdentifier","src":"9644:2:31"},"nativeSrc":"9644:25:31","nodeType":"YulFunctionCall","src":"9644:25:31"},"nativeSrc":"9641:112:31","nodeType":"YulIf","src":"9641:112:31"},{"expression":{"arguments":[{"name":"src","nativeSrc":"9799:3:31","nodeType":"YulIdentifier","src":"9799:3:31"},{"name":"dst","nativeSrc":"9804:3:31","nodeType":"YulIdentifier","src":"9804:3:31"},{"name":"length","nativeSrc":"9809:6:31","nodeType":"YulIdentifier","src":"9809:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"9762:36:31","nodeType":"YulIdentifier","src":"9762:36:31"},"nativeSrc":"9762:54:31","nodeType":"YulFunctionCall","src":"9762:54:31"},"nativeSrc":"9762:54:31","nodeType":"YulExpressionStatement","src":"9762:54:31"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"9399:423:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9455:3:31","nodeType":"YulTypedName","src":"9455:3:31","type":""},{"name":"length","nativeSrc":"9460:6:31","nodeType":"YulTypedName","src":"9460:6:31","type":""},{"name":"end","nativeSrc":"9468:3:31","nodeType":"YulTypedName","src":"9468:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"9476:5:31","nodeType":"YulTypedName","src":"9476:5:31","type":""}],"src":"9399:423:31"},{"body":{"nativeSrc":"9902:277:31","nodeType":"YulBlock","src":"9902:277:31","statements":[{"body":{"nativeSrc":"9951:83:31","nodeType":"YulBlock","src":"9951:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"9953:77:31","nodeType":"YulIdentifier","src":"9953:77:31"},"nativeSrc":"9953:79:31","nodeType":"YulFunctionCall","src":"9953:79:31"},"nativeSrc":"9953:79:31","nodeType":"YulExpressionStatement","src":"9953:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9930:6:31","nodeType":"YulIdentifier","src":"9930:6:31"},{"kind":"number","nativeSrc":"9938:4:31","nodeType":"YulLiteral","src":"9938:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"9926:3:31","nodeType":"YulIdentifier","src":"9926:3:31"},"nativeSrc":"9926:17:31","nodeType":"YulFunctionCall","src":"9926:17:31"},{"name":"end","nativeSrc":"9945:3:31","nodeType":"YulIdentifier","src":"9945:3:31"}],"functionName":{"name":"slt","nativeSrc":"9922:3:31","nodeType":"YulIdentifier","src":"9922:3:31"},"nativeSrc":"9922:27:31","nodeType":"YulFunctionCall","src":"9922:27:31"}],"functionName":{"name":"iszero","nativeSrc":"9915:6:31","nodeType":"YulIdentifier","src":"9915:6:31"},"nativeSrc":"9915:35:31","nodeType":"YulFunctionCall","src":"9915:35:31"},"nativeSrc":"9912:122:31","nodeType":"YulIf","src":"9912:122:31"},{"nativeSrc":"10043:34:31","nodeType":"YulVariableDeclaration","src":"10043:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"10070:6:31","nodeType":"YulIdentifier","src":"10070:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"10057:12:31","nodeType":"YulIdentifier","src":"10057:12:31"},"nativeSrc":"10057:20:31","nodeType":"YulFunctionCall","src":"10057:20:31"},"variables":[{"name":"length","nativeSrc":"10047:6:31","nodeType":"YulTypedName","src":"10047:6:31","type":""}]},{"nativeSrc":"10086:87:31","nodeType":"YulAssignment","src":"10086:87:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"10146:6:31","nodeType":"YulIdentifier","src":"10146:6:31"},{"kind":"number","nativeSrc":"10154:4:31","nodeType":"YulLiteral","src":"10154:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10142:3:31","nodeType":"YulIdentifier","src":"10142:3:31"},"nativeSrc":"10142:17:31","nodeType":"YulFunctionCall","src":"10142:17:31"},{"name":"length","nativeSrc":"10161:6:31","nodeType":"YulIdentifier","src":"10161:6:31"},{"name":"end","nativeSrc":"10169:3:31","nodeType":"YulIdentifier","src":"10169:3:31"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"10095:46:31","nodeType":"YulIdentifier","src":"10095:46:31"},"nativeSrc":"10095:78:31","nodeType":"YulFunctionCall","src":"10095:78:31"},"variableNames":[{"name":"array","nativeSrc":"10086:5:31","nodeType":"YulIdentifier","src":"10086:5:31"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"9841:338:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9880:6:31","nodeType":"YulTypedName","src":"9880:6:31","type":""},{"name":"end","nativeSrc":"9888:3:31","nodeType":"YulTypedName","src":"9888:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"9896:5:31","nodeType":"YulTypedName","src":"9896:5:31","type":""}],"src":"9841:338:31"},{"body":{"nativeSrc":"10361:1187:31","nodeType":"YulBlock","src":"10361:1187:31","statements":[{"body":{"nativeSrc":"10408:83:31","nodeType":"YulBlock","src":"10408:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10410:77:31","nodeType":"YulIdentifier","src":"10410:77:31"},"nativeSrc":"10410:79:31","nodeType":"YulFunctionCall","src":"10410:79:31"},"nativeSrc":"10410:79:31","nodeType":"YulExpressionStatement","src":"10410:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10382:7:31","nodeType":"YulIdentifier","src":"10382:7:31"},{"name":"headStart","nativeSrc":"10391:9:31","nodeType":"YulIdentifier","src":"10391:9:31"}],"functionName":{"name":"sub","nativeSrc":"10378:3:31","nodeType":"YulIdentifier","src":"10378:3:31"},"nativeSrc":"10378:23:31","nodeType":"YulFunctionCall","src":"10378:23:31"},{"kind":"number","nativeSrc":"10403:3:31","nodeType":"YulLiteral","src":"10403:3:31","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"10374:3:31","nodeType":"YulIdentifier","src":"10374:3:31"},"nativeSrc":"10374:33:31","nodeType":"YulFunctionCall","src":"10374:33:31"},"nativeSrc":"10371:120:31","nodeType":"YulIf","src":"10371:120:31"},{"nativeSrc":"10501:117:31","nodeType":"YulBlock","src":"10501:117:31","statements":[{"nativeSrc":"10516:15:31","nodeType":"YulVariableDeclaration","src":"10516:15:31","value":{"kind":"number","nativeSrc":"10530:1:31","nodeType":"YulLiteral","src":"10530:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10520:6:31","nodeType":"YulTypedName","src":"10520:6:31","type":""}]},{"nativeSrc":"10545:63:31","nodeType":"YulAssignment","src":"10545:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10580:9:31","nodeType":"YulIdentifier","src":"10580:9:31"},{"name":"offset","nativeSrc":"10591:6:31","nodeType":"YulIdentifier","src":"10591:6:31"}],"functionName":{"name":"add","nativeSrc":"10576:3:31","nodeType":"YulIdentifier","src":"10576:3:31"},"nativeSrc":"10576:22:31","nodeType":"YulFunctionCall","src":"10576:22:31"},{"name":"dataEnd","nativeSrc":"10600:7:31","nodeType":"YulIdentifier","src":"10600:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10555:20:31","nodeType":"YulIdentifier","src":"10555:20:31"},"nativeSrc":"10555:53:31","nodeType":"YulFunctionCall","src":"10555:53:31"},"variableNames":[{"name":"value0","nativeSrc":"10545:6:31","nodeType":"YulIdentifier","src":"10545:6:31"}]}]},{"nativeSrc":"10628:303:31","nodeType":"YulBlock","src":"10628:303:31","statements":[{"nativeSrc":"10643:46:31","nodeType":"YulVariableDeclaration","src":"10643:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10674:9:31","nodeType":"YulIdentifier","src":"10674:9:31"},{"kind":"number","nativeSrc":"10685:2:31","nodeType":"YulLiteral","src":"10685:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10670:3:31","nodeType":"YulIdentifier","src":"10670:3:31"},"nativeSrc":"10670:18:31","nodeType":"YulFunctionCall","src":"10670:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"10657:12:31","nodeType":"YulIdentifier","src":"10657:12:31"},"nativeSrc":"10657:32:31","nodeType":"YulFunctionCall","src":"10657:32:31"},"variables":[{"name":"offset","nativeSrc":"10647:6:31","nodeType":"YulTypedName","src":"10647:6:31","type":""}]},{"body":{"nativeSrc":"10736:83:31","nodeType":"YulBlock","src":"10736:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"10738:77:31","nodeType":"YulIdentifier","src":"10738:77:31"},"nativeSrc":"10738:79:31","nodeType":"YulFunctionCall","src":"10738:79:31"},"nativeSrc":"10738:79:31","nodeType":"YulExpressionStatement","src":"10738:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10708:6:31","nodeType":"YulIdentifier","src":"10708:6:31"},{"kind":"number","nativeSrc":"10716:18:31","nodeType":"YulLiteral","src":"10716:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10705:2:31","nodeType":"YulIdentifier","src":"10705:2:31"},"nativeSrc":"10705:30:31","nodeType":"YulFunctionCall","src":"10705:30:31"},"nativeSrc":"10702:117:31","nodeType":"YulIf","src":"10702:117:31"},{"nativeSrc":"10833:88:31","nodeType":"YulAssignment","src":"10833:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10893:9:31","nodeType":"YulIdentifier","src":"10893:9:31"},{"name":"offset","nativeSrc":"10904:6:31","nodeType":"YulIdentifier","src":"10904:6:31"}],"functionName":{"name":"add","nativeSrc":"10889:3:31","nodeType":"YulIdentifier","src":"10889:3:31"},"nativeSrc":"10889:22:31","nodeType":"YulFunctionCall","src":"10889:22:31"},{"name":"dataEnd","nativeSrc":"10913:7:31","nodeType":"YulIdentifier","src":"10913:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10843:45:31","nodeType":"YulIdentifier","src":"10843:45:31"},"nativeSrc":"10843:78:31","nodeType":"YulFunctionCall","src":"10843:78:31"},"variableNames":[{"name":"value1","nativeSrc":"10833:6:31","nodeType":"YulIdentifier","src":"10833:6:31"}]}]},{"nativeSrc":"10941:303:31","nodeType":"YulBlock","src":"10941:303:31","statements":[{"nativeSrc":"10956:46:31","nodeType":"YulVariableDeclaration","src":"10956:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10987:9:31","nodeType":"YulIdentifier","src":"10987:9:31"},{"kind":"number","nativeSrc":"10998:2:31","nodeType":"YulLiteral","src":"10998:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10983:3:31","nodeType":"YulIdentifier","src":"10983:3:31"},"nativeSrc":"10983:18:31","nodeType":"YulFunctionCall","src":"10983:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"10970:12:31","nodeType":"YulIdentifier","src":"10970:12:31"},"nativeSrc":"10970:32:31","nodeType":"YulFunctionCall","src":"10970:32:31"},"variables":[{"name":"offset","nativeSrc":"10960:6:31","nodeType":"YulTypedName","src":"10960:6:31","type":""}]},{"body":{"nativeSrc":"11049:83:31","nodeType":"YulBlock","src":"11049:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11051:77:31","nodeType":"YulIdentifier","src":"11051:77:31"},"nativeSrc":"11051:79:31","nodeType":"YulFunctionCall","src":"11051:79:31"},"nativeSrc":"11051:79:31","nodeType":"YulExpressionStatement","src":"11051:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11021:6:31","nodeType":"YulIdentifier","src":"11021:6:31"},{"kind":"number","nativeSrc":"11029:18:31","nodeType":"YulLiteral","src":"11029:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11018:2:31","nodeType":"YulIdentifier","src":"11018:2:31"},"nativeSrc":"11018:30:31","nodeType":"YulFunctionCall","src":"11018:30:31"},"nativeSrc":"11015:117:31","nodeType":"YulIf","src":"11015:117:31"},{"nativeSrc":"11146:88:31","nodeType":"YulAssignment","src":"11146:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11206:9:31","nodeType":"YulIdentifier","src":"11206:9:31"},{"name":"offset","nativeSrc":"11217:6:31","nodeType":"YulIdentifier","src":"11217:6:31"}],"functionName":{"name":"add","nativeSrc":"11202:3:31","nodeType":"YulIdentifier","src":"11202:3:31"},"nativeSrc":"11202:22:31","nodeType":"YulFunctionCall","src":"11202:22:31"},{"name":"dataEnd","nativeSrc":"11226:7:31","nodeType":"YulIdentifier","src":"11226:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11156:45:31","nodeType":"YulIdentifier","src":"11156:45:31"},"nativeSrc":"11156:78:31","nodeType":"YulFunctionCall","src":"11156:78:31"},"variableNames":[{"name":"value2","nativeSrc":"11146:6:31","nodeType":"YulIdentifier","src":"11146:6:31"}]}]},{"nativeSrc":"11254:287:31","nodeType":"YulBlock","src":"11254:287:31","statements":[{"nativeSrc":"11269:46:31","nodeType":"YulVariableDeclaration","src":"11269:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11300:9:31","nodeType":"YulIdentifier","src":"11300:9:31"},{"kind":"number","nativeSrc":"11311:2:31","nodeType":"YulLiteral","src":"11311:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11296:3:31","nodeType":"YulIdentifier","src":"11296:3:31"},"nativeSrc":"11296:18:31","nodeType":"YulFunctionCall","src":"11296:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"11283:12:31","nodeType":"YulIdentifier","src":"11283:12:31"},"nativeSrc":"11283:32:31","nodeType":"YulFunctionCall","src":"11283:32:31"},"variables":[{"name":"offset","nativeSrc":"11273:6:31","nodeType":"YulTypedName","src":"11273:6:31","type":""}]},{"body":{"nativeSrc":"11362:83:31","nodeType":"YulBlock","src":"11362:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11364:77:31","nodeType":"YulIdentifier","src":"11364:77:31"},"nativeSrc":"11364:79:31","nodeType":"YulFunctionCall","src":"11364:79:31"},"nativeSrc":"11364:79:31","nodeType":"YulExpressionStatement","src":"11364:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11334:6:31","nodeType":"YulIdentifier","src":"11334:6:31"},{"kind":"number","nativeSrc":"11342:18:31","nodeType":"YulLiteral","src":"11342:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11331:2:31","nodeType":"YulIdentifier","src":"11331:2:31"},"nativeSrc":"11331:30:31","nodeType":"YulFunctionCall","src":"11331:30:31"},"nativeSrc":"11328:117:31","nodeType":"YulIf","src":"11328:117:31"},{"nativeSrc":"11459:72:31","nodeType":"YulAssignment","src":"11459:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11503:9:31","nodeType":"YulIdentifier","src":"11503:9:31"},{"name":"offset","nativeSrc":"11514:6:31","nodeType":"YulIdentifier","src":"11514:6:31"}],"functionName":{"name":"add","nativeSrc":"11499:3:31","nodeType":"YulIdentifier","src":"11499:3:31"},"nativeSrc":"11499:22:31","nodeType":"YulFunctionCall","src":"11499:22:31"},{"name":"dataEnd","nativeSrc":"11523:7:31","nodeType":"YulIdentifier","src":"11523:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"11469:29:31","nodeType":"YulIdentifier","src":"11469:29:31"},"nativeSrc":"11469:62:31","nodeType":"YulFunctionCall","src":"11469:62:31"},"variableNames":[{"name":"value3","nativeSrc":"11459:6:31","nodeType":"YulIdentifier","src":"11459:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nativeSrc":"10185:1363:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10307:9:31","nodeType":"YulTypedName","src":"10307:9:31","type":""},{"name":"dataEnd","nativeSrc":"10318:7:31","nodeType":"YulTypedName","src":"10318:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10330:6:31","nodeType":"YulTypedName","src":"10330:6:31","type":""},{"name":"value1","nativeSrc":"10338:6:31","nodeType":"YulTypedName","src":"10338:6:31","type":""},{"name":"value2","nativeSrc":"10346:6:31","nodeType":"YulTypedName","src":"10346:6:31","type":""},{"name":"value3","nativeSrc":"10354:6:31","nodeType":"YulTypedName","src":"10354:6:31","type":""}],"src":"10185:1363:31"},{"body":{"nativeSrc":"11747:1316:31","nodeType":"YulBlock","src":"11747:1316:31","statements":[{"body":{"nativeSrc":"11794:83:31","nodeType":"YulBlock","src":"11794:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11796:77:31","nodeType":"YulIdentifier","src":"11796:77:31"},"nativeSrc":"11796:79:31","nodeType":"YulFunctionCall","src":"11796:79:31"},"nativeSrc":"11796:79:31","nodeType":"YulExpressionStatement","src":"11796:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11768:7:31","nodeType":"YulIdentifier","src":"11768:7:31"},{"name":"headStart","nativeSrc":"11777:9:31","nodeType":"YulIdentifier","src":"11777:9:31"}],"functionName":{"name":"sub","nativeSrc":"11764:3:31","nodeType":"YulIdentifier","src":"11764:3:31"},"nativeSrc":"11764:23:31","nodeType":"YulFunctionCall","src":"11764:23:31"},{"kind":"number","nativeSrc":"11789:3:31","nodeType":"YulLiteral","src":"11789:3:31","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"11760:3:31","nodeType":"YulIdentifier","src":"11760:3:31"},"nativeSrc":"11760:33:31","nodeType":"YulFunctionCall","src":"11760:33:31"},"nativeSrc":"11757:120:31","nodeType":"YulIf","src":"11757:120:31"},{"nativeSrc":"11887:117:31","nodeType":"YulBlock","src":"11887:117:31","statements":[{"nativeSrc":"11902:15:31","nodeType":"YulVariableDeclaration","src":"11902:15:31","value":{"kind":"number","nativeSrc":"11916:1:31","nodeType":"YulLiteral","src":"11916:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11906:6:31","nodeType":"YulTypedName","src":"11906:6:31","type":""}]},{"nativeSrc":"11931:63:31","nodeType":"YulAssignment","src":"11931:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11966:9:31","nodeType":"YulIdentifier","src":"11966:9:31"},{"name":"offset","nativeSrc":"11977:6:31","nodeType":"YulIdentifier","src":"11977:6:31"}],"functionName":{"name":"add","nativeSrc":"11962:3:31","nodeType":"YulIdentifier","src":"11962:3:31"},"nativeSrc":"11962:22:31","nodeType":"YulFunctionCall","src":"11962:22:31"},{"name":"dataEnd","nativeSrc":"11986:7:31","nodeType":"YulIdentifier","src":"11986:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11941:20:31","nodeType":"YulIdentifier","src":"11941:20:31"},"nativeSrc":"11941:53:31","nodeType":"YulFunctionCall","src":"11941:53:31"},"variableNames":[{"name":"value0","nativeSrc":"11931:6:31","nodeType":"YulIdentifier","src":"11931:6:31"}]}]},{"nativeSrc":"12014:118:31","nodeType":"YulBlock","src":"12014:118:31","statements":[{"nativeSrc":"12029:16:31","nodeType":"YulVariableDeclaration","src":"12029:16:31","value":{"kind":"number","nativeSrc":"12043:2:31","nodeType":"YulLiteral","src":"12043:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12033:6:31","nodeType":"YulTypedName","src":"12033:6:31","type":""}]},{"nativeSrc":"12059:63:31","nodeType":"YulAssignment","src":"12059:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12094:9:31","nodeType":"YulIdentifier","src":"12094:9:31"},{"name":"offset","nativeSrc":"12105:6:31","nodeType":"YulIdentifier","src":"12105:6:31"}],"functionName":{"name":"add","nativeSrc":"12090:3:31","nodeType":"YulIdentifier","src":"12090:3:31"},"nativeSrc":"12090:22:31","nodeType":"YulFunctionCall","src":"12090:22:31"},{"name":"dataEnd","nativeSrc":"12114:7:31","nodeType":"YulIdentifier","src":"12114:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12069:20:31","nodeType":"YulIdentifier","src":"12069:20:31"},"nativeSrc":"12069:53:31","nodeType":"YulFunctionCall","src":"12069:53:31"},"variableNames":[{"name":"value1","nativeSrc":"12059:6:31","nodeType":"YulIdentifier","src":"12059:6:31"}]}]},{"nativeSrc":"12142:303:31","nodeType":"YulBlock","src":"12142:303:31","statements":[{"nativeSrc":"12157:46:31","nodeType":"YulVariableDeclaration","src":"12157:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12188:9:31","nodeType":"YulIdentifier","src":"12188:9:31"},{"kind":"number","nativeSrc":"12199:2:31","nodeType":"YulLiteral","src":"12199:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12184:3:31","nodeType":"YulIdentifier","src":"12184:3:31"},"nativeSrc":"12184:18:31","nodeType":"YulFunctionCall","src":"12184:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"12171:12:31","nodeType":"YulIdentifier","src":"12171:12:31"},"nativeSrc":"12171:32:31","nodeType":"YulFunctionCall","src":"12171:32:31"},"variables":[{"name":"offset","nativeSrc":"12161:6:31","nodeType":"YulTypedName","src":"12161:6:31","type":""}]},{"body":{"nativeSrc":"12250:83:31","nodeType":"YulBlock","src":"12250:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12252:77:31","nodeType":"YulIdentifier","src":"12252:77:31"},"nativeSrc":"12252:79:31","nodeType":"YulFunctionCall","src":"12252:79:31"},"nativeSrc":"12252:79:31","nodeType":"YulExpressionStatement","src":"12252:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12222:6:31","nodeType":"YulIdentifier","src":"12222:6:31"},{"kind":"number","nativeSrc":"12230:18:31","nodeType":"YulLiteral","src":"12230:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12219:2:31","nodeType":"YulIdentifier","src":"12219:2:31"},"nativeSrc":"12219:30:31","nodeType":"YulFunctionCall","src":"12219:30:31"},"nativeSrc":"12216:117:31","nodeType":"YulIf","src":"12216:117:31"},{"nativeSrc":"12347:88:31","nodeType":"YulAssignment","src":"12347:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12407:9:31","nodeType":"YulIdentifier","src":"12407:9:31"},{"name":"offset","nativeSrc":"12418:6:31","nodeType":"YulIdentifier","src":"12418:6:31"}],"functionName":{"name":"add","nativeSrc":"12403:3:31","nodeType":"YulIdentifier","src":"12403:3:31"},"nativeSrc":"12403:22:31","nodeType":"YulFunctionCall","src":"12403:22:31"},{"name":"dataEnd","nativeSrc":"12427:7:31","nodeType":"YulIdentifier","src":"12427:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"12357:45:31","nodeType":"YulIdentifier","src":"12357:45:31"},"nativeSrc":"12357:78:31","nodeType":"YulFunctionCall","src":"12357:78:31"},"variableNames":[{"name":"value2","nativeSrc":"12347:6:31","nodeType":"YulIdentifier","src":"12347:6:31"}]}]},{"nativeSrc":"12455:303:31","nodeType":"YulBlock","src":"12455:303:31","statements":[{"nativeSrc":"12470:46:31","nodeType":"YulVariableDeclaration","src":"12470:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12501:9:31","nodeType":"YulIdentifier","src":"12501:9:31"},{"kind":"number","nativeSrc":"12512:2:31","nodeType":"YulLiteral","src":"12512:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12497:3:31","nodeType":"YulIdentifier","src":"12497:3:31"},"nativeSrc":"12497:18:31","nodeType":"YulFunctionCall","src":"12497:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"12484:12:31","nodeType":"YulIdentifier","src":"12484:12:31"},"nativeSrc":"12484:32:31","nodeType":"YulFunctionCall","src":"12484:32:31"},"variables":[{"name":"offset","nativeSrc":"12474:6:31","nodeType":"YulTypedName","src":"12474:6:31","type":""}]},{"body":{"nativeSrc":"12563:83:31","nodeType":"YulBlock","src":"12563:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12565:77:31","nodeType":"YulIdentifier","src":"12565:77:31"},"nativeSrc":"12565:79:31","nodeType":"YulFunctionCall","src":"12565:79:31"},"nativeSrc":"12565:79:31","nodeType":"YulExpressionStatement","src":"12565:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12535:6:31","nodeType":"YulIdentifier","src":"12535:6:31"},{"kind":"number","nativeSrc":"12543:18:31","nodeType":"YulLiteral","src":"12543:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12532:2:31","nodeType":"YulIdentifier","src":"12532:2:31"},"nativeSrc":"12532:30:31","nodeType":"YulFunctionCall","src":"12532:30:31"},"nativeSrc":"12529:117:31","nodeType":"YulIf","src":"12529:117:31"},{"nativeSrc":"12660:88:31","nodeType":"YulAssignment","src":"12660:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12720:9:31","nodeType":"YulIdentifier","src":"12720:9:31"},{"name":"offset","nativeSrc":"12731:6:31","nodeType":"YulIdentifier","src":"12731:6:31"}],"functionName":{"name":"add","nativeSrc":"12716:3:31","nodeType":"YulIdentifier","src":"12716:3:31"},"nativeSrc":"12716:22:31","nodeType":"YulFunctionCall","src":"12716:22:31"},{"name":"dataEnd","nativeSrc":"12740:7:31","nodeType":"YulIdentifier","src":"12740:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"12670:45:31","nodeType":"YulIdentifier","src":"12670:45:31"},"nativeSrc":"12670:78:31","nodeType":"YulFunctionCall","src":"12670:78:31"},"variableNames":[{"name":"value3","nativeSrc":"12660:6:31","nodeType":"YulIdentifier","src":"12660:6:31"}]}]},{"nativeSrc":"12768:288:31","nodeType":"YulBlock","src":"12768:288:31","statements":[{"nativeSrc":"12783:47:31","nodeType":"YulVariableDeclaration","src":"12783:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12814:9:31","nodeType":"YulIdentifier","src":"12814:9:31"},{"kind":"number","nativeSrc":"12825:3:31","nodeType":"YulLiteral","src":"12825:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12810:3:31","nodeType":"YulIdentifier","src":"12810:3:31"},"nativeSrc":"12810:19:31","nodeType":"YulFunctionCall","src":"12810:19:31"}],"functionName":{"name":"calldataload","nativeSrc":"12797:12:31","nodeType":"YulIdentifier","src":"12797:12:31"},"nativeSrc":"12797:33:31","nodeType":"YulFunctionCall","src":"12797:33:31"},"variables":[{"name":"offset","nativeSrc":"12787:6:31","nodeType":"YulTypedName","src":"12787:6:31","type":""}]},{"body":{"nativeSrc":"12877:83:31","nodeType":"YulBlock","src":"12877:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12879:77:31","nodeType":"YulIdentifier","src":"12879:77:31"},"nativeSrc":"12879:79:31","nodeType":"YulFunctionCall","src":"12879:79:31"},"nativeSrc":"12879:79:31","nodeType":"YulExpressionStatement","src":"12879:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12849:6:31","nodeType":"YulIdentifier","src":"12849:6:31"},{"kind":"number","nativeSrc":"12857:18:31","nodeType":"YulLiteral","src":"12857:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12846:2:31","nodeType":"YulIdentifier","src":"12846:2:31"},"nativeSrc":"12846:30:31","nodeType":"YulFunctionCall","src":"12846:30:31"},"nativeSrc":"12843:117:31","nodeType":"YulIf","src":"12843:117:31"},{"nativeSrc":"12974:72:31","nodeType":"YulAssignment","src":"12974:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13018:9:31","nodeType":"YulIdentifier","src":"13018:9:31"},{"name":"offset","nativeSrc":"13029:6:31","nodeType":"YulIdentifier","src":"13029:6:31"}],"functionName":{"name":"add","nativeSrc":"13014:3:31","nodeType":"YulIdentifier","src":"13014:3:31"},"nativeSrc":"13014:22:31","nodeType":"YulFunctionCall","src":"13014:22:31"},{"name":"dataEnd","nativeSrc":"13038:7:31","nodeType":"YulIdentifier","src":"13038:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"12984:29:31","nodeType":"YulIdentifier","src":"12984:29:31"},"nativeSrc":"12984:62:31","nodeType":"YulFunctionCall","src":"12984:62:31"},"variableNames":[{"name":"value4","nativeSrc":"12974:6:31","nodeType":"YulIdentifier","src":"12974:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nativeSrc":"11554:1509:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11685:9:31","nodeType":"YulTypedName","src":"11685:9:31","type":""},{"name":"dataEnd","nativeSrc":"11696:7:31","nodeType":"YulTypedName","src":"11696:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11708:6:31","nodeType":"YulTypedName","src":"11708:6:31","type":""},{"name":"value1","nativeSrc":"11716:6:31","nodeType":"YulTypedName","src":"11716:6:31","type":""},{"name":"value2","nativeSrc":"11724:6:31","nodeType":"YulTypedName","src":"11724:6:31","type":""},{"name":"value3","nativeSrc":"11732:6:31","nodeType":"YulTypedName","src":"11732:6:31","type":""},{"name":"value4","nativeSrc":"11740:6:31","nodeType":"YulTypedName","src":"11740:6:31","type":""}],"src":"11554:1509:31"},{"body":{"nativeSrc":"13134:53:31","nodeType":"YulBlock","src":"13134:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13151:3:31","nodeType":"YulIdentifier","src":"13151:3:31"},{"arguments":[{"name":"value","nativeSrc":"13174:5:31","nodeType":"YulIdentifier","src":"13174:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"13156:17:31","nodeType":"YulIdentifier","src":"13156:17:31"},"nativeSrc":"13156:24:31","nodeType":"YulFunctionCall","src":"13156:24:31"}],"functionName":{"name":"mstore","nativeSrc":"13144:6:31","nodeType":"YulIdentifier","src":"13144:6:31"},"nativeSrc":"13144:37:31","nodeType":"YulFunctionCall","src":"13144:37:31"},"nativeSrc":"13144:37:31","nodeType":"YulExpressionStatement","src":"13144:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13069:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13122:5:31","nodeType":"YulTypedName","src":"13122:5:31","type":""},{"name":"pos","nativeSrc":"13129:3:31","nodeType":"YulTypedName","src":"13129:3:31","type":""}],"src":"13069:118:31"},{"body":{"nativeSrc":"13291:124:31","nodeType":"YulBlock","src":"13291:124:31","statements":[{"nativeSrc":"13301:26:31","nodeType":"YulAssignment","src":"13301:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"13313:9:31","nodeType":"YulIdentifier","src":"13313:9:31"},{"kind":"number","nativeSrc":"13324:2:31","nodeType":"YulLiteral","src":"13324:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13309:3:31","nodeType":"YulIdentifier","src":"13309:3:31"},"nativeSrc":"13309:18:31","nodeType":"YulFunctionCall","src":"13309:18:31"},"variableNames":[{"name":"tail","nativeSrc":"13301:4:31","nodeType":"YulIdentifier","src":"13301:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13381:6:31","nodeType":"YulIdentifier","src":"13381:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"13394:9:31","nodeType":"YulIdentifier","src":"13394:9:31"},{"kind":"number","nativeSrc":"13405:1:31","nodeType":"YulLiteral","src":"13405:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13390:3:31","nodeType":"YulIdentifier","src":"13390:3:31"},"nativeSrc":"13390:17:31","nodeType":"YulFunctionCall","src":"13390:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13337:43:31","nodeType":"YulIdentifier","src":"13337:43:31"},"nativeSrc":"13337:71:31","nodeType":"YulFunctionCall","src":"13337:71:31"},"nativeSrc":"13337:71:31","nodeType":"YulExpressionStatement","src":"13337:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"13193:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13263:9:31","nodeType":"YulTypedName","src":"13263:9:31","type":""},{"name":"value0","nativeSrc":"13275:6:31","nodeType":"YulTypedName","src":"13275:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13286:4:31","nodeType":"YulTypedName","src":"13286:4:31","type":""}],"src":"13193:222:31"},{"body":{"nativeSrc":"13503:229:31","nodeType":"YulBlock","src":"13503:229:31","statements":[{"body":{"nativeSrc":"13608:22:31","nodeType":"YulBlock","src":"13608:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"13610:16:31","nodeType":"YulIdentifier","src":"13610:16:31"},"nativeSrc":"13610:18:31","nodeType":"YulFunctionCall","src":"13610:18:31"},"nativeSrc":"13610:18:31","nodeType":"YulExpressionStatement","src":"13610:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"13580:6:31","nodeType":"YulIdentifier","src":"13580:6:31"},{"kind":"number","nativeSrc":"13588:18:31","nodeType":"YulLiteral","src":"13588:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13577:2:31","nodeType":"YulIdentifier","src":"13577:2:31"},"nativeSrc":"13577:30:31","nodeType":"YulFunctionCall","src":"13577:30:31"},"nativeSrc":"13574:56:31","nodeType":"YulIf","src":"13574:56:31"},{"nativeSrc":"13640:25:31","nodeType":"YulAssignment","src":"13640:25:31","value":{"arguments":[{"name":"length","nativeSrc":"13652:6:31","nodeType":"YulIdentifier","src":"13652:6:31"},{"kind":"number","nativeSrc":"13660:4:31","nodeType":"YulLiteral","src":"13660:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"13648:3:31","nodeType":"YulIdentifier","src":"13648:3:31"},"nativeSrc":"13648:17:31","nodeType":"YulFunctionCall","src":"13648:17:31"},"variableNames":[{"name":"size","nativeSrc":"13640:4:31","nodeType":"YulIdentifier","src":"13640:4:31"}]},{"nativeSrc":"13702:23:31","nodeType":"YulAssignment","src":"13702:23:31","value":{"arguments":[{"name":"size","nativeSrc":"13714:4:31","nodeType":"YulIdentifier","src":"13714:4:31"},{"kind":"number","nativeSrc":"13720:4:31","nodeType":"YulLiteral","src":"13720:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13710:3:31","nodeType":"YulIdentifier","src":"13710:3:31"},"nativeSrc":"13710:15:31","nodeType":"YulFunctionCall","src":"13710:15:31"},"variableNames":[{"name":"size","nativeSrc":"13702:4:31","nodeType":"YulIdentifier","src":"13702:4:31"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"13421:311:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"13487:6:31","nodeType":"YulTypedName","src":"13487:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"13498:4:31","nodeType":"YulTypedName","src":"13498:4:31","type":""}],"src":"13421:311:31"},{"body":{"nativeSrc":"13857:608:31","nodeType":"YulBlock","src":"13857:608:31","statements":[{"nativeSrc":"13867:90:31","nodeType":"YulAssignment","src":"13867:90:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"13949:6:31","nodeType":"YulIdentifier","src":"13949:6:31"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"13892:56:31","nodeType":"YulIdentifier","src":"13892:56:31"},"nativeSrc":"13892:64:31","nodeType":"YulFunctionCall","src":"13892:64:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"13876:15:31","nodeType":"YulIdentifier","src":"13876:15:31"},"nativeSrc":"13876:81:31","nodeType":"YulFunctionCall","src":"13876:81:31"},"variableNames":[{"name":"array","nativeSrc":"13867:5:31","nodeType":"YulIdentifier","src":"13867:5:31"}]},{"nativeSrc":"13966:16:31","nodeType":"YulVariableDeclaration","src":"13966:16:31","value":{"name":"array","nativeSrc":"13977:5:31","nodeType":"YulIdentifier","src":"13977:5:31"},"variables":[{"name":"dst","nativeSrc":"13970:3:31","nodeType":"YulTypedName","src":"13970:3:31","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"13999:5:31","nodeType":"YulIdentifier","src":"13999:5:31"},{"name":"length","nativeSrc":"14006:6:31","nodeType":"YulIdentifier","src":"14006:6:31"}],"functionName":{"name":"mstore","nativeSrc":"13992:6:31","nodeType":"YulIdentifier","src":"13992:6:31"},"nativeSrc":"13992:21:31","nodeType":"YulFunctionCall","src":"13992:21:31"},"nativeSrc":"13992:21:31","nodeType":"YulExpressionStatement","src":"13992:21:31"},{"nativeSrc":"14022:23:31","nodeType":"YulAssignment","src":"14022:23:31","value":{"arguments":[{"name":"array","nativeSrc":"14033:5:31","nodeType":"YulIdentifier","src":"14033:5:31"},{"kind":"number","nativeSrc":"14040:4:31","nodeType":"YulLiteral","src":"14040:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14029:3:31","nodeType":"YulIdentifier","src":"14029:3:31"},"nativeSrc":"14029:16:31","nodeType":"YulFunctionCall","src":"14029:16:31"},"variableNames":[{"name":"dst","nativeSrc":"14022:3:31","nodeType":"YulIdentifier","src":"14022:3:31"}]},{"nativeSrc":"14055:44:31","nodeType":"YulVariableDeclaration","src":"14055:44:31","value":{"arguments":[{"name":"offset","nativeSrc":"14073:6:31","nodeType":"YulIdentifier","src":"14073:6:31"},{"arguments":[{"name":"length","nativeSrc":"14085:6:31","nodeType":"YulIdentifier","src":"14085:6:31"},{"kind":"number","nativeSrc":"14093:4:31","nodeType":"YulLiteral","src":"14093:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"14081:3:31","nodeType":"YulIdentifier","src":"14081:3:31"},"nativeSrc":"14081:17:31","nodeType":"YulFunctionCall","src":"14081:17:31"}],"functionName":{"name":"add","nativeSrc":"14069:3:31","nodeType":"YulIdentifier","src":"14069:3:31"},"nativeSrc":"14069:30:31","nodeType":"YulFunctionCall","src":"14069:30:31"},"variables":[{"name":"srcEnd","nativeSrc":"14059:6:31","nodeType":"YulTypedName","src":"14059:6:31","type":""}]},{"body":{"nativeSrc":"14127:103:31","nodeType":"YulBlock","src":"14127:103:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"14141:77:31","nodeType":"YulIdentifier","src":"14141:77:31"},"nativeSrc":"14141:79:31","nodeType":"YulFunctionCall","src":"14141:79:31"},"nativeSrc":"14141:79:31","nodeType":"YulExpressionStatement","src":"14141:79:31"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"14114:6:31","nodeType":"YulIdentifier","src":"14114:6:31"},{"name":"end","nativeSrc":"14122:3:31","nodeType":"YulIdentifier","src":"14122:3:31"}],"functionName":{"name":"gt","nativeSrc":"14111:2:31","nodeType":"YulIdentifier","src":"14111:2:31"},"nativeSrc":"14111:15:31","nodeType":"YulFunctionCall","src":"14111:15:31"},"nativeSrc":"14108:122:31","nodeType":"YulIf","src":"14108:122:31"},{"body":{"nativeSrc":"14315:144:31","nodeType":"YulBlock","src":"14315:144:31","statements":[{"nativeSrc":"14330:21:31","nodeType":"YulVariableDeclaration","src":"14330:21:31","value":{"name":"src","nativeSrc":"14348:3:31","nodeType":"YulIdentifier","src":"14348:3:31"},"variables":[{"name":"elementPos","nativeSrc":"14334:10:31","nodeType":"YulTypedName","src":"14334:10:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"14372:3:31","nodeType":"YulIdentifier","src":"14372:3:31"},{"arguments":[{"name":"elementPos","nativeSrc":"14398:10:31","nodeType":"YulIdentifier","src":"14398:10:31"},{"name":"end","nativeSrc":"14410:3:31","nodeType":"YulIdentifier","src":"14410:3:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14377:20:31","nodeType":"YulIdentifier","src":"14377:20:31"},"nativeSrc":"14377:37:31","nodeType":"YulFunctionCall","src":"14377:37:31"}],"functionName":{"name":"mstore","nativeSrc":"14365:6:31","nodeType":"YulIdentifier","src":"14365:6:31"},"nativeSrc":"14365:50:31","nodeType":"YulFunctionCall","src":"14365:50:31"},"nativeSrc":"14365:50:31","nodeType":"YulExpressionStatement","src":"14365:50:31"},{"nativeSrc":"14428:21:31","nodeType":"YulAssignment","src":"14428:21:31","value":{"arguments":[{"name":"dst","nativeSrc":"14439:3:31","nodeType":"YulIdentifier","src":"14439:3:31"},{"kind":"number","nativeSrc":"14444:4:31","nodeType":"YulLiteral","src":"14444:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14435:3:31","nodeType":"YulIdentifier","src":"14435:3:31"},"nativeSrc":"14435:14:31","nodeType":"YulFunctionCall","src":"14435:14:31"},"variableNames":[{"name":"dst","nativeSrc":"14428:3:31","nodeType":"YulIdentifier","src":"14428:3:31"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"14268:3:31","nodeType":"YulIdentifier","src":"14268:3:31"},{"name":"srcEnd","nativeSrc":"14273:6:31","nodeType":"YulIdentifier","src":"14273:6:31"}],"functionName":{"name":"lt","nativeSrc":"14265:2:31","nodeType":"YulIdentifier","src":"14265:2:31"},"nativeSrc":"14265:15:31","nodeType":"YulFunctionCall","src":"14265:15:31"},"nativeSrc":"14239:220:31","nodeType":"YulForLoop","post":{"nativeSrc":"14281:25:31","nodeType":"YulBlock","src":"14281:25:31","statements":[{"nativeSrc":"14283:21:31","nodeType":"YulAssignment","src":"14283:21:31","value":{"arguments":[{"name":"src","nativeSrc":"14294:3:31","nodeType":"YulIdentifier","src":"14294:3:31"},{"kind":"number","nativeSrc":"14299:4:31","nodeType":"YulLiteral","src":"14299:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14290:3:31","nodeType":"YulIdentifier","src":"14290:3:31"},"nativeSrc":"14290:14:31","nodeType":"YulFunctionCall","src":"14290:14:31"},"variableNames":[{"name":"src","nativeSrc":"14283:3:31","nodeType":"YulIdentifier","src":"14283:3:31"}]}]},"pre":{"nativeSrc":"14243:21:31","nodeType":"YulBlock","src":"14243:21:31","statements":[{"nativeSrc":"14245:17:31","nodeType":"YulVariableDeclaration","src":"14245:17:31","value":{"name":"offset","nativeSrc":"14256:6:31","nodeType":"YulIdentifier","src":"14256:6:31"},"variables":[{"name":"src","nativeSrc":"14249:3:31","nodeType":"YulTypedName","src":"14249:3:31","type":""}]}]},"src":"14239:220:31"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"13755:710:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"13827:6:31","nodeType":"YulTypedName","src":"13827:6:31","type":""},{"name":"length","nativeSrc":"13835:6:31","nodeType":"YulTypedName","src":"13835:6:31","type":""},{"name":"end","nativeSrc":"13843:3:31","nodeType":"YulTypedName","src":"13843:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"13851:5:31","nodeType":"YulTypedName","src":"13851:5:31","type":""}],"src":"13755:710:31"},{"body":{"nativeSrc":"14565:293:31","nodeType":"YulBlock","src":"14565:293:31","statements":[{"body":{"nativeSrc":"14614:83:31","nodeType":"YulBlock","src":"14614:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"14616:77:31","nodeType":"YulIdentifier","src":"14616:77:31"},"nativeSrc":"14616:79:31","nodeType":"YulFunctionCall","src":"14616:79:31"},"nativeSrc":"14616:79:31","nodeType":"YulExpressionStatement","src":"14616:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"14593:6:31","nodeType":"YulIdentifier","src":"14593:6:31"},{"kind":"number","nativeSrc":"14601:4:31","nodeType":"YulLiteral","src":"14601:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"14589:3:31","nodeType":"YulIdentifier","src":"14589:3:31"},"nativeSrc":"14589:17:31","nodeType":"YulFunctionCall","src":"14589:17:31"},{"name":"end","nativeSrc":"14608:3:31","nodeType":"YulIdentifier","src":"14608:3:31"}],"functionName":{"name":"slt","nativeSrc":"14585:3:31","nodeType":"YulIdentifier","src":"14585:3:31"},"nativeSrc":"14585:27:31","nodeType":"YulFunctionCall","src":"14585:27:31"}],"functionName":{"name":"iszero","nativeSrc":"14578:6:31","nodeType":"YulIdentifier","src":"14578:6:31"},"nativeSrc":"14578:35:31","nodeType":"YulFunctionCall","src":"14578:35:31"},"nativeSrc":"14575:122:31","nodeType":"YulIf","src":"14575:122:31"},{"nativeSrc":"14706:34:31","nodeType":"YulVariableDeclaration","src":"14706:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"14733:6:31","nodeType":"YulIdentifier","src":"14733:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"14720:12:31","nodeType":"YulIdentifier","src":"14720:12:31"},"nativeSrc":"14720:20:31","nodeType":"YulFunctionCall","src":"14720:20:31"},"variables":[{"name":"length","nativeSrc":"14710:6:31","nodeType":"YulTypedName","src":"14710:6:31","type":""}]},{"nativeSrc":"14749:103:31","nodeType":"YulAssignment","src":"14749:103:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"14825:6:31","nodeType":"YulIdentifier","src":"14825:6:31"},{"kind":"number","nativeSrc":"14833:4:31","nodeType":"YulLiteral","src":"14833:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14821:3:31","nodeType":"YulIdentifier","src":"14821:3:31"},"nativeSrc":"14821:17:31","nodeType":"YulFunctionCall","src":"14821:17:31"},{"name":"length","nativeSrc":"14840:6:31","nodeType":"YulIdentifier","src":"14840:6:31"},{"name":"end","nativeSrc":"14848:3:31","nodeType":"YulIdentifier","src":"14848:3:31"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"14758:62:31","nodeType":"YulIdentifier","src":"14758:62:31"},"nativeSrc":"14758:94:31","nodeType":"YulFunctionCall","src":"14758:94:31"},"variableNames":[{"name":"array","nativeSrc":"14749:5:31","nodeType":"YulIdentifier","src":"14749:5:31"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"14488:370:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14543:6:31","nodeType":"YulTypedName","src":"14543:6:31","type":""},{"name":"end","nativeSrc":"14551:3:31","nodeType":"YulTypedName","src":"14551:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"14559:5:31","nodeType":"YulTypedName","src":"14559:5:31","type":""}],"src":"14488:370:31"},{"body":{"nativeSrc":"14997:761:31","nodeType":"YulBlock","src":"14997:761:31","statements":[{"body":{"nativeSrc":"15043:83:31","nodeType":"YulBlock","src":"15043:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15045:77:31","nodeType":"YulIdentifier","src":"15045:77:31"},"nativeSrc":"15045:79:31","nodeType":"YulFunctionCall","src":"15045:79:31"},"nativeSrc":"15045:79:31","nodeType":"YulExpressionStatement","src":"15045:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15018:7:31","nodeType":"YulIdentifier","src":"15018:7:31"},{"name":"headStart","nativeSrc":"15027:9:31","nodeType":"YulIdentifier","src":"15027:9:31"}],"functionName":{"name":"sub","nativeSrc":"15014:3:31","nodeType":"YulIdentifier","src":"15014:3:31"},"nativeSrc":"15014:23:31","nodeType":"YulFunctionCall","src":"15014:23:31"},{"kind":"number","nativeSrc":"15039:2:31","nodeType":"YulLiteral","src":"15039:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"15010:3:31","nodeType":"YulIdentifier","src":"15010:3:31"},"nativeSrc":"15010:32:31","nodeType":"YulFunctionCall","src":"15010:32:31"},"nativeSrc":"15007:119:31","nodeType":"YulIf","src":"15007:119:31"},{"nativeSrc":"15136:302:31","nodeType":"YulBlock","src":"15136:302:31","statements":[{"nativeSrc":"15151:45:31","nodeType":"YulVariableDeclaration","src":"15151:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15182:9:31","nodeType":"YulIdentifier","src":"15182:9:31"},{"kind":"number","nativeSrc":"15193:1:31","nodeType":"YulLiteral","src":"15193:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15178:3:31","nodeType":"YulIdentifier","src":"15178:3:31"},"nativeSrc":"15178:17:31","nodeType":"YulFunctionCall","src":"15178:17:31"}],"functionName":{"name":"calldataload","nativeSrc":"15165:12:31","nodeType":"YulIdentifier","src":"15165:12:31"},"nativeSrc":"15165:31:31","nodeType":"YulFunctionCall","src":"15165:31:31"},"variables":[{"name":"offset","nativeSrc":"15155:6:31","nodeType":"YulTypedName","src":"15155:6:31","type":""}]},{"body":{"nativeSrc":"15243:83:31","nodeType":"YulBlock","src":"15243:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"15245:77:31","nodeType":"YulIdentifier","src":"15245:77:31"},"nativeSrc":"15245:79:31","nodeType":"YulFunctionCall","src":"15245:79:31"},"nativeSrc":"15245:79:31","nodeType":"YulExpressionStatement","src":"15245:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"15215:6:31","nodeType":"YulIdentifier","src":"15215:6:31"},{"kind":"number","nativeSrc":"15223:18:31","nodeType":"YulLiteral","src":"15223:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15212:2:31","nodeType":"YulIdentifier","src":"15212:2:31"},"nativeSrc":"15212:30:31","nodeType":"YulFunctionCall","src":"15212:30:31"},"nativeSrc":"15209:117:31","nodeType":"YulIf","src":"15209:117:31"},{"nativeSrc":"15340:88:31","nodeType":"YulAssignment","src":"15340:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15400:9:31","nodeType":"YulIdentifier","src":"15400:9:31"},{"name":"offset","nativeSrc":"15411:6:31","nodeType":"YulIdentifier","src":"15411:6:31"}],"functionName":{"name":"add","nativeSrc":"15396:3:31","nodeType":"YulIdentifier","src":"15396:3:31"},"nativeSrc":"15396:22:31","nodeType":"YulFunctionCall","src":"15396:22:31"},{"name":"dataEnd","nativeSrc":"15420:7:31","nodeType":"YulIdentifier","src":"15420:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"15350:45:31","nodeType":"YulIdentifier","src":"15350:45:31"},"nativeSrc":"15350:78:31","nodeType":"YulFunctionCall","src":"15350:78:31"},"variableNames":[{"name":"value0","nativeSrc":"15340:6:31","nodeType":"YulIdentifier","src":"15340:6:31"}]}]},{"nativeSrc":"15448:303:31","nodeType":"YulBlock","src":"15448:303:31","statements":[{"nativeSrc":"15463:46:31","nodeType":"YulVariableDeclaration","src":"15463:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15494:9:31","nodeType":"YulIdentifier","src":"15494:9:31"},{"kind":"number","nativeSrc":"15505:2:31","nodeType":"YulLiteral","src":"15505:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15490:3:31","nodeType":"YulIdentifier","src":"15490:3:31"},"nativeSrc":"15490:18:31","nodeType":"YulFunctionCall","src":"15490:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"15477:12:31","nodeType":"YulIdentifier","src":"15477:12:31"},"nativeSrc":"15477:32:31","nodeType":"YulFunctionCall","src":"15477:32:31"},"variables":[{"name":"offset","nativeSrc":"15467:6:31","nodeType":"YulTypedName","src":"15467:6:31","type":""}]},{"body":{"nativeSrc":"15556:83:31","nodeType":"YulBlock","src":"15556:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"15558:77:31","nodeType":"YulIdentifier","src":"15558:77:31"},"nativeSrc":"15558:79:31","nodeType":"YulFunctionCall","src":"15558:79:31"},"nativeSrc":"15558:79:31","nodeType":"YulExpressionStatement","src":"15558:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"15528:6:31","nodeType":"YulIdentifier","src":"15528:6:31"},{"kind":"number","nativeSrc":"15536:18:31","nodeType":"YulLiteral","src":"15536:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15525:2:31","nodeType":"YulIdentifier","src":"15525:2:31"},"nativeSrc":"15525:30:31","nodeType":"YulFunctionCall","src":"15525:30:31"},"nativeSrc":"15522:117:31","nodeType":"YulIf","src":"15522:117:31"},{"nativeSrc":"15653:88:31","nodeType":"YulAssignment","src":"15653:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15713:9:31","nodeType":"YulIdentifier","src":"15713:9:31"},{"name":"offset","nativeSrc":"15724:6:31","nodeType":"YulIdentifier","src":"15724:6:31"}],"functionName":{"name":"add","nativeSrc":"15709:3:31","nodeType":"YulIdentifier","src":"15709:3:31"},"nativeSrc":"15709:22:31","nodeType":"YulFunctionCall","src":"15709:22:31"},{"name":"dataEnd","nativeSrc":"15733:7:31","nodeType":"YulIdentifier","src":"15733:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"15663:45:31","nodeType":"YulIdentifier","src":"15663:45:31"},"nativeSrc":"15663:78:31","nodeType":"YulFunctionCall","src":"15663:78:31"},"variableNames":[{"name":"value1","nativeSrc":"15653:6:31","nodeType":"YulIdentifier","src":"15653:6:31"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14864:894:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14959:9:31","nodeType":"YulTypedName","src":"14959:9:31","type":""},{"name":"dataEnd","nativeSrc":"14970:7:31","nodeType":"YulTypedName","src":"14970:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14982:6:31","nodeType":"YulTypedName","src":"14982:6:31","type":""},{"name":"value1","nativeSrc":"14990:6:31","nodeType":"YulTypedName","src":"14990:6:31","type":""}],"src":"14864:894:31"},{"body":{"nativeSrc":"15838:40:31","nodeType":"YulBlock","src":"15838:40:31","statements":[{"nativeSrc":"15849:22:31","nodeType":"YulAssignment","src":"15849:22:31","value":{"arguments":[{"name":"value","nativeSrc":"15865:5:31","nodeType":"YulIdentifier","src":"15865:5:31"}],"functionName":{"name":"mload","nativeSrc":"15859:5:31","nodeType":"YulIdentifier","src":"15859:5:31"},"nativeSrc":"15859:12:31","nodeType":"YulFunctionCall","src":"15859:12:31"},"variableNames":[{"name":"length","nativeSrc":"15849:6:31","nodeType":"YulIdentifier","src":"15849:6:31"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"15764:114:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15821:5:31","nodeType":"YulTypedName","src":"15821:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"15831:6:31","nodeType":"YulTypedName","src":"15831:6:31","type":""}],"src":"15764:114:31"},{"body":{"nativeSrc":"15995:73:31","nodeType":"YulBlock","src":"15995:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16012:3:31","nodeType":"YulIdentifier","src":"16012:3:31"},{"name":"length","nativeSrc":"16017:6:31","nodeType":"YulIdentifier","src":"16017:6:31"}],"functionName":{"name":"mstore","nativeSrc":"16005:6:31","nodeType":"YulIdentifier","src":"16005:6:31"},"nativeSrc":"16005:19:31","nodeType":"YulFunctionCall","src":"16005:19:31"},"nativeSrc":"16005:19:31","nodeType":"YulExpressionStatement","src":"16005:19:31"},{"nativeSrc":"16033:29:31","nodeType":"YulAssignment","src":"16033:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"16052:3:31","nodeType":"YulIdentifier","src":"16052:3:31"},{"kind":"number","nativeSrc":"16057:4:31","nodeType":"YulLiteral","src":"16057:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16048:3:31","nodeType":"YulIdentifier","src":"16048:3:31"},"nativeSrc":"16048:14:31","nodeType":"YulFunctionCall","src":"16048:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"16033:11:31","nodeType":"YulIdentifier","src":"16033:11:31"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"15884:184:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15967:3:31","nodeType":"YulTypedName","src":"15967:3:31","type":""},{"name":"length","nativeSrc":"15972:6:31","nodeType":"YulTypedName","src":"15972:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"15983:11:31","nodeType":"YulTypedName","src":"15983:11:31","type":""}],"src":"15884:184:31"},{"body":{"nativeSrc":"16146:60:31","nodeType":"YulBlock","src":"16146:60:31","statements":[{"nativeSrc":"16156:11:31","nodeType":"YulAssignment","src":"16156:11:31","value":{"name":"ptr","nativeSrc":"16164:3:31","nodeType":"YulIdentifier","src":"16164:3:31"},"variableNames":[{"name":"data","nativeSrc":"16156:4:31","nodeType":"YulIdentifier","src":"16156:4:31"}]},{"nativeSrc":"16177:22:31","nodeType":"YulAssignment","src":"16177:22:31","value":{"arguments":[{"name":"ptr","nativeSrc":"16189:3:31","nodeType":"YulIdentifier","src":"16189:3:31"},{"kind":"number","nativeSrc":"16194:4:31","nodeType":"YulLiteral","src":"16194:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16185:3:31","nodeType":"YulIdentifier","src":"16185:3:31"},"nativeSrc":"16185:14:31","nodeType":"YulFunctionCall","src":"16185:14:31"},"variableNames":[{"name":"data","nativeSrc":"16177:4:31","nodeType":"YulIdentifier","src":"16177:4:31"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"16074:132:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"16133:3:31","nodeType":"YulTypedName","src":"16133:3:31","type":""}],"returnVariables":[{"name":"data","nativeSrc":"16141:4:31","nodeType":"YulTypedName","src":"16141:4:31","type":""}],"src":"16074:132:31"},{"body":{"nativeSrc":"16267:53:31","nodeType":"YulBlock","src":"16267:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16284:3:31","nodeType":"YulIdentifier","src":"16284:3:31"},{"arguments":[{"name":"value","nativeSrc":"16307:5:31","nodeType":"YulIdentifier","src":"16307:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16289:17:31","nodeType":"YulIdentifier","src":"16289:17:31"},"nativeSrc":"16289:24:31","nodeType":"YulFunctionCall","src":"16289:24:31"}],"functionName":{"name":"mstore","nativeSrc":"16277:6:31","nodeType":"YulIdentifier","src":"16277:6:31"},"nativeSrc":"16277:37:31","nodeType":"YulFunctionCall","src":"16277:37:31"},"nativeSrc":"16277:37:31","nodeType":"YulExpressionStatement","src":"16277:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"16212:108:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16255:5:31","nodeType":"YulTypedName","src":"16255:5:31","type":""},{"name":"pos","nativeSrc":"16262:3:31","nodeType":"YulTypedName","src":"16262:3:31","type":""}],"src":"16212:108:31"},{"body":{"nativeSrc":"16406:99:31","nodeType":"YulBlock","src":"16406:99:31","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"16450:6:31","nodeType":"YulIdentifier","src":"16450:6:31"},{"name":"pos","nativeSrc":"16458:3:31","nodeType":"YulIdentifier","src":"16458:3:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"16416:33:31","nodeType":"YulIdentifier","src":"16416:33:31"},"nativeSrc":"16416:46:31","nodeType":"YulFunctionCall","src":"16416:46:31"},"nativeSrc":"16416:46:31","nodeType":"YulExpressionStatement","src":"16416:46:31"},{"nativeSrc":"16471:28:31","nodeType":"YulAssignment","src":"16471:28:31","value":{"arguments":[{"name":"pos","nativeSrc":"16489:3:31","nodeType":"YulIdentifier","src":"16489:3:31"},{"kind":"number","nativeSrc":"16494:4:31","nodeType":"YulLiteral","src":"16494:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16485:3:31","nodeType":"YulIdentifier","src":"16485:3:31"},"nativeSrc":"16485:14:31","nodeType":"YulFunctionCall","src":"16485:14:31"},"variableNames":[{"name":"updatedPos","nativeSrc":"16471:10:31","nodeType":"YulIdentifier","src":"16471:10:31"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"16326:179:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"16379:6:31","nodeType":"YulTypedName","src":"16379:6:31","type":""},{"name":"pos","nativeSrc":"16387:3:31","nodeType":"YulTypedName","src":"16387:3:31","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"16395:10:31","nodeType":"YulTypedName","src":"16395:10:31","type":""}],"src":"16326:179:31"},{"body":{"nativeSrc":"16586:38:31","nodeType":"YulBlock","src":"16586:38:31","statements":[{"nativeSrc":"16596:22:31","nodeType":"YulAssignment","src":"16596:22:31","value":{"arguments":[{"name":"ptr","nativeSrc":"16608:3:31","nodeType":"YulIdentifier","src":"16608:3:31"},{"kind":"number","nativeSrc":"16613:4:31","nodeType":"YulLiteral","src":"16613:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16604:3:31","nodeType":"YulIdentifier","src":"16604:3:31"},"nativeSrc":"16604:14:31","nodeType":"YulFunctionCall","src":"16604:14:31"},"variableNames":[{"name":"next","nativeSrc":"16596:4:31","nodeType":"YulIdentifier","src":"16596:4:31"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"16511:113:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"16573:3:31","nodeType":"YulTypedName","src":"16573:3:31","type":""}],"returnVariables":[{"name":"next","nativeSrc":"16581:4:31","nodeType":"YulTypedName","src":"16581:4:31","type":""}],"src":"16511:113:31"},{"body":{"nativeSrc":"16784:608:31","nodeType":"YulBlock","src":"16784:608:31","statements":[{"nativeSrc":"16794:68:31","nodeType":"YulVariableDeclaration","src":"16794:68:31","value":{"arguments":[{"name":"value","nativeSrc":"16856:5:31","nodeType":"YulIdentifier","src":"16856:5:31"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"16808:47:31","nodeType":"YulIdentifier","src":"16808:47:31"},"nativeSrc":"16808:54:31","nodeType":"YulFunctionCall","src":"16808:54:31"},"variables":[{"name":"length","nativeSrc":"16798:6:31","nodeType":"YulTypedName","src":"16798:6:31","type":""}]},{"nativeSrc":"16871:93:31","nodeType":"YulAssignment","src":"16871:93:31","value":{"arguments":[{"name":"pos","nativeSrc":"16952:3:31","nodeType":"YulIdentifier","src":"16952:3:31"},{"name":"length","nativeSrc":"16957:6:31","nodeType":"YulIdentifier","src":"16957:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"16878:73:31","nodeType":"YulIdentifier","src":"16878:73:31"},"nativeSrc":"16878:86:31","nodeType":"YulFunctionCall","src":"16878:86:31"},"variableNames":[{"name":"pos","nativeSrc":"16871:3:31","nodeType":"YulIdentifier","src":"16871:3:31"}]},{"nativeSrc":"16973:71:31","nodeType":"YulVariableDeclaration","src":"16973:71:31","value":{"arguments":[{"name":"value","nativeSrc":"17038:5:31","nodeType":"YulIdentifier","src":"17038:5:31"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"16988:49:31","nodeType":"YulIdentifier","src":"16988:49:31"},"nativeSrc":"16988:56:31","nodeType":"YulFunctionCall","src":"16988:56:31"},"variables":[{"name":"baseRef","nativeSrc":"16977:7:31","nodeType":"YulTypedName","src":"16977:7:31","type":""}]},{"nativeSrc":"17053:21:31","nodeType":"YulVariableDeclaration","src":"17053:21:31","value":{"name":"baseRef","nativeSrc":"17067:7:31","nodeType":"YulIdentifier","src":"17067:7:31"},"variables":[{"name":"srcPtr","nativeSrc":"17057:6:31","nodeType":"YulTypedName","src":"17057:6:31","type":""}]},{"body":{"nativeSrc":"17143:224:31","nodeType":"YulBlock","src":"17143:224:31","statements":[{"nativeSrc":"17157:34:31","nodeType":"YulVariableDeclaration","src":"17157:34:31","value":{"arguments":[{"name":"srcPtr","nativeSrc":"17184:6:31","nodeType":"YulIdentifier","src":"17184:6:31"}],"functionName":{"name":"mload","nativeSrc":"17178:5:31","nodeType":"YulIdentifier","src":"17178:5:31"},"nativeSrc":"17178:13:31","nodeType":"YulFunctionCall","src":"17178:13:31"},"variables":[{"name":"elementValue0","nativeSrc":"17161:13:31","nodeType":"YulTypedName","src":"17161:13:31","type":""}]},{"nativeSrc":"17204:70:31","nodeType":"YulAssignment","src":"17204:70:31","value":{"arguments":[{"name":"elementValue0","nativeSrc":"17255:13:31","nodeType":"YulIdentifier","src":"17255:13:31"},{"name":"pos","nativeSrc":"17270:3:31","nodeType":"YulIdentifier","src":"17270:3:31"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"17211:43:31","nodeType":"YulIdentifier","src":"17211:43:31"},"nativeSrc":"17211:63:31","nodeType":"YulFunctionCall","src":"17211:63:31"},"variableNames":[{"name":"pos","nativeSrc":"17204:3:31","nodeType":"YulIdentifier","src":"17204:3:31"}]},{"nativeSrc":"17287:70:31","nodeType":"YulAssignment","src":"17287:70:31","value":{"arguments":[{"name":"srcPtr","nativeSrc":"17350:6:31","nodeType":"YulIdentifier","src":"17350:6:31"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"17297:52:31","nodeType":"YulIdentifier","src":"17297:52:31"},"nativeSrc":"17297:60:31","nodeType":"YulFunctionCall","src":"17297:60:31"},"variableNames":[{"name":"srcPtr","nativeSrc":"17287:6:31","nodeType":"YulIdentifier","src":"17287:6:31"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"17105:1:31","nodeType":"YulIdentifier","src":"17105:1:31"},{"name":"length","nativeSrc":"17108:6:31","nodeType":"YulIdentifier","src":"17108:6:31"}],"functionName":{"name":"lt","nativeSrc":"17102:2:31","nodeType":"YulIdentifier","src":"17102:2:31"},"nativeSrc":"17102:13:31","nodeType":"YulFunctionCall","src":"17102:13:31"},"nativeSrc":"17083:284:31","nodeType":"YulForLoop","post":{"nativeSrc":"17116:18:31","nodeType":"YulBlock","src":"17116:18:31","statements":[{"nativeSrc":"17118:14:31","nodeType":"YulAssignment","src":"17118:14:31","value":{"arguments":[{"name":"i","nativeSrc":"17127:1:31","nodeType":"YulIdentifier","src":"17127:1:31"},{"kind":"number","nativeSrc":"17130:1:31","nodeType":"YulLiteral","src":"17130:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"17123:3:31","nodeType":"YulIdentifier","src":"17123:3:31"},"nativeSrc":"17123:9:31","nodeType":"YulFunctionCall","src":"17123:9:31"},"variableNames":[{"name":"i","nativeSrc":"17118:1:31","nodeType":"YulIdentifier","src":"17118:1:31"}]}]},"pre":{"nativeSrc":"17087:14:31","nodeType":"YulBlock","src":"17087:14:31","statements":[{"nativeSrc":"17089:10:31","nodeType":"YulVariableDeclaration","src":"17089:10:31","value":{"kind":"number","nativeSrc":"17098:1:31","nodeType":"YulLiteral","src":"17098:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"17093:1:31","nodeType":"YulTypedName","src":"17093:1:31","type":""}]}]},"src":"17083:284:31"},{"nativeSrc":"17376:10:31","nodeType":"YulAssignment","src":"17376:10:31","value":{"name":"pos","nativeSrc":"17383:3:31","nodeType":"YulIdentifier","src":"17383:3:31"},"variableNames":[{"name":"end","nativeSrc":"17376:3:31","nodeType":"YulIdentifier","src":"17376:3:31"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"16660:732:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16763:5:31","nodeType":"YulTypedName","src":"16763:5:31","type":""},{"name":"pos","nativeSrc":"16770:3:31","nodeType":"YulTypedName","src":"16770:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16779:3:31","nodeType":"YulTypedName","src":"16779:3:31","type":""}],"src":"16660:732:31"},{"body":{"nativeSrc":"17546:225:31","nodeType":"YulBlock","src":"17546:225:31","statements":[{"nativeSrc":"17556:26:31","nodeType":"YulAssignment","src":"17556:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"17568:9:31","nodeType":"YulIdentifier","src":"17568:9:31"},{"kind":"number","nativeSrc":"17579:2:31","nodeType":"YulLiteral","src":"17579:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17564:3:31","nodeType":"YulIdentifier","src":"17564:3:31"},"nativeSrc":"17564:18:31","nodeType":"YulFunctionCall","src":"17564:18:31"},"variableNames":[{"name":"tail","nativeSrc":"17556:4:31","nodeType":"YulIdentifier","src":"17556:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17603:9:31","nodeType":"YulIdentifier","src":"17603:9:31"},{"kind":"number","nativeSrc":"17614:1:31","nodeType":"YulLiteral","src":"17614:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17599:3:31","nodeType":"YulIdentifier","src":"17599:3:31"},"nativeSrc":"17599:17:31","nodeType":"YulFunctionCall","src":"17599:17:31"},{"arguments":[{"name":"tail","nativeSrc":"17622:4:31","nodeType":"YulIdentifier","src":"17622:4:31"},{"name":"headStart","nativeSrc":"17628:9:31","nodeType":"YulIdentifier","src":"17628:9:31"}],"functionName":{"name":"sub","nativeSrc":"17618:3:31","nodeType":"YulIdentifier","src":"17618:3:31"},"nativeSrc":"17618:20:31","nodeType":"YulFunctionCall","src":"17618:20:31"}],"functionName":{"name":"mstore","nativeSrc":"17592:6:31","nodeType":"YulIdentifier","src":"17592:6:31"},"nativeSrc":"17592:47:31","nodeType":"YulFunctionCall","src":"17592:47:31"},"nativeSrc":"17592:47:31","nodeType":"YulExpressionStatement","src":"17592:47:31"},{"nativeSrc":"17648:116:31","nodeType":"YulAssignment","src":"17648:116:31","value":{"arguments":[{"name":"value0","nativeSrc":"17750:6:31","nodeType":"YulIdentifier","src":"17750:6:31"},{"name":"tail","nativeSrc":"17759:4:31","nodeType":"YulIdentifier","src":"17759:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"17656:93:31","nodeType":"YulIdentifier","src":"17656:93:31"},"nativeSrc":"17656:108:31","nodeType":"YulFunctionCall","src":"17656:108:31"},"variableNames":[{"name":"tail","nativeSrc":"17648:4:31","nodeType":"YulIdentifier","src":"17648:4:31"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"17398:373:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17518:9:31","nodeType":"YulTypedName","src":"17518:9:31","type":""},{"name":"value0","nativeSrc":"17530:6:31","nodeType":"YulTypedName","src":"17530:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17541:4:31","nodeType":"YulTypedName","src":"17541:4:31","type":""}],"src":"17398:373:31"},{"body":{"nativeSrc":"17869:560:31","nodeType":"YulBlock","src":"17869:560:31","statements":[{"body":{"nativeSrc":"17915:83:31","nodeType":"YulBlock","src":"17915:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17917:77:31","nodeType":"YulIdentifier","src":"17917:77:31"},"nativeSrc":"17917:79:31","nodeType":"YulFunctionCall","src":"17917:79:31"},"nativeSrc":"17917:79:31","nodeType":"YulExpressionStatement","src":"17917:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17890:7:31","nodeType":"YulIdentifier","src":"17890:7:31"},{"name":"headStart","nativeSrc":"17899:9:31","nodeType":"YulIdentifier","src":"17899:9:31"}],"functionName":{"name":"sub","nativeSrc":"17886:3:31","nodeType":"YulIdentifier","src":"17886:3:31"},"nativeSrc":"17886:23:31","nodeType":"YulFunctionCall","src":"17886:23:31"},{"kind":"number","nativeSrc":"17911:2:31","nodeType":"YulLiteral","src":"17911:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"17882:3:31","nodeType":"YulIdentifier","src":"17882:3:31"},"nativeSrc":"17882:32:31","nodeType":"YulFunctionCall","src":"17882:32:31"},"nativeSrc":"17879:119:31","nodeType":"YulIf","src":"17879:119:31"},{"nativeSrc":"18008:117:31","nodeType":"YulBlock","src":"18008:117:31","statements":[{"nativeSrc":"18023:15:31","nodeType":"YulVariableDeclaration","src":"18023:15:31","value":{"kind":"number","nativeSrc":"18037:1:31","nodeType":"YulLiteral","src":"18037:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"18027:6:31","nodeType":"YulTypedName","src":"18027:6:31","type":""}]},{"nativeSrc":"18052:63:31","nodeType":"YulAssignment","src":"18052:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18087:9:31","nodeType":"YulIdentifier","src":"18087:9:31"},{"name":"offset","nativeSrc":"18098:6:31","nodeType":"YulIdentifier","src":"18098:6:31"}],"functionName":{"name":"add","nativeSrc":"18083:3:31","nodeType":"YulIdentifier","src":"18083:3:31"},"nativeSrc":"18083:22:31","nodeType":"YulFunctionCall","src":"18083:22:31"},{"name":"dataEnd","nativeSrc":"18107:7:31","nodeType":"YulIdentifier","src":"18107:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"18062:20:31","nodeType":"YulIdentifier","src":"18062:20:31"},"nativeSrc":"18062:53:31","nodeType":"YulFunctionCall","src":"18062:53:31"},"variableNames":[{"name":"value0","nativeSrc":"18052:6:31","nodeType":"YulIdentifier","src":"18052:6:31"}]}]},{"nativeSrc":"18135:287:31","nodeType":"YulBlock","src":"18135:287:31","statements":[{"nativeSrc":"18150:46:31","nodeType":"YulVariableDeclaration","src":"18150:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18181:9:31","nodeType":"YulIdentifier","src":"18181:9:31"},{"kind":"number","nativeSrc":"18192:2:31","nodeType":"YulLiteral","src":"18192:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18177:3:31","nodeType":"YulIdentifier","src":"18177:3:31"},"nativeSrc":"18177:18:31","nodeType":"YulFunctionCall","src":"18177:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"18164:12:31","nodeType":"YulIdentifier","src":"18164:12:31"},"nativeSrc":"18164:32:31","nodeType":"YulFunctionCall","src":"18164:32:31"},"variables":[{"name":"offset","nativeSrc":"18154:6:31","nodeType":"YulTypedName","src":"18154:6:31","type":""}]},{"body":{"nativeSrc":"18243:83:31","nodeType":"YulBlock","src":"18243:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"18245:77:31","nodeType":"YulIdentifier","src":"18245:77:31"},"nativeSrc":"18245:79:31","nodeType":"YulFunctionCall","src":"18245:79:31"},"nativeSrc":"18245:79:31","nodeType":"YulExpressionStatement","src":"18245:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"18215:6:31","nodeType":"YulIdentifier","src":"18215:6:31"},{"kind":"number","nativeSrc":"18223:18:31","nodeType":"YulLiteral","src":"18223:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"18212:2:31","nodeType":"YulIdentifier","src":"18212:2:31"},"nativeSrc":"18212:30:31","nodeType":"YulFunctionCall","src":"18212:30:31"},"nativeSrc":"18209:117:31","nodeType":"YulIf","src":"18209:117:31"},{"nativeSrc":"18340:72:31","nodeType":"YulAssignment","src":"18340:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18384:9:31","nodeType":"YulIdentifier","src":"18384:9:31"},{"name":"offset","nativeSrc":"18395:6:31","nodeType":"YulIdentifier","src":"18395:6:31"}],"functionName":{"name":"add","nativeSrc":"18380:3:31","nodeType":"YulIdentifier","src":"18380:3:31"},"nativeSrc":"18380:22:31","nodeType":"YulFunctionCall","src":"18380:22:31"},{"name":"dataEnd","nativeSrc":"18404:7:31","nodeType":"YulIdentifier","src":"18404:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"18350:29:31","nodeType":"YulIdentifier","src":"18350:29:31"},"nativeSrc":"18350:62:31","nodeType":"YulFunctionCall","src":"18350:62:31"},"variableNames":[{"name":"value1","nativeSrc":"18340:6:31","nodeType":"YulIdentifier","src":"18340:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"17777:652:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17831:9:31","nodeType":"YulTypedName","src":"17831:9:31","type":""},{"name":"dataEnd","nativeSrc":"17842:7:31","nodeType":"YulTypedName","src":"17842:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17854:6:31","nodeType":"YulTypedName","src":"17854:6:31","type":""},{"name":"value1","nativeSrc":"17862:6:31","nodeType":"YulTypedName","src":"17862:6:31","type":""}],"src":"17777:652:31"},{"body":{"nativeSrc":"18480:32:31","nodeType":"YulBlock","src":"18480:32:31","statements":[{"nativeSrc":"18490:16:31","nodeType":"YulAssignment","src":"18490:16:31","value":{"name":"value","nativeSrc":"18501:5:31","nodeType":"YulIdentifier","src":"18501:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"18490:7:31","nodeType":"YulIdentifier","src":"18490:7:31"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"18435:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18462:5:31","nodeType":"YulTypedName","src":"18462:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"18472:7:31","nodeType":"YulTypedName","src":"18472:7:31","type":""}],"src":"18435:77:31"},{"body":{"nativeSrc":"18583:53:31","nodeType":"YulBlock","src":"18583:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"18600:3:31","nodeType":"YulIdentifier","src":"18600:3:31"},{"arguments":[{"name":"value","nativeSrc":"18623:5:31","nodeType":"YulIdentifier","src":"18623:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"18605:17:31","nodeType":"YulIdentifier","src":"18605:17:31"},"nativeSrc":"18605:24:31","nodeType":"YulFunctionCall","src":"18605:24:31"}],"functionName":{"name":"mstore","nativeSrc":"18593:6:31","nodeType":"YulIdentifier","src":"18593:6:31"},"nativeSrc":"18593:37:31","nodeType":"YulFunctionCall","src":"18593:37:31"},"nativeSrc":"18593:37:31","nodeType":"YulExpressionStatement","src":"18593:37:31"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"18518:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18571:5:31","nodeType":"YulTypedName","src":"18571:5:31","type":""},{"name":"pos","nativeSrc":"18578:3:31","nodeType":"YulTypedName","src":"18578:3:31","type":""}],"src":"18518:118:31"},{"body":{"nativeSrc":"18740:124:31","nodeType":"YulBlock","src":"18740:124:31","statements":[{"nativeSrc":"18750:26:31","nodeType":"YulAssignment","src":"18750:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"18762:9:31","nodeType":"YulIdentifier","src":"18762:9:31"},{"kind":"number","nativeSrc":"18773:2:31","nodeType":"YulLiteral","src":"18773:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18758:3:31","nodeType":"YulIdentifier","src":"18758:3:31"},"nativeSrc":"18758:18:31","nodeType":"YulFunctionCall","src":"18758:18:31"},"variableNames":[{"name":"tail","nativeSrc":"18750:4:31","nodeType":"YulIdentifier","src":"18750:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18830:6:31","nodeType":"YulIdentifier","src":"18830:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"18843:9:31","nodeType":"YulIdentifier","src":"18843:9:31"},{"kind":"number","nativeSrc":"18854:1:31","nodeType":"YulLiteral","src":"18854:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18839:3:31","nodeType":"YulIdentifier","src":"18839:3:31"},"nativeSrc":"18839:17:31","nodeType":"YulFunctionCall","src":"18839:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"18786:43:31","nodeType":"YulIdentifier","src":"18786:43:31"},"nativeSrc":"18786:71:31","nodeType":"YulFunctionCall","src":"18786:71:31"},"nativeSrc":"18786:71:31","nodeType":"YulExpressionStatement","src":"18786:71:31"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"18642:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18712:9:31","nodeType":"YulTypedName","src":"18712:9:31","type":""},{"name":"value0","nativeSrc":"18724:6:31","nodeType":"YulTypedName","src":"18724:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18735:4:31","nodeType":"YulTypedName","src":"18735:4:31","type":""}],"src":"18642:222:31"},{"body":{"nativeSrc":"18996:817:31","nodeType":"YulBlock","src":"18996:817:31","statements":[{"body":{"nativeSrc":"19043:83:31","nodeType":"YulBlock","src":"19043:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19045:77:31","nodeType":"YulIdentifier","src":"19045:77:31"},"nativeSrc":"19045:79:31","nodeType":"YulFunctionCall","src":"19045:79:31"},"nativeSrc":"19045:79:31","nodeType":"YulExpressionStatement","src":"19045:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19017:7:31","nodeType":"YulIdentifier","src":"19017:7:31"},{"name":"headStart","nativeSrc":"19026:9:31","nodeType":"YulIdentifier","src":"19026:9:31"}],"functionName":{"name":"sub","nativeSrc":"19013:3:31","nodeType":"YulIdentifier","src":"19013:3:31"},"nativeSrc":"19013:23:31","nodeType":"YulFunctionCall","src":"19013:23:31"},{"kind":"number","nativeSrc":"19038:3:31","nodeType":"YulLiteral","src":"19038:3:31","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"19009:3:31","nodeType":"YulIdentifier","src":"19009:3:31"},"nativeSrc":"19009:33:31","nodeType":"YulFunctionCall","src":"19009:33:31"},"nativeSrc":"19006:120:31","nodeType":"YulIf","src":"19006:120:31"},{"nativeSrc":"19136:117:31","nodeType":"YulBlock","src":"19136:117:31","statements":[{"nativeSrc":"19151:15:31","nodeType":"YulVariableDeclaration","src":"19151:15:31","value":{"kind":"number","nativeSrc":"19165:1:31","nodeType":"YulLiteral","src":"19165:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19155:6:31","nodeType":"YulTypedName","src":"19155:6:31","type":""}]},{"nativeSrc":"19180:63:31","nodeType":"YulAssignment","src":"19180:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19215:9:31","nodeType":"YulIdentifier","src":"19215:9:31"},{"name":"offset","nativeSrc":"19226:6:31","nodeType":"YulIdentifier","src":"19226:6:31"}],"functionName":{"name":"add","nativeSrc":"19211:3:31","nodeType":"YulIdentifier","src":"19211:3:31"},"nativeSrc":"19211:22:31","nodeType":"YulFunctionCall","src":"19211:22:31"},{"name":"dataEnd","nativeSrc":"19235:7:31","nodeType":"YulIdentifier","src":"19235:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"19190:20:31","nodeType":"YulIdentifier","src":"19190:20:31"},"nativeSrc":"19190:53:31","nodeType":"YulFunctionCall","src":"19190:53:31"},"variableNames":[{"name":"value0","nativeSrc":"19180:6:31","nodeType":"YulIdentifier","src":"19180:6:31"}]}]},{"nativeSrc":"19263:118:31","nodeType":"YulBlock","src":"19263:118:31","statements":[{"nativeSrc":"19278:16:31","nodeType":"YulVariableDeclaration","src":"19278:16:31","value":{"kind":"number","nativeSrc":"19292:2:31","nodeType":"YulLiteral","src":"19292:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"19282:6:31","nodeType":"YulTypedName","src":"19282:6:31","type":""}]},{"nativeSrc":"19308:63:31","nodeType":"YulAssignment","src":"19308:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19343:9:31","nodeType":"YulIdentifier","src":"19343:9:31"},{"name":"offset","nativeSrc":"19354:6:31","nodeType":"YulIdentifier","src":"19354:6:31"}],"functionName":{"name":"add","nativeSrc":"19339:3:31","nodeType":"YulIdentifier","src":"19339:3:31"},"nativeSrc":"19339:22:31","nodeType":"YulFunctionCall","src":"19339:22:31"},{"name":"dataEnd","nativeSrc":"19363:7:31","nodeType":"YulIdentifier","src":"19363:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"19318:20:31","nodeType":"YulIdentifier","src":"19318:20:31"},"nativeSrc":"19318:53:31","nodeType":"YulFunctionCall","src":"19318:53:31"},"variableNames":[{"name":"value1","nativeSrc":"19308:6:31","nodeType":"YulIdentifier","src":"19308:6:31"}]}]},{"nativeSrc":"19391:118:31","nodeType":"YulBlock","src":"19391:118:31","statements":[{"nativeSrc":"19406:16:31","nodeType":"YulVariableDeclaration","src":"19406:16:31","value":{"kind":"number","nativeSrc":"19420:2:31","nodeType":"YulLiteral","src":"19420:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"19410:6:31","nodeType":"YulTypedName","src":"19410:6:31","type":""}]},{"nativeSrc":"19436:63:31","nodeType":"YulAssignment","src":"19436:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19471:9:31","nodeType":"YulIdentifier","src":"19471:9:31"},{"name":"offset","nativeSrc":"19482:6:31","nodeType":"YulIdentifier","src":"19482:6:31"}],"functionName":{"name":"add","nativeSrc":"19467:3:31","nodeType":"YulIdentifier","src":"19467:3:31"},"nativeSrc":"19467:22:31","nodeType":"YulFunctionCall","src":"19467:22:31"},{"name":"dataEnd","nativeSrc":"19491:7:31","nodeType":"YulIdentifier","src":"19491:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"19446:20:31","nodeType":"YulIdentifier","src":"19446:20:31"},"nativeSrc":"19446:53:31","nodeType":"YulFunctionCall","src":"19446:53:31"},"variableNames":[{"name":"value2","nativeSrc":"19436:6:31","nodeType":"YulIdentifier","src":"19436:6:31"}]}]},{"nativeSrc":"19519:287:31","nodeType":"YulBlock","src":"19519:287:31","statements":[{"nativeSrc":"19534:46:31","nodeType":"YulVariableDeclaration","src":"19534:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19565:9:31","nodeType":"YulIdentifier","src":"19565:9:31"},{"kind":"number","nativeSrc":"19576:2:31","nodeType":"YulLiteral","src":"19576:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19561:3:31","nodeType":"YulIdentifier","src":"19561:3:31"},"nativeSrc":"19561:18:31","nodeType":"YulFunctionCall","src":"19561:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"19548:12:31","nodeType":"YulIdentifier","src":"19548:12:31"},"nativeSrc":"19548:32:31","nodeType":"YulFunctionCall","src":"19548:32:31"},"variables":[{"name":"offset","nativeSrc":"19538:6:31","nodeType":"YulTypedName","src":"19538:6:31","type":""}]},{"body":{"nativeSrc":"19627:83:31","nodeType":"YulBlock","src":"19627:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"19629:77:31","nodeType":"YulIdentifier","src":"19629:77:31"},"nativeSrc":"19629:79:31","nodeType":"YulFunctionCall","src":"19629:79:31"},"nativeSrc":"19629:79:31","nodeType":"YulExpressionStatement","src":"19629:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"19599:6:31","nodeType":"YulIdentifier","src":"19599:6:31"},{"kind":"number","nativeSrc":"19607:18:31","nodeType":"YulLiteral","src":"19607:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19596:2:31","nodeType":"YulIdentifier","src":"19596:2:31"},"nativeSrc":"19596:30:31","nodeType":"YulFunctionCall","src":"19596:30:31"},"nativeSrc":"19593:117:31","nodeType":"YulIf","src":"19593:117:31"},{"nativeSrc":"19724:72:31","nodeType":"YulAssignment","src":"19724:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19768:9:31","nodeType":"YulIdentifier","src":"19768:9:31"},{"name":"offset","nativeSrc":"19779:6:31","nodeType":"YulIdentifier","src":"19779:6:31"}],"functionName":{"name":"add","nativeSrc":"19764:3:31","nodeType":"YulIdentifier","src":"19764:3:31"},"nativeSrc":"19764:22:31","nodeType":"YulFunctionCall","src":"19764:22:31"},{"name":"dataEnd","nativeSrc":"19788:7:31","nodeType":"YulIdentifier","src":"19788:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"19734:29:31","nodeType":"YulIdentifier","src":"19734:29:31"},"nativeSrc":"19734:62:31","nodeType":"YulFunctionCall","src":"19734:62:31"},"variableNames":[{"name":"value3","nativeSrc":"19724:6:31","nodeType":"YulIdentifier","src":"19724:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr","nativeSrc":"18870:943:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18942:9:31","nodeType":"YulTypedName","src":"18942:9:31","type":""},{"name":"dataEnd","nativeSrc":"18953:7:31","nodeType":"YulTypedName","src":"18953:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18965:6:31","nodeType":"YulTypedName","src":"18965:6:31","type":""},{"name":"value1","nativeSrc":"18973:6:31","nodeType":"YulTypedName","src":"18973:6:31","type":""},{"name":"value2","nativeSrc":"18981:6:31","nodeType":"YulTypedName","src":"18981:6:31","type":""},{"name":"value3","nativeSrc":"18989:6:31","nodeType":"YulTypedName","src":"18989:6:31","type":""}],"src":"18870:943:31"},{"body":{"nativeSrc":"19859:76:31","nodeType":"YulBlock","src":"19859:76:31","statements":[{"body":{"nativeSrc":"19913:16:31","nodeType":"YulBlock","src":"19913:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19922:1:31","nodeType":"YulLiteral","src":"19922:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"19925:1:31","nodeType":"YulLiteral","src":"19925:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19915:6:31","nodeType":"YulIdentifier","src":"19915:6:31"},"nativeSrc":"19915:12:31","nodeType":"YulFunctionCall","src":"19915:12:31"},"nativeSrc":"19915:12:31","nodeType":"YulExpressionStatement","src":"19915:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19882:5:31","nodeType":"YulIdentifier","src":"19882:5:31"},{"arguments":[{"name":"value","nativeSrc":"19904:5:31","nodeType":"YulIdentifier","src":"19904:5:31"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"19889:14:31","nodeType":"YulIdentifier","src":"19889:14:31"},"nativeSrc":"19889:21:31","nodeType":"YulFunctionCall","src":"19889:21:31"}],"functionName":{"name":"eq","nativeSrc":"19879:2:31","nodeType":"YulIdentifier","src":"19879:2:31"},"nativeSrc":"19879:32:31","nodeType":"YulFunctionCall","src":"19879:32:31"}],"functionName":{"name":"iszero","nativeSrc":"19872:6:31","nodeType":"YulIdentifier","src":"19872:6:31"},"nativeSrc":"19872:40:31","nodeType":"YulFunctionCall","src":"19872:40:31"},"nativeSrc":"19869:60:31","nodeType":"YulIf","src":"19869:60:31"}]},"name":"validator_revert_t_bool","nativeSrc":"19819:116:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19852:5:31","nodeType":"YulTypedName","src":"19852:5:31","type":""}],"src":"19819:116:31"},{"body":{"nativeSrc":"19990:84:31","nodeType":"YulBlock","src":"19990:84:31","statements":[{"nativeSrc":"20000:29:31","nodeType":"YulAssignment","src":"20000:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"20022:6:31","nodeType":"YulIdentifier","src":"20022:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"20009:12:31","nodeType":"YulIdentifier","src":"20009:12:31"},"nativeSrc":"20009:20:31","nodeType":"YulFunctionCall","src":"20009:20:31"},"variableNames":[{"name":"value","nativeSrc":"20000:5:31","nodeType":"YulIdentifier","src":"20000:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"20062:5:31","nodeType":"YulIdentifier","src":"20062:5:31"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"20038:23:31","nodeType":"YulIdentifier","src":"20038:23:31"},"nativeSrc":"20038:30:31","nodeType":"YulFunctionCall","src":"20038:30:31"},"nativeSrc":"20038:30:31","nodeType":"YulExpressionStatement","src":"20038:30:31"}]},"name":"abi_decode_t_bool","nativeSrc":"19941:133:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"19968:6:31","nodeType":"YulTypedName","src":"19968:6:31","type":""},{"name":"end","nativeSrc":"19976:3:31","nodeType":"YulTypedName","src":"19976:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"19984:5:31","nodeType":"YulTypedName","src":"19984:5:31","type":""}],"src":"19941:133:31"},{"body":{"nativeSrc":"20160:388:31","nodeType":"YulBlock","src":"20160:388:31","statements":[{"body":{"nativeSrc":"20206:83:31","nodeType":"YulBlock","src":"20206:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"20208:77:31","nodeType":"YulIdentifier","src":"20208:77:31"},"nativeSrc":"20208:79:31","nodeType":"YulFunctionCall","src":"20208:79:31"},"nativeSrc":"20208:79:31","nodeType":"YulExpressionStatement","src":"20208:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20181:7:31","nodeType":"YulIdentifier","src":"20181:7:31"},{"name":"headStart","nativeSrc":"20190:9:31","nodeType":"YulIdentifier","src":"20190:9:31"}],"functionName":{"name":"sub","nativeSrc":"20177:3:31","nodeType":"YulIdentifier","src":"20177:3:31"},"nativeSrc":"20177:23:31","nodeType":"YulFunctionCall","src":"20177:23:31"},{"kind":"number","nativeSrc":"20202:2:31","nodeType":"YulLiteral","src":"20202:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"20173:3:31","nodeType":"YulIdentifier","src":"20173:3:31"},"nativeSrc":"20173:32:31","nodeType":"YulFunctionCall","src":"20173:32:31"},"nativeSrc":"20170:119:31","nodeType":"YulIf","src":"20170:119:31"},{"nativeSrc":"20299:117:31","nodeType":"YulBlock","src":"20299:117:31","statements":[{"nativeSrc":"20314:15:31","nodeType":"YulVariableDeclaration","src":"20314:15:31","value":{"kind":"number","nativeSrc":"20328:1:31","nodeType":"YulLiteral","src":"20328:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"20318:6:31","nodeType":"YulTypedName","src":"20318:6:31","type":""}]},{"nativeSrc":"20343:63:31","nodeType":"YulAssignment","src":"20343:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20378:9:31","nodeType":"YulIdentifier","src":"20378:9:31"},{"name":"offset","nativeSrc":"20389:6:31","nodeType":"YulIdentifier","src":"20389:6:31"}],"functionName":{"name":"add","nativeSrc":"20374:3:31","nodeType":"YulIdentifier","src":"20374:3:31"},"nativeSrc":"20374:22:31","nodeType":"YulFunctionCall","src":"20374:22:31"},{"name":"dataEnd","nativeSrc":"20398:7:31","nodeType":"YulIdentifier","src":"20398:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"20353:20:31","nodeType":"YulIdentifier","src":"20353:20:31"},"nativeSrc":"20353:53:31","nodeType":"YulFunctionCall","src":"20353:53:31"},"variableNames":[{"name":"value0","nativeSrc":"20343:6:31","nodeType":"YulIdentifier","src":"20343:6:31"}]}]},{"nativeSrc":"20426:115:31","nodeType":"YulBlock","src":"20426:115:31","statements":[{"nativeSrc":"20441:16:31","nodeType":"YulVariableDeclaration","src":"20441:16:31","value":{"kind":"number","nativeSrc":"20455:2:31","nodeType":"YulLiteral","src":"20455:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"20445:6:31","nodeType":"YulTypedName","src":"20445:6:31","type":""}]},{"nativeSrc":"20471:60:31","nodeType":"YulAssignment","src":"20471:60:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20503:9:31","nodeType":"YulIdentifier","src":"20503:9:31"},{"name":"offset","nativeSrc":"20514:6:31","nodeType":"YulIdentifier","src":"20514:6:31"}],"functionName":{"name":"add","nativeSrc":"20499:3:31","nodeType":"YulIdentifier","src":"20499:3:31"},"nativeSrc":"20499:22:31","nodeType":"YulFunctionCall","src":"20499:22:31"},{"name":"dataEnd","nativeSrc":"20523:7:31","nodeType":"YulIdentifier","src":"20523:7:31"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"20481:17:31","nodeType":"YulIdentifier","src":"20481:17:31"},"nativeSrc":"20481:50:31","nodeType":"YulFunctionCall","src":"20481:50:31"},"variableNames":[{"name":"value1","nativeSrc":"20471:6:31","nodeType":"YulIdentifier","src":"20471:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"20080:468:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20122:9:31","nodeType":"YulTypedName","src":"20122:9:31","type":""},{"name":"dataEnd","nativeSrc":"20133:7:31","nodeType":"YulTypedName","src":"20133:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20145:6:31","nodeType":"YulTypedName","src":"20145:6:31","type":""},{"name":"value1","nativeSrc":"20153:6:31","nodeType":"YulTypedName","src":"20153:6:31","type":""}],"src":"20080:468:31"},{"body":{"nativeSrc":"20620:263:31","nodeType":"YulBlock","src":"20620:263:31","statements":[{"body":{"nativeSrc":"20666:83:31","nodeType":"YulBlock","src":"20666:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"20668:77:31","nodeType":"YulIdentifier","src":"20668:77:31"},"nativeSrc":"20668:79:31","nodeType":"YulFunctionCall","src":"20668:79:31"},"nativeSrc":"20668:79:31","nodeType":"YulExpressionStatement","src":"20668:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20641:7:31","nodeType":"YulIdentifier","src":"20641:7:31"},{"name":"headStart","nativeSrc":"20650:9:31","nodeType":"YulIdentifier","src":"20650:9:31"}],"functionName":{"name":"sub","nativeSrc":"20637:3:31","nodeType":"YulIdentifier","src":"20637:3:31"},"nativeSrc":"20637:23:31","nodeType":"YulFunctionCall","src":"20637:23:31"},{"kind":"number","nativeSrc":"20662:2:31","nodeType":"YulLiteral","src":"20662:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"20633:3:31","nodeType":"YulIdentifier","src":"20633:3:31"},"nativeSrc":"20633:32:31","nodeType":"YulFunctionCall","src":"20633:32:31"},"nativeSrc":"20630:119:31","nodeType":"YulIf","src":"20630:119:31"},{"nativeSrc":"20759:117:31","nodeType":"YulBlock","src":"20759:117:31","statements":[{"nativeSrc":"20774:15:31","nodeType":"YulVariableDeclaration","src":"20774:15:31","value":{"kind":"number","nativeSrc":"20788:1:31","nodeType":"YulLiteral","src":"20788:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"20778:6:31","nodeType":"YulTypedName","src":"20778:6:31","type":""}]},{"nativeSrc":"20803:63:31","nodeType":"YulAssignment","src":"20803:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20838:9:31","nodeType":"YulIdentifier","src":"20838:9:31"},{"name":"offset","nativeSrc":"20849:6:31","nodeType":"YulIdentifier","src":"20849:6:31"}],"functionName":{"name":"add","nativeSrc":"20834:3:31","nodeType":"YulIdentifier","src":"20834:3:31"},"nativeSrc":"20834:22:31","nodeType":"YulFunctionCall","src":"20834:22:31"},{"name":"dataEnd","nativeSrc":"20858:7:31","nodeType":"YulIdentifier","src":"20858:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"20813:20:31","nodeType":"YulIdentifier","src":"20813:20:31"},"nativeSrc":"20813:53:31","nodeType":"YulFunctionCall","src":"20813:53:31"},"variableNames":[{"name":"value0","nativeSrc":"20803:6:31","nodeType":"YulIdentifier","src":"20803:6:31"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"20554:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20590:9:31","nodeType":"YulTypedName","src":"20590:9:31","type":""},{"name":"dataEnd","nativeSrc":"20601:7:31","nodeType":"YulTypedName","src":"20601:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20613:6:31","nodeType":"YulTypedName","src":"20613:6:31","type":""}],"src":"20554:329:31"},{"body":{"nativeSrc":"20972:391:31","nodeType":"YulBlock","src":"20972:391:31","statements":[{"body":{"nativeSrc":"21018:83:31","nodeType":"YulBlock","src":"21018:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"21020:77:31","nodeType":"YulIdentifier","src":"21020:77:31"},"nativeSrc":"21020:79:31","nodeType":"YulFunctionCall","src":"21020:79:31"},"nativeSrc":"21020:79:31","nodeType":"YulExpressionStatement","src":"21020:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20993:7:31","nodeType":"YulIdentifier","src":"20993:7:31"},{"name":"headStart","nativeSrc":"21002:9:31","nodeType":"YulIdentifier","src":"21002:9:31"}],"functionName":{"name":"sub","nativeSrc":"20989:3:31","nodeType":"YulIdentifier","src":"20989:3:31"},"nativeSrc":"20989:23:31","nodeType":"YulFunctionCall","src":"20989:23:31"},{"kind":"number","nativeSrc":"21014:2:31","nodeType":"YulLiteral","src":"21014:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"20985:3:31","nodeType":"YulIdentifier","src":"20985:3:31"},"nativeSrc":"20985:32:31","nodeType":"YulFunctionCall","src":"20985:32:31"},"nativeSrc":"20982:119:31","nodeType":"YulIf","src":"20982:119:31"},{"nativeSrc":"21111:117:31","nodeType":"YulBlock","src":"21111:117:31","statements":[{"nativeSrc":"21126:15:31","nodeType":"YulVariableDeclaration","src":"21126:15:31","value":{"kind":"number","nativeSrc":"21140:1:31","nodeType":"YulLiteral","src":"21140:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"21130:6:31","nodeType":"YulTypedName","src":"21130:6:31","type":""}]},{"nativeSrc":"21155:63:31","nodeType":"YulAssignment","src":"21155:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21190:9:31","nodeType":"YulIdentifier","src":"21190:9:31"},{"name":"offset","nativeSrc":"21201:6:31","nodeType":"YulIdentifier","src":"21201:6:31"}],"functionName":{"name":"add","nativeSrc":"21186:3:31","nodeType":"YulIdentifier","src":"21186:3:31"},"nativeSrc":"21186:22:31","nodeType":"YulFunctionCall","src":"21186:22:31"},{"name":"dataEnd","nativeSrc":"21210:7:31","nodeType":"YulIdentifier","src":"21210:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"21165:20:31","nodeType":"YulIdentifier","src":"21165:20:31"},"nativeSrc":"21165:53:31","nodeType":"YulFunctionCall","src":"21165:53:31"},"variableNames":[{"name":"value0","nativeSrc":"21155:6:31","nodeType":"YulIdentifier","src":"21155:6:31"}]}]},{"nativeSrc":"21238:118:31","nodeType":"YulBlock","src":"21238:118:31","statements":[{"nativeSrc":"21253:16:31","nodeType":"YulVariableDeclaration","src":"21253:16:31","value":{"kind":"number","nativeSrc":"21267:2:31","nodeType":"YulLiteral","src":"21267:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"21257:6:31","nodeType":"YulTypedName","src":"21257:6:31","type":""}]},{"nativeSrc":"21283:63:31","nodeType":"YulAssignment","src":"21283:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21318:9:31","nodeType":"YulIdentifier","src":"21318:9:31"},{"name":"offset","nativeSrc":"21329:6:31","nodeType":"YulIdentifier","src":"21329:6:31"}],"functionName":{"name":"add","nativeSrc":"21314:3:31","nodeType":"YulIdentifier","src":"21314:3:31"},"nativeSrc":"21314:22:31","nodeType":"YulFunctionCall","src":"21314:22:31"},{"name":"dataEnd","nativeSrc":"21338:7:31","nodeType":"YulIdentifier","src":"21338:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"21293:20:31","nodeType":"YulIdentifier","src":"21293:20:31"},"nativeSrc":"21293:53:31","nodeType":"YulFunctionCall","src":"21293:53:31"},"variableNames":[{"name":"value1","nativeSrc":"21283:6:31","nodeType":"YulIdentifier","src":"21283:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"20889:474:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20934:9:31","nodeType":"YulTypedName","src":"20934:9:31","type":""},{"name":"dataEnd","nativeSrc":"20945:7:31","nodeType":"YulTypedName","src":"20945:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20957:6:31","nodeType":"YulTypedName","src":"20957:6:31","type":""},{"name":"value1","nativeSrc":"20965:6:31","nodeType":"YulTypedName","src":"20965:6:31","type":""}],"src":"20889:474:31"},{"body":{"nativeSrc":"21512:946:31","nodeType":"YulBlock","src":"21512:946:31","statements":[{"body":{"nativeSrc":"21559:83:31","nodeType":"YulBlock","src":"21559:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"21561:77:31","nodeType":"YulIdentifier","src":"21561:77:31"},"nativeSrc":"21561:79:31","nodeType":"YulFunctionCall","src":"21561:79:31"},"nativeSrc":"21561:79:31","nodeType":"YulExpressionStatement","src":"21561:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"21533:7:31","nodeType":"YulIdentifier","src":"21533:7:31"},{"name":"headStart","nativeSrc":"21542:9:31","nodeType":"YulIdentifier","src":"21542:9:31"}],"functionName":{"name":"sub","nativeSrc":"21529:3:31","nodeType":"YulIdentifier","src":"21529:3:31"},"nativeSrc":"21529:23:31","nodeType":"YulFunctionCall","src":"21529:23:31"},{"kind":"number","nativeSrc":"21554:3:31","nodeType":"YulLiteral","src":"21554:3:31","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"21525:3:31","nodeType":"YulIdentifier","src":"21525:3:31"},"nativeSrc":"21525:33:31","nodeType":"YulFunctionCall","src":"21525:33:31"},"nativeSrc":"21522:120:31","nodeType":"YulIf","src":"21522:120:31"},{"nativeSrc":"21652:117:31","nodeType":"YulBlock","src":"21652:117:31","statements":[{"nativeSrc":"21667:15:31","nodeType":"YulVariableDeclaration","src":"21667:15:31","value":{"kind":"number","nativeSrc":"21681:1:31","nodeType":"YulLiteral","src":"21681:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"21671:6:31","nodeType":"YulTypedName","src":"21671:6:31","type":""}]},{"nativeSrc":"21696:63:31","nodeType":"YulAssignment","src":"21696:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21731:9:31","nodeType":"YulIdentifier","src":"21731:9:31"},{"name":"offset","nativeSrc":"21742:6:31","nodeType":"YulIdentifier","src":"21742:6:31"}],"functionName":{"name":"add","nativeSrc":"21727:3:31","nodeType":"YulIdentifier","src":"21727:3:31"},"nativeSrc":"21727:22:31","nodeType":"YulFunctionCall","src":"21727:22:31"},{"name":"dataEnd","nativeSrc":"21751:7:31","nodeType":"YulIdentifier","src":"21751:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"21706:20:31","nodeType":"YulIdentifier","src":"21706:20:31"},"nativeSrc":"21706:53:31","nodeType":"YulFunctionCall","src":"21706:53:31"},"variableNames":[{"name":"value0","nativeSrc":"21696:6:31","nodeType":"YulIdentifier","src":"21696:6:31"}]}]},{"nativeSrc":"21779:118:31","nodeType":"YulBlock","src":"21779:118:31","statements":[{"nativeSrc":"21794:16:31","nodeType":"YulVariableDeclaration","src":"21794:16:31","value":{"kind":"number","nativeSrc":"21808:2:31","nodeType":"YulLiteral","src":"21808:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"21798:6:31","nodeType":"YulTypedName","src":"21798:6:31","type":""}]},{"nativeSrc":"21824:63:31","nodeType":"YulAssignment","src":"21824:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21859:9:31","nodeType":"YulIdentifier","src":"21859:9:31"},{"name":"offset","nativeSrc":"21870:6:31","nodeType":"YulIdentifier","src":"21870:6:31"}],"functionName":{"name":"add","nativeSrc":"21855:3:31","nodeType":"YulIdentifier","src":"21855:3:31"},"nativeSrc":"21855:22:31","nodeType":"YulFunctionCall","src":"21855:22:31"},{"name":"dataEnd","nativeSrc":"21879:7:31","nodeType":"YulIdentifier","src":"21879:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"21834:20:31","nodeType":"YulIdentifier","src":"21834:20:31"},"nativeSrc":"21834:53:31","nodeType":"YulFunctionCall","src":"21834:53:31"},"variableNames":[{"name":"value1","nativeSrc":"21824:6:31","nodeType":"YulIdentifier","src":"21824:6:31"}]}]},{"nativeSrc":"21907:118:31","nodeType":"YulBlock","src":"21907:118:31","statements":[{"nativeSrc":"21922:16:31","nodeType":"YulVariableDeclaration","src":"21922:16:31","value":{"kind":"number","nativeSrc":"21936:2:31","nodeType":"YulLiteral","src":"21936:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"21926:6:31","nodeType":"YulTypedName","src":"21926:6:31","type":""}]},{"nativeSrc":"21952:63:31","nodeType":"YulAssignment","src":"21952:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21987:9:31","nodeType":"YulIdentifier","src":"21987:9:31"},{"name":"offset","nativeSrc":"21998:6:31","nodeType":"YulIdentifier","src":"21998:6:31"}],"functionName":{"name":"add","nativeSrc":"21983:3:31","nodeType":"YulIdentifier","src":"21983:3:31"},"nativeSrc":"21983:22:31","nodeType":"YulFunctionCall","src":"21983:22:31"},{"name":"dataEnd","nativeSrc":"22007:7:31","nodeType":"YulIdentifier","src":"22007:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"21962:20:31","nodeType":"YulIdentifier","src":"21962:20:31"},"nativeSrc":"21962:53:31","nodeType":"YulFunctionCall","src":"21962:53:31"},"variableNames":[{"name":"value2","nativeSrc":"21952:6:31","nodeType":"YulIdentifier","src":"21952:6:31"}]}]},{"nativeSrc":"22035:118:31","nodeType":"YulBlock","src":"22035:118:31","statements":[{"nativeSrc":"22050:16:31","nodeType":"YulVariableDeclaration","src":"22050:16:31","value":{"kind":"number","nativeSrc":"22064:2:31","nodeType":"YulLiteral","src":"22064:2:31","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"22054:6:31","nodeType":"YulTypedName","src":"22054:6:31","type":""}]},{"nativeSrc":"22080:63:31","nodeType":"YulAssignment","src":"22080:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22115:9:31","nodeType":"YulIdentifier","src":"22115:9:31"},{"name":"offset","nativeSrc":"22126:6:31","nodeType":"YulIdentifier","src":"22126:6:31"}],"functionName":{"name":"add","nativeSrc":"22111:3:31","nodeType":"YulIdentifier","src":"22111:3:31"},"nativeSrc":"22111:22:31","nodeType":"YulFunctionCall","src":"22111:22:31"},{"name":"dataEnd","nativeSrc":"22135:7:31","nodeType":"YulIdentifier","src":"22135:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"22090:20:31","nodeType":"YulIdentifier","src":"22090:20:31"},"nativeSrc":"22090:53:31","nodeType":"YulFunctionCall","src":"22090:53:31"},"variableNames":[{"name":"value3","nativeSrc":"22080:6:31","nodeType":"YulIdentifier","src":"22080:6:31"}]}]},{"nativeSrc":"22163:288:31","nodeType":"YulBlock","src":"22163:288:31","statements":[{"nativeSrc":"22178:47:31","nodeType":"YulVariableDeclaration","src":"22178:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22209:9:31","nodeType":"YulIdentifier","src":"22209:9:31"},{"kind":"number","nativeSrc":"22220:3:31","nodeType":"YulLiteral","src":"22220:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22205:3:31","nodeType":"YulIdentifier","src":"22205:3:31"},"nativeSrc":"22205:19:31","nodeType":"YulFunctionCall","src":"22205:19:31"}],"functionName":{"name":"calldataload","nativeSrc":"22192:12:31","nodeType":"YulIdentifier","src":"22192:12:31"},"nativeSrc":"22192:33:31","nodeType":"YulFunctionCall","src":"22192:33:31"},"variables":[{"name":"offset","nativeSrc":"22182:6:31","nodeType":"YulTypedName","src":"22182:6:31","type":""}]},{"body":{"nativeSrc":"22272:83:31","nodeType":"YulBlock","src":"22272:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"22274:77:31","nodeType":"YulIdentifier","src":"22274:77:31"},"nativeSrc":"22274:79:31","nodeType":"YulFunctionCall","src":"22274:79:31"},"nativeSrc":"22274:79:31","nodeType":"YulExpressionStatement","src":"22274:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"22244:6:31","nodeType":"YulIdentifier","src":"22244:6:31"},{"kind":"number","nativeSrc":"22252:18:31","nodeType":"YulLiteral","src":"22252:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"22241:2:31","nodeType":"YulIdentifier","src":"22241:2:31"},"nativeSrc":"22241:30:31","nodeType":"YulFunctionCall","src":"22241:30:31"},"nativeSrc":"22238:117:31","nodeType":"YulIf","src":"22238:117:31"},{"nativeSrc":"22369:72:31","nodeType":"YulAssignment","src":"22369:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22413:9:31","nodeType":"YulIdentifier","src":"22413:9:31"},{"name":"offset","nativeSrc":"22424:6:31","nodeType":"YulIdentifier","src":"22424:6:31"}],"functionName":{"name":"add","nativeSrc":"22409:3:31","nodeType":"YulIdentifier","src":"22409:3:31"},"nativeSrc":"22409:22:31","nodeType":"YulFunctionCall","src":"22409:22:31"},{"name":"dataEnd","nativeSrc":"22433:7:31","nodeType":"YulIdentifier","src":"22433:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"22379:29:31","nodeType":"YulIdentifier","src":"22379:29:31"},"nativeSrc":"22379:62:31","nodeType":"YulFunctionCall","src":"22379:62:31"},"variableNames":[{"name":"value4","nativeSrc":"22369:6:31","nodeType":"YulIdentifier","src":"22369:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nativeSrc":"21369:1089:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21450:9:31","nodeType":"YulTypedName","src":"21450:9:31","type":""},{"name":"dataEnd","nativeSrc":"21461:7:31","nodeType":"YulTypedName","src":"21461:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"21473:6:31","nodeType":"YulTypedName","src":"21473:6:31","type":""},{"name":"value1","nativeSrc":"21481:6:31","nodeType":"YulTypedName","src":"21481:6:31","type":""},{"name":"value2","nativeSrc":"21489:6:31","nodeType":"YulTypedName","src":"21489:6:31","type":""},{"name":"value3","nativeSrc":"21497:6:31","nodeType":"YulTypedName","src":"21497:6:31","type":""},{"name":"value4","nativeSrc":"21505:6:31","nodeType":"YulTypedName","src":"21505:6:31","type":""}],"src":"21369:1089:31"},{"body":{"nativeSrc":"22492:152:31","nodeType":"YulBlock","src":"22492:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22509:1:31","nodeType":"YulLiteral","src":"22509:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"22512:77:31","nodeType":"YulLiteral","src":"22512:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"22502:6:31","nodeType":"YulIdentifier","src":"22502:6:31"},"nativeSrc":"22502:88:31","nodeType":"YulFunctionCall","src":"22502:88:31"},"nativeSrc":"22502:88:31","nodeType":"YulExpressionStatement","src":"22502:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22606:1:31","nodeType":"YulLiteral","src":"22606:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"22609:4:31","nodeType":"YulLiteral","src":"22609:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"22599:6:31","nodeType":"YulIdentifier","src":"22599:6:31"},"nativeSrc":"22599:15:31","nodeType":"YulFunctionCall","src":"22599:15:31"},"nativeSrc":"22599:15:31","nodeType":"YulExpressionStatement","src":"22599:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22630:1:31","nodeType":"YulLiteral","src":"22630:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"22633:4:31","nodeType":"YulLiteral","src":"22633:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"22623:6:31","nodeType":"YulIdentifier","src":"22623:6:31"},"nativeSrc":"22623:15:31","nodeType":"YulFunctionCall","src":"22623:15:31"},"nativeSrc":"22623:15:31","nodeType":"YulExpressionStatement","src":"22623:15:31"}]},"name":"panic_error_0x22","nativeSrc":"22464:180:31","nodeType":"YulFunctionDefinition","src":"22464:180:31"},{"body":{"nativeSrc":"22701:269:31","nodeType":"YulBlock","src":"22701:269:31","statements":[{"nativeSrc":"22711:22:31","nodeType":"YulAssignment","src":"22711:22:31","value":{"arguments":[{"name":"data","nativeSrc":"22725:4:31","nodeType":"YulIdentifier","src":"22725:4:31"},{"kind":"number","nativeSrc":"22731:1:31","nodeType":"YulLiteral","src":"22731:1:31","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"22721:3:31","nodeType":"YulIdentifier","src":"22721:3:31"},"nativeSrc":"22721:12:31","nodeType":"YulFunctionCall","src":"22721:12:31"},"variableNames":[{"name":"length","nativeSrc":"22711:6:31","nodeType":"YulIdentifier","src":"22711:6:31"}]},{"nativeSrc":"22742:38:31","nodeType":"YulVariableDeclaration","src":"22742:38:31","value":{"arguments":[{"name":"data","nativeSrc":"22772:4:31","nodeType":"YulIdentifier","src":"22772:4:31"},{"kind":"number","nativeSrc":"22778:1:31","nodeType":"YulLiteral","src":"22778:1:31","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"22768:3:31","nodeType":"YulIdentifier","src":"22768:3:31"},"nativeSrc":"22768:12:31","nodeType":"YulFunctionCall","src":"22768:12:31"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"22746:18:31","nodeType":"YulTypedName","src":"22746:18:31","type":""}]},{"body":{"nativeSrc":"22819:51:31","nodeType":"YulBlock","src":"22819:51:31","statements":[{"nativeSrc":"22833:27:31","nodeType":"YulAssignment","src":"22833:27:31","value":{"arguments":[{"name":"length","nativeSrc":"22847:6:31","nodeType":"YulIdentifier","src":"22847:6:31"},{"kind":"number","nativeSrc":"22855:4:31","nodeType":"YulLiteral","src":"22855:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"22843:3:31","nodeType":"YulIdentifier","src":"22843:3:31"},"nativeSrc":"22843:17:31","nodeType":"YulFunctionCall","src":"22843:17:31"},"variableNames":[{"name":"length","nativeSrc":"22833:6:31","nodeType":"YulIdentifier","src":"22833:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"22799:18:31","nodeType":"YulIdentifier","src":"22799:18:31"}],"functionName":{"name":"iszero","nativeSrc":"22792:6:31","nodeType":"YulIdentifier","src":"22792:6:31"},"nativeSrc":"22792:26:31","nodeType":"YulFunctionCall","src":"22792:26:31"},"nativeSrc":"22789:81:31","nodeType":"YulIf","src":"22789:81:31"},{"body":{"nativeSrc":"22922:42:31","nodeType":"YulBlock","src":"22922:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"22936:16:31","nodeType":"YulIdentifier","src":"22936:16:31"},"nativeSrc":"22936:18:31","nodeType":"YulFunctionCall","src":"22936:18:31"},"nativeSrc":"22936:18:31","nodeType":"YulExpressionStatement","src":"22936:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"22886:18:31","nodeType":"YulIdentifier","src":"22886:18:31"},{"arguments":[{"name":"length","nativeSrc":"22909:6:31","nodeType":"YulIdentifier","src":"22909:6:31"},{"kind":"number","nativeSrc":"22917:2:31","nodeType":"YulLiteral","src":"22917:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"22906:2:31","nodeType":"YulIdentifier","src":"22906:2:31"},"nativeSrc":"22906:14:31","nodeType":"YulFunctionCall","src":"22906:14:31"}],"functionName":{"name":"eq","nativeSrc":"22883:2:31","nodeType":"YulIdentifier","src":"22883:2:31"},"nativeSrc":"22883:38:31","nodeType":"YulFunctionCall","src":"22883:38:31"},"nativeSrc":"22880:84:31","nodeType":"YulIf","src":"22880:84:31"}]},"name":"extract_byte_array_length","nativeSrc":"22650:320:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"22685:4:31","nodeType":"YulTypedName","src":"22685:4:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"22694:6:31","nodeType":"YulTypedName","src":"22694:6:31","type":""}],"src":"22650:320:31"},{"body":{"nativeSrc":"23030:87:31","nodeType":"YulBlock","src":"23030:87:31","statements":[{"nativeSrc":"23040:11:31","nodeType":"YulAssignment","src":"23040:11:31","value":{"name":"ptr","nativeSrc":"23048:3:31","nodeType":"YulIdentifier","src":"23048:3:31"},"variableNames":[{"name":"data","nativeSrc":"23040:4:31","nodeType":"YulIdentifier","src":"23040:4:31"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23068:1:31","nodeType":"YulLiteral","src":"23068:1:31","type":"","value":"0"},{"name":"ptr","nativeSrc":"23071:3:31","nodeType":"YulIdentifier","src":"23071:3:31"}],"functionName":{"name":"mstore","nativeSrc":"23061:6:31","nodeType":"YulIdentifier","src":"23061:6:31"},"nativeSrc":"23061:14:31","nodeType":"YulFunctionCall","src":"23061:14:31"},"nativeSrc":"23061:14:31","nodeType":"YulExpressionStatement","src":"23061:14:31"},{"nativeSrc":"23084:26:31","nodeType":"YulAssignment","src":"23084:26:31","value":{"arguments":[{"kind":"number","nativeSrc":"23102:1:31","nodeType":"YulLiteral","src":"23102:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"23105:4:31","nodeType":"YulLiteral","src":"23105:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"23092:9:31","nodeType":"YulIdentifier","src":"23092:9:31"},"nativeSrc":"23092:18:31","nodeType":"YulFunctionCall","src":"23092:18:31"},"variableNames":[{"name":"data","nativeSrc":"23084:4:31","nodeType":"YulIdentifier","src":"23084:4:31"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"22976:141:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"23017:3:31","nodeType":"YulTypedName","src":"23017:3:31","type":""}],"returnVariables":[{"name":"data","nativeSrc":"23025:4:31","nodeType":"YulTypedName","src":"23025:4:31","type":""}],"src":"22976:141:31"},{"body":{"nativeSrc":"23167:49:31","nodeType":"YulBlock","src":"23167:49:31","statements":[{"nativeSrc":"23177:33:31","nodeType":"YulAssignment","src":"23177:33:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23195:5:31","nodeType":"YulIdentifier","src":"23195:5:31"},{"kind":"number","nativeSrc":"23202:2:31","nodeType":"YulLiteral","src":"23202:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"23191:3:31","nodeType":"YulIdentifier","src":"23191:3:31"},"nativeSrc":"23191:14:31","nodeType":"YulFunctionCall","src":"23191:14:31"},{"kind":"number","nativeSrc":"23207:2:31","nodeType":"YulLiteral","src":"23207:2:31","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"23187:3:31","nodeType":"YulIdentifier","src":"23187:3:31"},"nativeSrc":"23187:23:31","nodeType":"YulFunctionCall","src":"23187:23:31"},"variableNames":[{"name":"result","nativeSrc":"23177:6:31","nodeType":"YulIdentifier","src":"23177:6:31"}]}]},"name":"divide_by_32_ceil","nativeSrc":"23123:93:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23150:5:31","nodeType":"YulTypedName","src":"23150:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"23160:6:31","nodeType":"YulTypedName","src":"23160:6:31","type":""}],"src":"23123:93:31"},{"body":{"nativeSrc":"23275:54:31","nodeType":"YulBlock","src":"23275:54:31","statements":[{"nativeSrc":"23285:37:31","nodeType":"YulAssignment","src":"23285:37:31","value":{"arguments":[{"name":"bits","nativeSrc":"23310:4:31","nodeType":"YulIdentifier","src":"23310:4:31"},{"name":"value","nativeSrc":"23316:5:31","nodeType":"YulIdentifier","src":"23316:5:31"}],"functionName":{"name":"shl","nativeSrc":"23306:3:31","nodeType":"YulIdentifier","src":"23306:3:31"},"nativeSrc":"23306:16:31","nodeType":"YulFunctionCall","src":"23306:16:31"},"variableNames":[{"name":"newValue","nativeSrc":"23285:8:31","nodeType":"YulIdentifier","src":"23285:8:31"}]}]},"name":"shift_left_dynamic","nativeSrc":"23222:107:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"23250:4:31","nodeType":"YulTypedName","src":"23250:4:31","type":""},{"name":"value","nativeSrc":"23256:5:31","nodeType":"YulTypedName","src":"23256:5:31","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"23266:8:31","nodeType":"YulTypedName","src":"23266:8:31","type":""}],"src":"23222:107:31"},{"body":{"nativeSrc":"23411:317:31","nodeType":"YulBlock","src":"23411:317:31","statements":[{"nativeSrc":"23421:35:31","nodeType":"YulVariableDeclaration","src":"23421:35:31","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"23442:10:31","nodeType":"YulIdentifier","src":"23442:10:31"},{"kind":"number","nativeSrc":"23454:1:31","nodeType":"YulLiteral","src":"23454:1:31","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"23438:3:31","nodeType":"YulIdentifier","src":"23438:3:31"},"nativeSrc":"23438:18:31","nodeType":"YulFunctionCall","src":"23438:18:31"},"variables":[{"name":"shiftBits","nativeSrc":"23425:9:31","nodeType":"YulTypedName","src":"23425:9:31","type":""}]},{"nativeSrc":"23465:109:31","nodeType":"YulVariableDeclaration","src":"23465:109:31","value":{"arguments":[{"name":"shiftBits","nativeSrc":"23496:9:31","nodeType":"YulIdentifier","src":"23496:9:31"},{"kind":"number","nativeSrc":"23507:66:31","nodeType":"YulLiteral","src":"23507:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"23477:18:31","nodeType":"YulIdentifier","src":"23477:18:31"},"nativeSrc":"23477:97:31","nodeType":"YulFunctionCall","src":"23477:97:31"},"variables":[{"name":"mask","nativeSrc":"23469:4:31","nodeType":"YulTypedName","src":"23469:4:31","type":""}]},{"nativeSrc":"23583:51:31","nodeType":"YulAssignment","src":"23583:51:31","value":{"arguments":[{"name":"shiftBits","nativeSrc":"23614:9:31","nodeType":"YulIdentifier","src":"23614:9:31"},{"name":"toInsert","nativeSrc":"23625:8:31","nodeType":"YulIdentifier","src":"23625:8:31"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"23595:18:31","nodeType":"YulIdentifier","src":"23595:18:31"},"nativeSrc":"23595:39:31","nodeType":"YulFunctionCall","src":"23595:39:31"},"variableNames":[{"name":"toInsert","nativeSrc":"23583:8:31","nodeType":"YulIdentifier","src":"23583:8:31"}]},{"nativeSrc":"23643:30:31","nodeType":"YulAssignment","src":"23643:30:31","value":{"arguments":[{"name":"value","nativeSrc":"23656:5:31","nodeType":"YulIdentifier","src":"23656:5:31"},{"arguments":[{"name":"mask","nativeSrc":"23667:4:31","nodeType":"YulIdentifier","src":"23667:4:31"}],"functionName":{"name":"not","nativeSrc":"23663:3:31","nodeType":"YulIdentifier","src":"23663:3:31"},"nativeSrc":"23663:9:31","nodeType":"YulFunctionCall","src":"23663:9:31"}],"functionName":{"name":"and","nativeSrc":"23652:3:31","nodeType":"YulIdentifier","src":"23652:3:31"},"nativeSrc":"23652:21:31","nodeType":"YulFunctionCall","src":"23652:21:31"},"variableNames":[{"name":"value","nativeSrc":"23643:5:31","nodeType":"YulIdentifier","src":"23643:5:31"}]},{"nativeSrc":"23682:40:31","nodeType":"YulAssignment","src":"23682:40:31","value":{"arguments":[{"name":"value","nativeSrc":"23695:5:31","nodeType":"YulIdentifier","src":"23695:5:31"},{"arguments":[{"name":"toInsert","nativeSrc":"23706:8:31","nodeType":"YulIdentifier","src":"23706:8:31"},{"name":"mask","nativeSrc":"23716:4:31","nodeType":"YulIdentifier","src":"23716:4:31"}],"functionName":{"name":"and","nativeSrc":"23702:3:31","nodeType":"YulIdentifier","src":"23702:3:31"},"nativeSrc":"23702:19:31","nodeType":"YulFunctionCall","src":"23702:19:31"}],"functionName":{"name":"or","nativeSrc":"23692:2:31","nodeType":"YulIdentifier","src":"23692:2:31"},"nativeSrc":"23692:30:31","nodeType":"YulFunctionCall","src":"23692:30:31"},"variableNames":[{"name":"result","nativeSrc":"23682:6:31","nodeType":"YulIdentifier","src":"23682:6:31"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"23335:393:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23372:5:31","nodeType":"YulTypedName","src":"23372:5:31","type":""},{"name":"shiftBytes","nativeSrc":"23379:10:31","nodeType":"YulTypedName","src":"23379:10:31","type":""},{"name":"toInsert","nativeSrc":"23391:8:31","nodeType":"YulTypedName","src":"23391:8:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"23404:6:31","nodeType":"YulTypedName","src":"23404:6:31","type":""}],"src":"23335:393:31"},{"body":{"nativeSrc":"23766:28:31","nodeType":"YulBlock","src":"23766:28:31","statements":[{"nativeSrc":"23776:12:31","nodeType":"YulAssignment","src":"23776:12:31","value":{"name":"value","nativeSrc":"23783:5:31","nodeType":"YulIdentifier","src":"23783:5:31"},"variableNames":[{"name":"ret","nativeSrc":"23776:3:31","nodeType":"YulIdentifier","src":"23776:3:31"}]}]},"name":"identity","nativeSrc":"23734:60:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23752:5:31","nodeType":"YulTypedName","src":"23752:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"23762:3:31","nodeType":"YulTypedName","src":"23762:3:31","type":""}],"src":"23734:60:31"},{"body":{"nativeSrc":"23860:82:31","nodeType":"YulBlock","src":"23860:82:31","statements":[{"nativeSrc":"23870:66:31","nodeType":"YulAssignment","src":"23870:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23928:5:31","nodeType":"YulIdentifier","src":"23928:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"23910:17:31","nodeType":"YulIdentifier","src":"23910:17:31"},"nativeSrc":"23910:24:31","nodeType":"YulFunctionCall","src":"23910:24:31"}],"functionName":{"name":"identity","nativeSrc":"23901:8:31","nodeType":"YulIdentifier","src":"23901:8:31"},"nativeSrc":"23901:34:31","nodeType":"YulFunctionCall","src":"23901:34:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"23883:17:31","nodeType":"YulIdentifier","src":"23883:17:31"},"nativeSrc":"23883:53:31","nodeType":"YulFunctionCall","src":"23883:53:31"},"variableNames":[{"name":"converted","nativeSrc":"23870:9:31","nodeType":"YulIdentifier","src":"23870:9:31"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"23800:142:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23840:5:31","nodeType":"YulTypedName","src":"23840:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"23850:9:31","nodeType":"YulTypedName","src":"23850:9:31","type":""}],"src":"23800:142:31"},{"body":{"nativeSrc":"23995:28:31","nodeType":"YulBlock","src":"23995:28:31","statements":[{"nativeSrc":"24005:12:31","nodeType":"YulAssignment","src":"24005:12:31","value":{"name":"value","nativeSrc":"24012:5:31","nodeType":"YulIdentifier","src":"24012:5:31"},"variableNames":[{"name":"ret","nativeSrc":"24005:3:31","nodeType":"YulIdentifier","src":"24005:3:31"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"23948:75:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23981:5:31","nodeType":"YulTypedName","src":"23981:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"23991:3:31","nodeType":"YulTypedName","src":"23991:3:31","type":""}],"src":"23948:75:31"},{"body":{"nativeSrc":"24105:193:31","nodeType":"YulBlock","src":"24105:193:31","statements":[{"nativeSrc":"24115:63:31","nodeType":"YulVariableDeclaration","src":"24115:63:31","value":{"arguments":[{"name":"value_0","nativeSrc":"24170:7:31","nodeType":"YulIdentifier","src":"24170:7:31"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"24139:30:31","nodeType":"YulIdentifier","src":"24139:30:31"},"nativeSrc":"24139:39:31","nodeType":"YulFunctionCall","src":"24139:39:31"},"variables":[{"name":"convertedValue_0","nativeSrc":"24119:16:31","nodeType":"YulTypedName","src":"24119:16:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"24194:4:31","nodeType":"YulIdentifier","src":"24194:4:31"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"24234:4:31","nodeType":"YulIdentifier","src":"24234:4:31"}],"functionName":{"name":"sload","nativeSrc":"24228:5:31","nodeType":"YulIdentifier","src":"24228:5:31"},"nativeSrc":"24228:11:31","nodeType":"YulFunctionCall","src":"24228:11:31"},{"name":"offset","nativeSrc":"24241:6:31","nodeType":"YulIdentifier","src":"24241:6:31"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"24273:16:31","nodeType":"YulIdentifier","src":"24273:16:31"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"24249:23:31","nodeType":"YulIdentifier","src":"24249:23:31"},"nativeSrc":"24249:41:31","nodeType":"YulFunctionCall","src":"24249:41:31"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"24200:27:31","nodeType":"YulIdentifier","src":"24200:27:31"},"nativeSrc":"24200:91:31","nodeType":"YulFunctionCall","src":"24200:91:31"}],"functionName":{"name":"sstore","nativeSrc":"24187:6:31","nodeType":"YulIdentifier","src":"24187:6:31"},"nativeSrc":"24187:105:31","nodeType":"YulFunctionCall","src":"24187:105:31"},"nativeSrc":"24187:105:31","nodeType":"YulExpressionStatement","src":"24187:105:31"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"24029:269:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"24082:4:31","nodeType":"YulTypedName","src":"24082:4:31","type":""},{"name":"offset","nativeSrc":"24088:6:31","nodeType":"YulTypedName","src":"24088:6:31","type":""},{"name":"value_0","nativeSrc":"24096:7:31","nodeType":"YulTypedName","src":"24096:7:31","type":""}],"src":"24029:269:31"},{"body":{"nativeSrc":"24353:24:31","nodeType":"YulBlock","src":"24353:24:31","statements":[{"nativeSrc":"24363:8:31","nodeType":"YulAssignment","src":"24363:8:31","value":{"kind":"number","nativeSrc":"24370:1:31","nodeType":"YulLiteral","src":"24370:1:31","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"24363:3:31","nodeType":"YulIdentifier","src":"24363:3:31"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"24304:73:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"24349:3:31","nodeType":"YulTypedName","src":"24349:3:31","type":""}],"src":"24304:73:31"},{"body":{"nativeSrc":"24436:136:31","nodeType":"YulBlock","src":"24436:136:31","statements":[{"nativeSrc":"24446:46:31","nodeType":"YulVariableDeclaration","src":"24446:46:31","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"24460:30:31","nodeType":"YulIdentifier","src":"24460:30:31"},"nativeSrc":"24460:32:31","nodeType":"YulFunctionCall","src":"24460:32:31"},"variables":[{"name":"zero_0","nativeSrc":"24450:6:31","nodeType":"YulTypedName","src":"24450:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"24545:4:31","nodeType":"YulIdentifier","src":"24545:4:31"},{"name":"offset","nativeSrc":"24551:6:31","nodeType":"YulIdentifier","src":"24551:6:31"},{"name":"zero_0","nativeSrc":"24559:6:31","nodeType":"YulIdentifier","src":"24559:6:31"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"24501:43:31","nodeType":"YulIdentifier","src":"24501:43:31"},"nativeSrc":"24501:65:31","nodeType":"YulFunctionCall","src":"24501:65:31"},"nativeSrc":"24501:65:31","nodeType":"YulExpressionStatement","src":"24501:65:31"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"24383:189:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"24422:4:31","nodeType":"YulTypedName","src":"24422:4:31","type":""},{"name":"offset","nativeSrc":"24428:6:31","nodeType":"YulTypedName","src":"24428:6:31","type":""}],"src":"24383:189:31"},{"body":{"nativeSrc":"24628:136:31","nodeType":"YulBlock","src":"24628:136:31","statements":[{"body":{"nativeSrc":"24695:63:31","nodeType":"YulBlock","src":"24695:63:31","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"24739:5:31","nodeType":"YulIdentifier","src":"24739:5:31"},{"kind":"number","nativeSrc":"24746:1:31","nodeType":"YulLiteral","src":"24746:1:31","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"24709:29:31","nodeType":"YulIdentifier","src":"24709:29:31"},"nativeSrc":"24709:39:31","nodeType":"YulFunctionCall","src":"24709:39:31"},"nativeSrc":"24709:39:31","nodeType":"YulExpressionStatement","src":"24709:39:31"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"24648:5:31","nodeType":"YulIdentifier","src":"24648:5:31"},{"name":"end","nativeSrc":"24655:3:31","nodeType":"YulIdentifier","src":"24655:3:31"}],"functionName":{"name":"lt","nativeSrc":"24645:2:31","nodeType":"YulIdentifier","src":"24645:2:31"},"nativeSrc":"24645:14:31","nodeType":"YulFunctionCall","src":"24645:14:31"},"nativeSrc":"24638:120:31","nodeType":"YulForLoop","post":{"nativeSrc":"24660:26:31","nodeType":"YulBlock","src":"24660:26:31","statements":[{"nativeSrc":"24662:22:31","nodeType":"YulAssignment","src":"24662:22:31","value":{"arguments":[{"name":"start","nativeSrc":"24675:5:31","nodeType":"YulIdentifier","src":"24675:5:31"},{"kind":"number","nativeSrc":"24682:1:31","nodeType":"YulLiteral","src":"24682:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"24671:3:31","nodeType":"YulIdentifier","src":"24671:3:31"},"nativeSrc":"24671:13:31","nodeType":"YulFunctionCall","src":"24671:13:31"},"variableNames":[{"name":"start","nativeSrc":"24662:5:31","nodeType":"YulIdentifier","src":"24662:5:31"}]}]},"pre":{"nativeSrc":"24642:2:31","nodeType":"YulBlock","src":"24642:2:31","statements":[]},"src":"24638:120:31"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"24578:186:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"24616:5:31","nodeType":"YulTypedName","src":"24616:5:31","type":""},{"name":"end","nativeSrc":"24623:3:31","nodeType":"YulTypedName","src":"24623:3:31","type":""}],"src":"24578:186:31"},{"body":{"nativeSrc":"24849:464:31","nodeType":"YulBlock","src":"24849:464:31","statements":[{"body":{"nativeSrc":"24875:431:31","nodeType":"YulBlock","src":"24875:431:31","statements":[{"nativeSrc":"24889:54:31","nodeType":"YulVariableDeclaration","src":"24889:54:31","value":{"arguments":[{"name":"array","nativeSrc":"24937:5:31","nodeType":"YulIdentifier","src":"24937:5:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"24905:31:31","nodeType":"YulIdentifier","src":"24905:31:31"},"nativeSrc":"24905:38:31","nodeType":"YulFunctionCall","src":"24905:38:31"},"variables":[{"name":"dataArea","nativeSrc":"24893:8:31","nodeType":"YulTypedName","src":"24893:8:31","type":""}]},{"nativeSrc":"24956:63:31","nodeType":"YulVariableDeclaration","src":"24956:63:31","value":{"arguments":[{"name":"dataArea","nativeSrc":"24979:8:31","nodeType":"YulIdentifier","src":"24979:8:31"},{"arguments":[{"name":"startIndex","nativeSrc":"25007:10:31","nodeType":"YulIdentifier","src":"25007:10:31"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"24989:17:31","nodeType":"YulIdentifier","src":"24989:17:31"},"nativeSrc":"24989:29:31","nodeType":"YulFunctionCall","src":"24989:29:31"}],"functionName":{"name":"add","nativeSrc":"24975:3:31","nodeType":"YulIdentifier","src":"24975:3:31"},"nativeSrc":"24975:44:31","nodeType":"YulFunctionCall","src":"24975:44:31"},"variables":[{"name":"deleteStart","nativeSrc":"24960:11:31","nodeType":"YulTypedName","src":"24960:11:31","type":""}]},{"body":{"nativeSrc":"25176:27:31","nodeType":"YulBlock","src":"25176:27:31","statements":[{"nativeSrc":"25178:23:31","nodeType":"YulAssignment","src":"25178:23:31","value":{"name":"dataArea","nativeSrc":"25193:8:31","nodeType":"YulIdentifier","src":"25193:8:31"},"variableNames":[{"name":"deleteStart","nativeSrc":"25178:11:31","nodeType":"YulIdentifier","src":"25178:11:31"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"25160:10:31","nodeType":"YulIdentifier","src":"25160:10:31"},{"kind":"number","nativeSrc":"25172:2:31","nodeType":"YulLiteral","src":"25172:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"25157:2:31","nodeType":"YulIdentifier","src":"25157:2:31"},"nativeSrc":"25157:18:31","nodeType":"YulFunctionCall","src":"25157:18:31"},"nativeSrc":"25154:49:31","nodeType":"YulIf","src":"25154:49:31"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"25245:11:31","nodeType":"YulIdentifier","src":"25245:11:31"},{"arguments":[{"name":"dataArea","nativeSrc":"25262:8:31","nodeType":"YulIdentifier","src":"25262:8:31"},{"arguments":[{"name":"len","nativeSrc":"25290:3:31","nodeType":"YulIdentifier","src":"25290:3:31"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"25272:17:31","nodeType":"YulIdentifier","src":"25272:17:31"},"nativeSrc":"25272:22:31","nodeType":"YulFunctionCall","src":"25272:22:31"}],"functionName":{"name":"add","nativeSrc":"25258:3:31","nodeType":"YulIdentifier","src":"25258:3:31"},"nativeSrc":"25258:37:31","nodeType":"YulFunctionCall","src":"25258:37:31"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"25216:28:31","nodeType":"YulIdentifier","src":"25216:28:31"},"nativeSrc":"25216:80:31","nodeType":"YulFunctionCall","src":"25216:80:31"},"nativeSrc":"25216:80:31","nodeType":"YulExpressionStatement","src":"25216:80:31"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"24866:3:31","nodeType":"YulIdentifier","src":"24866:3:31"},{"kind":"number","nativeSrc":"24871:2:31","nodeType":"YulLiteral","src":"24871:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"24863:2:31","nodeType":"YulIdentifier","src":"24863:2:31"},"nativeSrc":"24863:11:31","nodeType":"YulFunctionCall","src":"24863:11:31"},"nativeSrc":"24860:446:31","nodeType":"YulIf","src":"24860:446:31"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"24770:543:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"24825:5:31","nodeType":"YulTypedName","src":"24825:5:31","type":""},{"name":"len","nativeSrc":"24832:3:31","nodeType":"YulTypedName","src":"24832:3:31","type":""},{"name":"startIndex","nativeSrc":"24837:10:31","nodeType":"YulTypedName","src":"24837:10:31","type":""}],"src":"24770:543:31"},{"body":{"nativeSrc":"25382:54:31","nodeType":"YulBlock","src":"25382:54:31","statements":[{"nativeSrc":"25392:37:31","nodeType":"YulAssignment","src":"25392:37:31","value":{"arguments":[{"name":"bits","nativeSrc":"25417:4:31","nodeType":"YulIdentifier","src":"25417:4:31"},{"name":"value","nativeSrc":"25423:5:31","nodeType":"YulIdentifier","src":"25423:5:31"}],"functionName":{"name":"shr","nativeSrc":"25413:3:31","nodeType":"YulIdentifier","src":"25413:3:31"},"nativeSrc":"25413:16:31","nodeType":"YulFunctionCall","src":"25413:16:31"},"variableNames":[{"name":"newValue","nativeSrc":"25392:8:31","nodeType":"YulIdentifier","src":"25392:8:31"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"25319:117:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"25357:4:31","nodeType":"YulTypedName","src":"25357:4:31","type":""},{"name":"value","nativeSrc":"25363:5:31","nodeType":"YulTypedName","src":"25363:5:31","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"25373:8:31","nodeType":"YulTypedName","src":"25373:8:31","type":""}],"src":"25319:117:31"},{"body":{"nativeSrc":"25493:118:31","nodeType":"YulBlock","src":"25493:118:31","statements":[{"nativeSrc":"25503:68:31","nodeType":"YulVariableDeclaration","src":"25503:68:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"25552:1:31","nodeType":"YulLiteral","src":"25552:1:31","type":"","value":"8"},{"name":"bytes","nativeSrc":"25555:5:31","nodeType":"YulIdentifier","src":"25555:5:31"}],"functionName":{"name":"mul","nativeSrc":"25548:3:31","nodeType":"YulIdentifier","src":"25548:3:31"},"nativeSrc":"25548:13:31","nodeType":"YulFunctionCall","src":"25548:13:31"},{"arguments":[{"kind":"number","nativeSrc":"25567:1:31","nodeType":"YulLiteral","src":"25567:1:31","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"25563:3:31","nodeType":"YulIdentifier","src":"25563:3:31"},"nativeSrc":"25563:6:31","nodeType":"YulFunctionCall","src":"25563:6:31"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"25519:28:31","nodeType":"YulIdentifier","src":"25519:28:31"},"nativeSrc":"25519:51:31","nodeType":"YulFunctionCall","src":"25519:51:31"}],"functionName":{"name":"not","nativeSrc":"25515:3:31","nodeType":"YulIdentifier","src":"25515:3:31"},"nativeSrc":"25515:56:31","nodeType":"YulFunctionCall","src":"25515:56:31"},"variables":[{"name":"mask","nativeSrc":"25507:4:31","nodeType":"YulTypedName","src":"25507:4:31","type":""}]},{"nativeSrc":"25580:25:31","nodeType":"YulAssignment","src":"25580:25:31","value":{"arguments":[{"name":"data","nativeSrc":"25594:4:31","nodeType":"YulIdentifier","src":"25594:4:31"},{"name":"mask","nativeSrc":"25600:4:31","nodeType":"YulIdentifier","src":"25600:4:31"}],"functionName":{"name":"and","nativeSrc":"25590:3:31","nodeType":"YulIdentifier","src":"25590:3:31"},"nativeSrc":"25590:15:31","nodeType":"YulFunctionCall","src":"25590:15:31"},"variableNames":[{"name":"result","nativeSrc":"25580:6:31","nodeType":"YulIdentifier","src":"25580:6:31"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"25442:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"25470:4:31","nodeType":"YulTypedName","src":"25470:4:31","type":""},{"name":"bytes","nativeSrc":"25476:5:31","nodeType":"YulTypedName","src":"25476:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"25486:6:31","nodeType":"YulTypedName","src":"25486:6:31","type":""}],"src":"25442:169:31"},{"body":{"nativeSrc":"25697:214:31","nodeType":"YulBlock","src":"25697:214:31","statements":[{"nativeSrc":"25830:37:31","nodeType":"YulAssignment","src":"25830:37:31","value":{"arguments":[{"name":"data","nativeSrc":"25857:4:31","nodeType":"YulIdentifier","src":"25857:4:31"},{"name":"len","nativeSrc":"25863:3:31","nodeType":"YulIdentifier","src":"25863:3:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"25838:18:31","nodeType":"YulIdentifier","src":"25838:18:31"},"nativeSrc":"25838:29:31","nodeType":"YulFunctionCall","src":"25838:29:31"},"variableNames":[{"name":"data","nativeSrc":"25830:4:31","nodeType":"YulIdentifier","src":"25830:4:31"}]},{"nativeSrc":"25876:29:31","nodeType":"YulAssignment","src":"25876:29:31","value":{"arguments":[{"name":"data","nativeSrc":"25887:4:31","nodeType":"YulIdentifier","src":"25887:4:31"},{"arguments":[{"kind":"number","nativeSrc":"25897:1:31","nodeType":"YulLiteral","src":"25897:1:31","type":"","value":"2"},{"name":"len","nativeSrc":"25900:3:31","nodeType":"YulIdentifier","src":"25900:3:31"}],"functionName":{"name":"mul","nativeSrc":"25893:3:31","nodeType":"YulIdentifier","src":"25893:3:31"},"nativeSrc":"25893:11:31","nodeType":"YulFunctionCall","src":"25893:11:31"}],"functionName":{"name":"or","nativeSrc":"25884:2:31","nodeType":"YulIdentifier","src":"25884:2:31"},"nativeSrc":"25884:21:31","nodeType":"YulFunctionCall","src":"25884:21:31"},"variableNames":[{"name":"used","nativeSrc":"25876:4:31","nodeType":"YulIdentifier","src":"25876:4:31"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"25616:295:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"25678:4:31","nodeType":"YulTypedName","src":"25678:4:31","type":""},{"name":"len","nativeSrc":"25684:3:31","nodeType":"YulTypedName","src":"25684:3:31","type":""}],"returnVariables":[{"name":"used","nativeSrc":"25692:4:31","nodeType":"YulTypedName","src":"25692:4:31","type":""}],"src":"25616:295:31"},{"body":{"nativeSrc":"26008:1303:31","nodeType":"YulBlock","src":"26008:1303:31","statements":[{"nativeSrc":"26019:51:31","nodeType":"YulVariableDeclaration","src":"26019:51:31","value":{"arguments":[{"name":"src","nativeSrc":"26066:3:31","nodeType":"YulIdentifier","src":"26066:3:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"26033:32:31","nodeType":"YulIdentifier","src":"26033:32:31"},"nativeSrc":"26033:37:31","nodeType":"YulFunctionCall","src":"26033:37:31"},"variables":[{"name":"newLen","nativeSrc":"26023:6:31","nodeType":"YulTypedName","src":"26023:6:31","type":""}]},{"body":{"nativeSrc":"26155:22:31","nodeType":"YulBlock","src":"26155:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"26157:16:31","nodeType":"YulIdentifier","src":"26157:16:31"},"nativeSrc":"26157:18:31","nodeType":"YulFunctionCall","src":"26157:18:31"},"nativeSrc":"26157:18:31","nodeType":"YulExpressionStatement","src":"26157:18:31"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"26127:6:31","nodeType":"YulIdentifier","src":"26127:6:31"},{"kind":"number","nativeSrc":"26135:18:31","nodeType":"YulLiteral","src":"26135:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"26124:2:31","nodeType":"YulIdentifier","src":"26124:2:31"},"nativeSrc":"26124:30:31","nodeType":"YulFunctionCall","src":"26124:30:31"},"nativeSrc":"26121:56:31","nodeType":"YulIf","src":"26121:56:31"},{"nativeSrc":"26187:52:31","nodeType":"YulVariableDeclaration","src":"26187:52:31","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"26233:4:31","nodeType":"YulIdentifier","src":"26233:4:31"}],"functionName":{"name":"sload","nativeSrc":"26227:5:31","nodeType":"YulIdentifier","src":"26227:5:31"},"nativeSrc":"26227:11:31","nodeType":"YulFunctionCall","src":"26227:11:31"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"26201:25:31","nodeType":"YulIdentifier","src":"26201:25:31"},"nativeSrc":"26201:38:31","nodeType":"YulFunctionCall","src":"26201:38:31"},"variables":[{"name":"oldLen","nativeSrc":"26191:6:31","nodeType":"YulTypedName","src":"26191:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"26332:4:31","nodeType":"YulIdentifier","src":"26332:4:31"},{"name":"oldLen","nativeSrc":"26338:6:31","nodeType":"YulIdentifier","src":"26338:6:31"},{"name":"newLen","nativeSrc":"26346:6:31","nodeType":"YulIdentifier","src":"26346:6:31"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"26286:45:31","nodeType":"YulIdentifier","src":"26286:45:31"},"nativeSrc":"26286:67:31","nodeType":"YulFunctionCall","src":"26286:67:31"},"nativeSrc":"26286:67:31","nodeType":"YulExpressionStatement","src":"26286:67:31"},{"nativeSrc":"26363:18:31","nodeType":"YulVariableDeclaration","src":"26363:18:31","value":{"kind":"number","nativeSrc":"26380:1:31","nodeType":"YulLiteral","src":"26380:1:31","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"26367:9:31","nodeType":"YulTypedName","src":"26367:9:31","type":""}]},{"nativeSrc":"26391:17:31","nodeType":"YulAssignment","src":"26391:17:31","value":{"kind":"number","nativeSrc":"26404:4:31","nodeType":"YulLiteral","src":"26404:4:31","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"26391:9:31","nodeType":"YulIdentifier","src":"26391:9:31"}]},{"cases":[{"body":{"nativeSrc":"26455:611:31","nodeType":"YulBlock","src":"26455:611:31","statements":[{"nativeSrc":"26469:37:31","nodeType":"YulVariableDeclaration","src":"26469:37:31","value":{"arguments":[{"name":"newLen","nativeSrc":"26488:6:31","nodeType":"YulIdentifier","src":"26488:6:31"},{"arguments":[{"kind":"number","nativeSrc":"26500:4:31","nodeType":"YulLiteral","src":"26500:4:31","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"26496:3:31","nodeType":"YulIdentifier","src":"26496:3:31"},"nativeSrc":"26496:9:31","nodeType":"YulFunctionCall","src":"26496:9:31"}],"functionName":{"name":"and","nativeSrc":"26484:3:31","nodeType":"YulIdentifier","src":"26484:3:31"},"nativeSrc":"26484:22:31","nodeType":"YulFunctionCall","src":"26484:22:31"},"variables":[{"name":"loopEnd","nativeSrc":"26473:7:31","nodeType":"YulTypedName","src":"26473:7:31","type":""}]},{"nativeSrc":"26520:51:31","nodeType":"YulVariableDeclaration","src":"26520:51:31","value":{"arguments":[{"name":"slot","nativeSrc":"26566:4:31","nodeType":"YulIdentifier","src":"26566:4:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"26534:31:31","nodeType":"YulIdentifier","src":"26534:31:31"},"nativeSrc":"26534:37:31","nodeType":"YulFunctionCall","src":"26534:37:31"},"variables":[{"name":"dstPtr","nativeSrc":"26524:6:31","nodeType":"YulTypedName","src":"26524:6:31","type":""}]},{"nativeSrc":"26584:10:31","nodeType":"YulVariableDeclaration","src":"26584:10:31","value":{"kind":"number","nativeSrc":"26593:1:31","nodeType":"YulLiteral","src":"26593:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"26588:1:31","nodeType":"YulTypedName","src":"26588:1:31","type":""}]},{"body":{"nativeSrc":"26652:163:31","nodeType":"YulBlock","src":"26652:163:31","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"26677:6:31","nodeType":"YulIdentifier","src":"26677:6:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"26695:3:31","nodeType":"YulIdentifier","src":"26695:3:31"},{"name":"srcOffset","nativeSrc":"26700:9:31","nodeType":"YulIdentifier","src":"26700:9:31"}],"functionName":{"name":"add","nativeSrc":"26691:3:31","nodeType":"YulIdentifier","src":"26691:3:31"},"nativeSrc":"26691:19:31","nodeType":"YulFunctionCall","src":"26691:19:31"}],"functionName":{"name":"mload","nativeSrc":"26685:5:31","nodeType":"YulIdentifier","src":"26685:5:31"},"nativeSrc":"26685:26:31","nodeType":"YulFunctionCall","src":"26685:26:31"}],"functionName":{"name":"sstore","nativeSrc":"26670:6:31","nodeType":"YulIdentifier","src":"26670:6:31"},"nativeSrc":"26670:42:31","nodeType":"YulFunctionCall","src":"26670:42:31"},"nativeSrc":"26670:42:31","nodeType":"YulExpressionStatement","src":"26670:42:31"},{"nativeSrc":"26729:24:31","nodeType":"YulAssignment","src":"26729:24:31","value":{"arguments":[{"name":"dstPtr","nativeSrc":"26743:6:31","nodeType":"YulIdentifier","src":"26743:6:31"},{"kind":"number","nativeSrc":"26751:1:31","nodeType":"YulLiteral","src":"26751:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"26739:3:31","nodeType":"YulIdentifier","src":"26739:3:31"},"nativeSrc":"26739:14:31","nodeType":"YulFunctionCall","src":"26739:14:31"},"variableNames":[{"name":"dstPtr","nativeSrc":"26729:6:31","nodeType":"YulIdentifier","src":"26729:6:31"}]},{"nativeSrc":"26770:31:31","nodeType":"YulAssignment","src":"26770:31:31","value":{"arguments":[{"name":"srcOffset","nativeSrc":"26787:9:31","nodeType":"YulIdentifier","src":"26787:9:31"},{"kind":"number","nativeSrc":"26798:2:31","nodeType":"YulLiteral","src":"26798:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26783:3:31","nodeType":"YulIdentifier","src":"26783:3:31"},"nativeSrc":"26783:18:31","nodeType":"YulFunctionCall","src":"26783:18:31"},"variableNames":[{"name":"srcOffset","nativeSrc":"26770:9:31","nodeType":"YulIdentifier","src":"26770:9:31"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"26618:1:31","nodeType":"YulIdentifier","src":"26618:1:31"},{"name":"loopEnd","nativeSrc":"26621:7:31","nodeType":"YulIdentifier","src":"26621:7:31"}],"functionName":{"name":"lt","nativeSrc":"26615:2:31","nodeType":"YulIdentifier","src":"26615:2:31"},"nativeSrc":"26615:14:31","nodeType":"YulFunctionCall","src":"26615:14:31"},"nativeSrc":"26607:208:31","nodeType":"YulForLoop","post":{"nativeSrc":"26630:21:31","nodeType":"YulBlock","src":"26630:21:31","statements":[{"nativeSrc":"26632:17:31","nodeType":"YulAssignment","src":"26632:17:31","value":{"arguments":[{"name":"i","nativeSrc":"26641:1:31","nodeType":"YulIdentifier","src":"26641:1:31"},{"kind":"number","nativeSrc":"26644:4:31","nodeType":"YulLiteral","src":"26644:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"26637:3:31","nodeType":"YulIdentifier","src":"26637:3:31"},"nativeSrc":"26637:12:31","nodeType":"YulFunctionCall","src":"26637:12:31"},"variableNames":[{"name":"i","nativeSrc":"26632:1:31","nodeType":"YulIdentifier","src":"26632:1:31"}]}]},"pre":{"nativeSrc":"26611:3:31","nodeType":"YulBlock","src":"26611:3:31","statements":[]},"src":"26607:208:31"},{"body":{"nativeSrc":"26851:156:31","nodeType":"YulBlock","src":"26851:156:31","statements":[{"nativeSrc":"26869:43:31","nodeType":"YulVariableDeclaration","src":"26869:43:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"26896:3:31","nodeType":"YulIdentifier","src":"26896:3:31"},{"name":"srcOffset","nativeSrc":"26901:9:31","nodeType":"YulIdentifier","src":"26901:9:31"}],"functionName":{"name":"add","nativeSrc":"26892:3:31","nodeType":"YulIdentifier","src":"26892:3:31"},"nativeSrc":"26892:19:31","nodeType":"YulFunctionCall","src":"26892:19:31"}],"functionName":{"name":"mload","nativeSrc":"26886:5:31","nodeType":"YulIdentifier","src":"26886:5:31"},"nativeSrc":"26886:26:31","nodeType":"YulFunctionCall","src":"26886:26:31"},"variables":[{"name":"lastValue","nativeSrc":"26873:9:31","nodeType":"YulTypedName","src":"26873:9:31","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"26936:6:31","nodeType":"YulIdentifier","src":"26936:6:31"},{"arguments":[{"name":"lastValue","nativeSrc":"26963:9:31","nodeType":"YulIdentifier","src":"26963:9:31"},{"arguments":[{"name":"newLen","nativeSrc":"26978:6:31","nodeType":"YulIdentifier","src":"26978:6:31"},{"kind":"number","nativeSrc":"26986:4:31","nodeType":"YulLiteral","src":"26986:4:31","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"26974:3:31","nodeType":"YulIdentifier","src":"26974:3:31"},"nativeSrc":"26974:17:31","nodeType":"YulFunctionCall","src":"26974:17:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"26944:18:31","nodeType":"YulIdentifier","src":"26944:18:31"},"nativeSrc":"26944:48:31","nodeType":"YulFunctionCall","src":"26944:48:31"}],"functionName":{"name":"sstore","nativeSrc":"26929:6:31","nodeType":"YulIdentifier","src":"26929:6:31"},"nativeSrc":"26929:64:31","nodeType":"YulFunctionCall","src":"26929:64:31"},"nativeSrc":"26929:64:31","nodeType":"YulExpressionStatement","src":"26929:64:31"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"26834:7:31","nodeType":"YulIdentifier","src":"26834:7:31"},{"name":"newLen","nativeSrc":"26843:6:31","nodeType":"YulIdentifier","src":"26843:6:31"}],"functionName":{"name":"lt","nativeSrc":"26831:2:31","nodeType":"YulIdentifier","src":"26831:2:31"},"nativeSrc":"26831:19:31","nodeType":"YulFunctionCall","src":"26831:19:31"},"nativeSrc":"26828:179:31","nodeType":"YulIf","src":"26828:179:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"27027:4:31","nodeType":"YulIdentifier","src":"27027:4:31"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"27041:6:31","nodeType":"YulIdentifier","src":"27041:6:31"},{"kind":"number","nativeSrc":"27049:1:31","nodeType":"YulLiteral","src":"27049:1:31","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"27037:3:31","nodeType":"YulIdentifier","src":"27037:3:31"},"nativeSrc":"27037:14:31","nodeType":"YulFunctionCall","src":"27037:14:31"},{"kind":"number","nativeSrc":"27053:1:31","nodeType":"YulLiteral","src":"27053:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"27033:3:31","nodeType":"YulIdentifier","src":"27033:3:31"},"nativeSrc":"27033:22:31","nodeType":"YulFunctionCall","src":"27033:22:31"}],"functionName":{"name":"sstore","nativeSrc":"27020:6:31","nodeType":"YulIdentifier","src":"27020:6:31"},"nativeSrc":"27020:36:31","nodeType":"YulFunctionCall","src":"27020:36:31"},"nativeSrc":"27020:36:31","nodeType":"YulExpressionStatement","src":"27020:36:31"}]},"nativeSrc":"26448:618:31","nodeType":"YulCase","src":"26448:618:31","value":{"kind":"number","nativeSrc":"26453:1:31","nodeType":"YulLiteral","src":"26453:1:31","type":"","value":"1"}},{"body":{"nativeSrc":"27083:222:31","nodeType":"YulBlock","src":"27083:222:31","statements":[{"nativeSrc":"27097:14:31","nodeType":"YulVariableDeclaration","src":"27097:14:31","value":{"kind":"number","nativeSrc":"27110:1:31","nodeType":"YulLiteral","src":"27110:1:31","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"27101:5:31","nodeType":"YulTypedName","src":"27101:5:31","type":""}]},{"body":{"nativeSrc":"27134:67:31","nodeType":"YulBlock","src":"27134:67:31","statements":[{"nativeSrc":"27152:35:31","nodeType":"YulAssignment","src":"27152:35:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"27171:3:31","nodeType":"YulIdentifier","src":"27171:3:31"},{"name":"srcOffset","nativeSrc":"27176:9:31","nodeType":"YulIdentifier","src":"27176:9:31"}],"functionName":{"name":"add","nativeSrc":"27167:3:31","nodeType":"YulIdentifier","src":"27167:3:31"},"nativeSrc":"27167:19:31","nodeType":"YulFunctionCall","src":"27167:19:31"}],"functionName":{"name":"mload","nativeSrc":"27161:5:31","nodeType":"YulIdentifier","src":"27161:5:31"},"nativeSrc":"27161:26:31","nodeType":"YulFunctionCall","src":"27161:26:31"},"variableNames":[{"name":"value","nativeSrc":"27152:5:31","nodeType":"YulIdentifier","src":"27152:5:31"}]}]},"condition":{"name":"newLen","nativeSrc":"27127:6:31","nodeType":"YulIdentifier","src":"27127:6:31"},"nativeSrc":"27124:77:31","nodeType":"YulIf","src":"27124:77:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"27221:4:31","nodeType":"YulIdentifier","src":"27221:4:31"},{"arguments":[{"name":"value","nativeSrc":"27280:5:31","nodeType":"YulIdentifier","src":"27280:5:31"},{"name":"newLen","nativeSrc":"27287:6:31","nodeType":"YulIdentifier","src":"27287:6:31"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"27227:52:31","nodeType":"YulIdentifier","src":"27227:52:31"},"nativeSrc":"27227:67:31","nodeType":"YulFunctionCall","src":"27227:67:31"}],"functionName":{"name":"sstore","nativeSrc":"27214:6:31","nodeType":"YulIdentifier","src":"27214:6:31"},"nativeSrc":"27214:81:31","nodeType":"YulFunctionCall","src":"27214:81:31"},"nativeSrc":"27214:81:31","nodeType":"YulExpressionStatement","src":"27214:81:31"}]},"nativeSrc":"27075:230:31","nodeType":"YulCase","src":"27075:230:31","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"26428:6:31","nodeType":"YulIdentifier","src":"26428:6:31"},{"kind":"number","nativeSrc":"26436:2:31","nodeType":"YulLiteral","src":"26436:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"26425:2:31","nodeType":"YulIdentifier","src":"26425:2:31"},"nativeSrc":"26425:14:31","nodeType":"YulFunctionCall","src":"26425:14:31"},"nativeSrc":"26418:887:31","nodeType":"YulSwitch","src":"26418:887:31"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"25916:1395:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"25997:4:31","nodeType":"YulTypedName","src":"25997:4:31","type":""},{"name":"src","nativeSrc":"26003:3:31","nodeType":"YulTypedName","src":"26003:3:31","type":""}],"src":"25916:1395:31"},{"body":{"nativeSrc":"27431:34:31","nodeType":"YulBlock","src":"27431:34:31","statements":[{"nativeSrc":"27441:18:31","nodeType":"YulAssignment","src":"27441:18:31","value":{"name":"pos","nativeSrc":"27456:3:31","nodeType":"YulIdentifier","src":"27456:3:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"27441:11:31","nodeType":"YulIdentifier","src":"27441:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"27317:148:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"27403:3:31","nodeType":"YulTypedName","src":"27403:3:31","type":""},{"name":"length","nativeSrc":"27408:6:31","nodeType":"YulTypedName","src":"27408:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"27419:11:31","nodeType":"YulTypedName","src":"27419:11:31","type":""}],"src":"27317:148:31"},{"body":{"nativeSrc":"27602:767:31","nodeType":"YulBlock","src":"27602:767:31","statements":[{"nativeSrc":"27612:29:31","nodeType":"YulVariableDeclaration","src":"27612:29:31","value":{"arguments":[{"name":"value","nativeSrc":"27635:5:31","nodeType":"YulIdentifier","src":"27635:5:31"}],"functionName":{"name":"sload","nativeSrc":"27629:5:31","nodeType":"YulIdentifier","src":"27629:5:31"},"nativeSrc":"27629:12:31","nodeType":"YulFunctionCall","src":"27629:12:31"},"variables":[{"name":"slotValue","nativeSrc":"27616:9:31","nodeType":"YulTypedName","src":"27616:9:31","type":""}]},{"nativeSrc":"27650:50:31","nodeType":"YulVariableDeclaration","src":"27650:50:31","value":{"arguments":[{"name":"slotValue","nativeSrc":"27690:9:31","nodeType":"YulIdentifier","src":"27690:9:31"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"27664:25:31","nodeType":"YulIdentifier","src":"27664:25:31"},"nativeSrc":"27664:36:31","nodeType":"YulFunctionCall","src":"27664:36:31"},"variables":[{"name":"length","nativeSrc":"27654:6:31","nodeType":"YulTypedName","src":"27654:6:31","type":""}]},{"nativeSrc":"27709:96:31","nodeType":"YulAssignment","src":"27709:96:31","value":{"arguments":[{"name":"pos","nativeSrc":"27793:3:31","nodeType":"YulIdentifier","src":"27793:3:31"},{"name":"length","nativeSrc":"27798:6:31","nodeType":"YulIdentifier","src":"27798:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"27716:76:31","nodeType":"YulIdentifier","src":"27716:76:31"},"nativeSrc":"27716:89:31","nodeType":"YulFunctionCall","src":"27716:89:31"},"variableNames":[{"name":"pos","nativeSrc":"27709:3:31","nodeType":"YulIdentifier","src":"27709:3:31"}]},{"cases":[{"body":{"nativeSrc":"27854:159:31","nodeType":"YulBlock","src":"27854:159:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"27907:3:31","nodeType":"YulIdentifier","src":"27907:3:31"},{"arguments":[{"name":"slotValue","nativeSrc":"27916:9:31","nodeType":"YulIdentifier","src":"27916:9:31"},{"arguments":[{"kind":"number","nativeSrc":"27931:4:31","nodeType":"YulLiteral","src":"27931:4:31","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"27927:3:31","nodeType":"YulIdentifier","src":"27927:3:31"},"nativeSrc":"27927:9:31","nodeType":"YulFunctionCall","src":"27927:9:31"}],"functionName":{"name":"and","nativeSrc":"27912:3:31","nodeType":"YulIdentifier","src":"27912:3:31"},"nativeSrc":"27912:25:31","nodeType":"YulFunctionCall","src":"27912:25:31"}],"functionName":{"name":"mstore","nativeSrc":"27900:6:31","nodeType":"YulIdentifier","src":"27900:6:31"},"nativeSrc":"27900:38:31","nodeType":"YulFunctionCall","src":"27900:38:31"},"nativeSrc":"27900:38:31","nodeType":"YulExpressionStatement","src":"27900:38:31"},{"nativeSrc":"27951:52:31","nodeType":"YulAssignment","src":"27951:52:31","value":{"arguments":[{"name":"pos","nativeSrc":"27962:3:31","nodeType":"YulIdentifier","src":"27962:3:31"},{"arguments":[{"name":"length","nativeSrc":"27971:6:31","nodeType":"YulIdentifier","src":"27971:6:31"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"27993:6:31","nodeType":"YulIdentifier","src":"27993:6:31"}],"functionName":{"name":"iszero","nativeSrc":"27986:6:31","nodeType":"YulIdentifier","src":"27986:6:31"},"nativeSrc":"27986:14:31","nodeType":"YulFunctionCall","src":"27986:14:31"}],"functionName":{"name":"iszero","nativeSrc":"27979:6:31","nodeType":"YulIdentifier","src":"27979:6:31"},"nativeSrc":"27979:22:31","nodeType":"YulFunctionCall","src":"27979:22:31"}],"functionName":{"name":"mul","nativeSrc":"27967:3:31","nodeType":"YulIdentifier","src":"27967:3:31"},"nativeSrc":"27967:35:31","nodeType":"YulFunctionCall","src":"27967:35:31"}],"functionName":{"name":"add","nativeSrc":"27958:3:31","nodeType":"YulIdentifier","src":"27958:3:31"},"nativeSrc":"27958:45:31","nodeType":"YulFunctionCall","src":"27958:45:31"},"variableNames":[{"name":"ret","nativeSrc":"27951:3:31","nodeType":"YulIdentifier","src":"27951:3:31"}]}]},"nativeSrc":"27847:166:31","nodeType":"YulCase","src":"27847:166:31","value":{"kind":"number","nativeSrc":"27852:1:31","nodeType":"YulLiteral","src":"27852:1:31","type":"","value":"0"}},{"body":{"nativeSrc":"28029:334:31","nodeType":"YulBlock","src":"28029:334:31","statements":[{"nativeSrc":"28074:53:31","nodeType":"YulVariableDeclaration","src":"28074:53:31","value":{"arguments":[{"name":"value","nativeSrc":"28121:5:31","nodeType":"YulIdentifier","src":"28121:5:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"28089:31:31","nodeType":"YulIdentifier","src":"28089:31:31"},"nativeSrc":"28089:38:31","nodeType":"YulFunctionCall","src":"28089:38:31"},"variables":[{"name":"dataPos","nativeSrc":"28078:7:31","nodeType":"YulTypedName","src":"28078:7:31","type":""}]},{"nativeSrc":"28140:10:31","nodeType":"YulVariableDeclaration","src":"28140:10:31","value":{"kind":"number","nativeSrc":"28149:1:31","nodeType":"YulLiteral","src":"28149:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"28144:1:31","nodeType":"YulTypedName","src":"28144:1:31","type":""}]},{"body":{"nativeSrc":"28207:110:31","nodeType":"YulBlock","src":"28207:110:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"28236:3:31","nodeType":"YulIdentifier","src":"28236:3:31"},{"name":"i","nativeSrc":"28241:1:31","nodeType":"YulIdentifier","src":"28241:1:31"}],"functionName":{"name":"add","nativeSrc":"28232:3:31","nodeType":"YulIdentifier","src":"28232:3:31"},"nativeSrc":"28232:11:31","nodeType":"YulFunctionCall","src":"28232:11:31"},{"arguments":[{"name":"dataPos","nativeSrc":"28251:7:31","nodeType":"YulIdentifier","src":"28251:7:31"}],"functionName":{"name":"sload","nativeSrc":"28245:5:31","nodeType":"YulIdentifier","src":"28245:5:31"},"nativeSrc":"28245:14:31","nodeType":"YulFunctionCall","src":"28245:14:31"}],"functionName":{"name":"mstore","nativeSrc":"28225:6:31","nodeType":"YulIdentifier","src":"28225:6:31"},"nativeSrc":"28225:35:31","nodeType":"YulFunctionCall","src":"28225:35:31"},"nativeSrc":"28225:35:31","nodeType":"YulExpressionStatement","src":"28225:35:31"},{"nativeSrc":"28277:26:31","nodeType":"YulAssignment","src":"28277:26:31","value":{"arguments":[{"name":"dataPos","nativeSrc":"28292:7:31","nodeType":"YulIdentifier","src":"28292:7:31"},{"kind":"number","nativeSrc":"28301:1:31","nodeType":"YulLiteral","src":"28301:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"28288:3:31","nodeType":"YulIdentifier","src":"28288:3:31"},"nativeSrc":"28288:15:31","nodeType":"YulFunctionCall","src":"28288:15:31"},"variableNames":[{"name":"dataPos","nativeSrc":"28277:7:31","nodeType":"YulIdentifier","src":"28277:7:31"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"28174:1:31","nodeType":"YulIdentifier","src":"28174:1:31"},{"name":"length","nativeSrc":"28177:6:31","nodeType":"YulIdentifier","src":"28177:6:31"}],"functionName":{"name":"lt","nativeSrc":"28171:2:31","nodeType":"YulIdentifier","src":"28171:2:31"},"nativeSrc":"28171:13:31","nodeType":"YulFunctionCall","src":"28171:13:31"},"nativeSrc":"28163:154:31","nodeType":"YulForLoop","post":{"nativeSrc":"28185:21:31","nodeType":"YulBlock","src":"28185:21:31","statements":[{"nativeSrc":"28187:17:31","nodeType":"YulAssignment","src":"28187:17:31","value":{"arguments":[{"name":"i","nativeSrc":"28196:1:31","nodeType":"YulIdentifier","src":"28196:1:31"},{"kind":"number","nativeSrc":"28199:4:31","nodeType":"YulLiteral","src":"28199:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"28192:3:31","nodeType":"YulIdentifier","src":"28192:3:31"},"nativeSrc":"28192:12:31","nodeType":"YulFunctionCall","src":"28192:12:31"},"variableNames":[{"name":"i","nativeSrc":"28187:1:31","nodeType":"YulIdentifier","src":"28187:1:31"}]}]},"pre":{"nativeSrc":"28167:3:31","nodeType":"YulBlock","src":"28167:3:31","statements":[]},"src":"28163:154:31"},{"nativeSrc":"28330:23:31","nodeType":"YulAssignment","src":"28330:23:31","value":{"arguments":[{"name":"pos","nativeSrc":"28341:3:31","nodeType":"YulIdentifier","src":"28341:3:31"},{"name":"length","nativeSrc":"28346:6:31","nodeType":"YulIdentifier","src":"28346:6:31"}],"functionName":{"name":"add","nativeSrc":"28337:3:31","nodeType":"YulIdentifier","src":"28337:3:31"},"nativeSrc":"28337:16:31","nodeType":"YulFunctionCall","src":"28337:16:31"},"variableNames":[{"name":"ret","nativeSrc":"28330:3:31","nodeType":"YulIdentifier","src":"28330:3:31"}]}]},"nativeSrc":"28022:341:31","nodeType":"YulCase","src":"28022:341:31","value":{"kind":"number","nativeSrc":"28027:1:31","nodeType":"YulLiteral","src":"28027:1:31","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nativeSrc":"27825:9:31","nodeType":"YulIdentifier","src":"27825:9:31"},{"kind":"number","nativeSrc":"27836:1:31","nodeType":"YulLiteral","src":"27836:1:31","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"27821:3:31","nodeType":"YulIdentifier","src":"27821:3:31"},"nativeSrc":"27821:17:31","nodeType":"YulFunctionCall","src":"27821:17:31"},"nativeSrc":"27814:549:31","nodeType":"YulSwitch","src":"27814:549:31"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"27495:874:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27583:5:31","nodeType":"YulTypedName","src":"27583:5:31","type":""},{"name":"pos","nativeSrc":"27590:3:31","nodeType":"YulTypedName","src":"27590:3:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"27598:3:31","nodeType":"YulTypedName","src":"27598:3:31","type":""}],"src":"27495:874:31"},{"body":{"nativeSrc":"28485:280:31","nodeType":"YulBlock","src":"28485:280:31","statements":[{"nativeSrc":"28495:53:31","nodeType":"YulVariableDeclaration","src":"28495:53:31","value":{"arguments":[{"name":"value","nativeSrc":"28542:5:31","nodeType":"YulIdentifier","src":"28542:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"28509:32:31","nodeType":"YulIdentifier","src":"28509:32:31"},"nativeSrc":"28509:39:31","nodeType":"YulFunctionCall","src":"28509:39:31"},"variables":[{"name":"length","nativeSrc":"28499:6:31","nodeType":"YulTypedName","src":"28499:6:31","type":""}]},{"nativeSrc":"28557:96:31","nodeType":"YulAssignment","src":"28557:96:31","value":{"arguments":[{"name":"pos","nativeSrc":"28641:3:31","nodeType":"YulIdentifier","src":"28641:3:31"},{"name":"length","nativeSrc":"28646:6:31","nodeType":"YulIdentifier","src":"28646:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"28564:76:31","nodeType":"YulIdentifier","src":"28564:76:31"},"nativeSrc":"28564:89:31","nodeType":"YulFunctionCall","src":"28564:89:31"},"variableNames":[{"name":"pos","nativeSrc":"28557:3:31","nodeType":"YulIdentifier","src":"28557:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"28701:5:31","nodeType":"YulIdentifier","src":"28701:5:31"},{"kind":"number","nativeSrc":"28708:4:31","nodeType":"YulLiteral","src":"28708:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"28697:3:31","nodeType":"YulIdentifier","src":"28697:3:31"},"nativeSrc":"28697:16:31","nodeType":"YulFunctionCall","src":"28697:16:31"},{"name":"pos","nativeSrc":"28715:3:31","nodeType":"YulIdentifier","src":"28715:3:31"},{"name":"length","nativeSrc":"28720:6:31","nodeType":"YulIdentifier","src":"28720:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"28662:34:31","nodeType":"YulIdentifier","src":"28662:34:31"},"nativeSrc":"28662:65:31","nodeType":"YulFunctionCall","src":"28662:65:31"},"nativeSrc":"28662:65:31","nodeType":"YulExpressionStatement","src":"28662:65:31"},{"nativeSrc":"28736:23:31","nodeType":"YulAssignment","src":"28736:23:31","value":{"arguments":[{"name":"pos","nativeSrc":"28747:3:31","nodeType":"YulIdentifier","src":"28747:3:31"},{"name":"length","nativeSrc":"28752:6:31","nodeType":"YulIdentifier","src":"28752:6:31"}],"functionName":{"name":"add","nativeSrc":"28743:3:31","nodeType":"YulIdentifier","src":"28743:3:31"},"nativeSrc":"28743:16:31","nodeType":"YulFunctionCall","src":"28743:16:31"},"variableNames":[{"name":"end","nativeSrc":"28736:3:31","nodeType":"YulIdentifier","src":"28736:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"28375:390:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"28466:5:31","nodeType":"YulTypedName","src":"28466:5:31","type":""},{"name":"pos","nativeSrc":"28473:3:31","nodeType":"YulTypedName","src":"28473:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28481:3:31","nodeType":"YulTypedName","src":"28481:3:31","type":""}],"src":"28375:390:31"},{"body":{"nativeSrc":"28952:248:31","nodeType":"YulBlock","src":"28952:248:31","statements":[{"nativeSrc":"28963:99:31","nodeType":"YulAssignment","src":"28963:99:31","value":{"arguments":[{"name":"value0","nativeSrc":"29049:6:31","nodeType":"YulIdentifier","src":"29049:6:31"},{"name":"pos","nativeSrc":"29058:3:31","nodeType":"YulIdentifier","src":"29058:3:31"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"28970:78:31","nodeType":"YulIdentifier","src":"28970:78:31"},"nativeSrc":"28970:92:31","nodeType":"YulFunctionCall","src":"28970:92:31"},"variableNames":[{"name":"pos","nativeSrc":"28963:3:31","nodeType":"YulIdentifier","src":"28963:3:31"}]},{"nativeSrc":"29072:102:31","nodeType":"YulAssignment","src":"29072:102:31","value":{"arguments":[{"name":"value1","nativeSrc":"29161:6:31","nodeType":"YulIdentifier","src":"29161:6:31"},{"name":"pos","nativeSrc":"29170:3:31","nodeType":"YulIdentifier","src":"29170:3:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"29079:81:31","nodeType":"YulIdentifier","src":"29079:81:31"},"nativeSrc":"29079:95:31","nodeType":"YulFunctionCall","src":"29079:95:31"},"variableNames":[{"name":"pos","nativeSrc":"29072:3:31","nodeType":"YulIdentifier","src":"29072:3:31"}]},{"nativeSrc":"29184:10:31","nodeType":"YulAssignment","src":"29184:10:31","value":{"name":"pos","nativeSrc":"29191:3:31","nodeType":"YulIdentifier","src":"29191:3:31"},"variableNames":[{"name":"end","nativeSrc":"29184:3:31","nodeType":"YulIdentifier","src":"29184:3:31"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"28771:429:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28923:3:31","nodeType":"YulTypedName","src":"28923:3:31","type":""},{"name":"value1","nativeSrc":"28929:6:31","nodeType":"YulTypedName","src":"28929:6:31","type":""},{"name":"value0","nativeSrc":"28937:6:31","nodeType":"YulTypedName","src":"28937:6:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28948:3:31","nodeType":"YulTypedName","src":"28948:3:31","type":""}],"src":"28771:429:31"},{"body":{"nativeSrc":"29234:152:31","nodeType":"YulBlock","src":"29234:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"29251:1:31","nodeType":"YulLiteral","src":"29251:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"29254:77:31","nodeType":"YulLiteral","src":"29254:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"29244:6:31","nodeType":"YulIdentifier","src":"29244:6:31"},"nativeSrc":"29244:88:31","nodeType":"YulFunctionCall","src":"29244:88:31"},"nativeSrc":"29244:88:31","nodeType":"YulExpressionStatement","src":"29244:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"29348:1:31","nodeType":"YulLiteral","src":"29348:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"29351:4:31","nodeType":"YulLiteral","src":"29351:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"29341:6:31","nodeType":"YulIdentifier","src":"29341:6:31"},"nativeSrc":"29341:15:31","nodeType":"YulFunctionCall","src":"29341:15:31"},"nativeSrc":"29341:15:31","nodeType":"YulExpressionStatement","src":"29341:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"29372:1:31","nodeType":"YulLiteral","src":"29372:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"29375:4:31","nodeType":"YulLiteral","src":"29375:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"29365:6:31","nodeType":"YulIdentifier","src":"29365:6:31"},"nativeSrc":"29365:15:31","nodeType":"YulFunctionCall","src":"29365:15:31"},"nativeSrc":"29365:15:31","nodeType":"YulExpressionStatement","src":"29365:15:31"}]},"name":"panic_error_0x32","nativeSrc":"29206:180:31","nodeType":"YulFunctionDefinition","src":"29206:180:31"},{"body":{"nativeSrc":"29518:206:31","nodeType":"YulBlock","src":"29518:206:31","statements":[{"nativeSrc":"29528:26:31","nodeType":"YulAssignment","src":"29528:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"29540:9:31","nodeType":"YulIdentifier","src":"29540:9:31"},{"kind":"number","nativeSrc":"29551:2:31","nodeType":"YulLiteral","src":"29551:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29536:3:31","nodeType":"YulIdentifier","src":"29536:3:31"},"nativeSrc":"29536:18:31","nodeType":"YulFunctionCall","src":"29536:18:31"},"variableNames":[{"name":"tail","nativeSrc":"29528:4:31","nodeType":"YulIdentifier","src":"29528:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"29608:6:31","nodeType":"YulIdentifier","src":"29608:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"29621:9:31","nodeType":"YulIdentifier","src":"29621:9:31"},{"kind":"number","nativeSrc":"29632:1:31","nodeType":"YulLiteral","src":"29632:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29617:3:31","nodeType":"YulIdentifier","src":"29617:3:31"},"nativeSrc":"29617:17:31","nodeType":"YulFunctionCall","src":"29617:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"29564:43:31","nodeType":"YulIdentifier","src":"29564:43:31"},"nativeSrc":"29564:71:31","nodeType":"YulFunctionCall","src":"29564:71:31"},"nativeSrc":"29564:71:31","nodeType":"YulExpressionStatement","src":"29564:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"29689:6:31","nodeType":"YulIdentifier","src":"29689:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"29702:9:31","nodeType":"YulIdentifier","src":"29702:9:31"},{"kind":"number","nativeSrc":"29713:2:31","nodeType":"YulLiteral","src":"29713:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29698:3:31","nodeType":"YulIdentifier","src":"29698:3:31"},"nativeSrc":"29698:18:31","nodeType":"YulFunctionCall","src":"29698:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"29645:43:31","nodeType":"YulIdentifier","src":"29645:43:31"},"nativeSrc":"29645:72:31","nodeType":"YulFunctionCall","src":"29645:72:31"},"nativeSrc":"29645:72:31","nodeType":"YulExpressionStatement","src":"29645:72:31"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"29392:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29482:9:31","nodeType":"YulTypedName","src":"29482:9:31","type":""},{"name":"value1","nativeSrc":"29494:6:31","nodeType":"YulTypedName","src":"29494:6:31","type":""},{"name":"value0","nativeSrc":"29502:6:31","nodeType":"YulTypedName","src":"29502:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29513:4:31","nodeType":"YulTypedName","src":"29513:4:31","type":""}],"src":"29392:332:31"},{"body":{"nativeSrc":"29856:206:31","nodeType":"YulBlock","src":"29856:206:31","statements":[{"nativeSrc":"29866:26:31","nodeType":"YulAssignment","src":"29866:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"29878:9:31","nodeType":"YulIdentifier","src":"29878:9:31"},{"kind":"number","nativeSrc":"29889:2:31","nodeType":"YulLiteral","src":"29889:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29874:3:31","nodeType":"YulIdentifier","src":"29874:3:31"},"nativeSrc":"29874:18:31","nodeType":"YulFunctionCall","src":"29874:18:31"},"variableNames":[{"name":"tail","nativeSrc":"29866:4:31","nodeType":"YulIdentifier","src":"29866:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"29946:6:31","nodeType":"YulIdentifier","src":"29946:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"29959:9:31","nodeType":"YulIdentifier","src":"29959:9:31"},{"kind":"number","nativeSrc":"29970:1:31","nodeType":"YulLiteral","src":"29970:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29955:3:31","nodeType":"YulIdentifier","src":"29955:3:31"},"nativeSrc":"29955:17:31","nodeType":"YulFunctionCall","src":"29955:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"29902:43:31","nodeType":"YulIdentifier","src":"29902:43:31"},"nativeSrc":"29902:71:31","nodeType":"YulFunctionCall","src":"29902:71:31"},"nativeSrc":"29902:71:31","nodeType":"YulExpressionStatement","src":"29902:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"30027:6:31","nodeType":"YulIdentifier","src":"30027:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"30040:9:31","nodeType":"YulIdentifier","src":"30040:9:31"},{"kind":"number","nativeSrc":"30051:2:31","nodeType":"YulLiteral","src":"30051:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30036:3:31","nodeType":"YulIdentifier","src":"30036:3:31"},"nativeSrc":"30036:18:31","nodeType":"YulFunctionCall","src":"30036:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"29983:43:31","nodeType":"YulIdentifier","src":"29983:43:31"},"nativeSrc":"29983:72:31","nodeType":"YulFunctionCall","src":"29983:72:31"},"nativeSrc":"29983:72:31","nodeType":"YulExpressionStatement","src":"29983:72:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"29730:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29820:9:31","nodeType":"YulTypedName","src":"29820:9:31","type":""},{"name":"value1","nativeSrc":"29832:6:31","nodeType":"YulTypedName","src":"29832:6:31","type":""},{"name":"value0","nativeSrc":"29840:6:31","nodeType":"YulTypedName","src":"29840:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29851:4:31","nodeType":"YulTypedName","src":"29851:4:31","type":""}],"src":"29730:332:31"},{"body":{"nativeSrc":"30121:32:31","nodeType":"YulBlock","src":"30121:32:31","statements":[{"nativeSrc":"30131:16:31","nodeType":"YulAssignment","src":"30131:16:31","value":{"name":"value","nativeSrc":"30142:5:31","nodeType":"YulIdentifier","src":"30142:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"30131:7:31","nodeType":"YulIdentifier","src":"30131:7:31"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"30068:85:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"30103:5:31","nodeType":"YulTypedName","src":"30103:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"30113:7:31","nodeType":"YulTypedName","src":"30113:7:31","type":""}],"src":"30068:85:31"},{"body":{"nativeSrc":"30203:57:31","nodeType":"YulBlock","src":"30203:57:31","statements":[{"nativeSrc":"30213:41:31","nodeType":"YulAssignment","src":"30213:41:31","value":{"arguments":[{"name":"value","nativeSrc":"30228:5:31","nodeType":"YulIdentifier","src":"30228:5:31"},{"kind":"number","nativeSrc":"30235:18:31","nodeType":"YulLiteral","src":"30235:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"30224:3:31","nodeType":"YulIdentifier","src":"30224:3:31"},"nativeSrc":"30224:30:31","nodeType":"YulFunctionCall","src":"30224:30:31"},"variableNames":[{"name":"cleaned","nativeSrc":"30213:7:31","nodeType":"YulIdentifier","src":"30213:7:31"}]}]},"name":"cleanup_t_uint64","nativeSrc":"30159:101:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"30185:5:31","nodeType":"YulTypedName","src":"30185:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"30195:7:31","nodeType":"YulTypedName","src":"30195:7:31","type":""}],"src":"30159:101:31"},{"body":{"nativeSrc":"30333:89:31","nodeType":"YulBlock","src":"30333:89:31","statements":[{"nativeSrc":"30343:73:31","nodeType":"YulAssignment","src":"30343:73:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"30408:5:31","nodeType":"YulIdentifier","src":"30408:5:31"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"30382:25:31","nodeType":"YulIdentifier","src":"30382:25:31"},"nativeSrc":"30382:32:31","nodeType":"YulFunctionCall","src":"30382:32:31"}],"functionName":{"name":"identity","nativeSrc":"30373:8:31","nodeType":"YulIdentifier","src":"30373:8:31"},"nativeSrc":"30373:42:31","nodeType":"YulFunctionCall","src":"30373:42:31"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"30356:16:31","nodeType":"YulIdentifier","src":"30356:16:31"},"nativeSrc":"30356:60:31","nodeType":"YulFunctionCall","src":"30356:60:31"},"variableNames":[{"name":"converted","nativeSrc":"30343:9:31","nodeType":"YulIdentifier","src":"30343:9:31"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"30266:156:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"30313:5:31","nodeType":"YulTypedName","src":"30313:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"30323:9:31","nodeType":"YulTypedName","src":"30323:9:31","type":""}],"src":"30266:156:31"},{"body":{"nativeSrc":"30500:73:31","nodeType":"YulBlock","src":"30500:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"30517:3:31","nodeType":"YulIdentifier","src":"30517:3:31"},{"arguments":[{"name":"value","nativeSrc":"30560:5:31","nodeType":"YulIdentifier","src":"30560:5:31"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"30522:37:31","nodeType":"YulIdentifier","src":"30522:37:31"},"nativeSrc":"30522:44:31","nodeType":"YulFunctionCall","src":"30522:44:31"}],"functionName":{"name":"mstore","nativeSrc":"30510:6:31","nodeType":"YulIdentifier","src":"30510:6:31"},"nativeSrc":"30510:57:31","nodeType":"YulFunctionCall","src":"30510:57:31"},"nativeSrc":"30510:57:31","nodeType":"YulExpressionStatement","src":"30510:57:31"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"30428:145:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"30488:5:31","nodeType":"YulTypedName","src":"30488:5:31","type":""},{"name":"pos","nativeSrc":"30495:3:31","nodeType":"YulTypedName","src":"30495:3:31","type":""}],"src":"30428:145:31"},{"body":{"nativeSrc":"30684:131:31","nodeType":"YulBlock","src":"30684:131:31","statements":[{"nativeSrc":"30694:26:31","nodeType":"YulAssignment","src":"30694:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"30706:9:31","nodeType":"YulIdentifier","src":"30706:9:31"},{"kind":"number","nativeSrc":"30717:2:31","nodeType":"YulLiteral","src":"30717:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30702:3:31","nodeType":"YulIdentifier","src":"30702:3:31"},"nativeSrc":"30702:18:31","nodeType":"YulFunctionCall","src":"30702:18:31"},"variableNames":[{"name":"tail","nativeSrc":"30694:4:31","nodeType":"YulIdentifier","src":"30694:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"30781:6:31","nodeType":"YulIdentifier","src":"30781:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"30794:9:31","nodeType":"YulIdentifier","src":"30794:9:31"},{"kind":"number","nativeSrc":"30805:1:31","nodeType":"YulLiteral","src":"30805:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30790:3:31","nodeType":"YulIdentifier","src":"30790:3:31"},"nativeSrc":"30790:17:31","nodeType":"YulFunctionCall","src":"30790:17:31"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"30730:50:31","nodeType":"YulIdentifier","src":"30730:50:31"},"nativeSrc":"30730:78:31","nodeType":"YulFunctionCall","src":"30730:78:31"},"nativeSrc":"30730:78:31","nodeType":"YulExpressionStatement","src":"30730:78:31"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"30579:236:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30656:9:31","nodeType":"YulTypedName","src":"30656:9:31","type":""},{"name":"value0","nativeSrc":"30668:6:31","nodeType":"YulTypedName","src":"30668:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"30679:4:31","nodeType":"YulTypedName","src":"30679:4:31","type":""}],"src":"30579:236:31"},{"body":{"nativeSrc":"30849:152:31","nodeType":"YulBlock","src":"30849:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"30866:1:31","nodeType":"YulLiteral","src":"30866:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"30869:77:31","nodeType":"YulLiteral","src":"30869:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"30859:6:31","nodeType":"YulIdentifier","src":"30859:6:31"},"nativeSrc":"30859:88:31","nodeType":"YulFunctionCall","src":"30859:88:31"},"nativeSrc":"30859:88:31","nodeType":"YulExpressionStatement","src":"30859:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"30963:1:31","nodeType":"YulLiteral","src":"30963:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"30966:4:31","nodeType":"YulLiteral","src":"30966:4:31","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"30956:6:31","nodeType":"YulIdentifier","src":"30956:6:31"},"nativeSrc":"30956:15:31","nodeType":"YulFunctionCall","src":"30956:15:31"},"nativeSrc":"30956:15:31","nodeType":"YulExpressionStatement","src":"30956:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"30987:1:31","nodeType":"YulLiteral","src":"30987:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"30990:4:31","nodeType":"YulLiteral","src":"30990:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"30980:6:31","nodeType":"YulIdentifier","src":"30980:6:31"},"nativeSrc":"30980:15:31","nodeType":"YulFunctionCall","src":"30980:15:31"},"nativeSrc":"30980:15:31","nodeType":"YulExpressionStatement","src":"30980:15:31"}]},"name":"panic_error_0x12","nativeSrc":"30821:180:31","nodeType":"YulFunctionDefinition","src":"30821:180:31"},{"body":{"nativeSrc":"31050:79:31","nodeType":"YulBlock","src":"31050:79:31","statements":[{"body":{"nativeSrc":"31107:16:31","nodeType":"YulBlock","src":"31107:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"31116:1:31","nodeType":"YulLiteral","src":"31116:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"31119:1:31","nodeType":"YulLiteral","src":"31119:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"31109:6:31","nodeType":"YulIdentifier","src":"31109:6:31"},"nativeSrc":"31109:12:31","nodeType":"YulFunctionCall","src":"31109:12:31"},"nativeSrc":"31109:12:31","nodeType":"YulExpressionStatement","src":"31109:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"31073:5:31","nodeType":"YulIdentifier","src":"31073:5:31"},{"arguments":[{"name":"value","nativeSrc":"31098:5:31","nodeType":"YulIdentifier","src":"31098:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"31080:17:31","nodeType":"YulIdentifier","src":"31080:17:31"},"nativeSrc":"31080:24:31","nodeType":"YulFunctionCall","src":"31080:24:31"}],"functionName":{"name":"eq","nativeSrc":"31070:2:31","nodeType":"YulIdentifier","src":"31070:2:31"},"nativeSrc":"31070:35:31","nodeType":"YulFunctionCall","src":"31070:35:31"}],"functionName":{"name":"iszero","nativeSrc":"31063:6:31","nodeType":"YulIdentifier","src":"31063:6:31"},"nativeSrc":"31063:43:31","nodeType":"YulFunctionCall","src":"31063:43:31"},"nativeSrc":"31060:63:31","nodeType":"YulIf","src":"31060:63:31"}]},"name":"validator_revert_t_bytes32","nativeSrc":"31007:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"31043:5:31","nodeType":"YulTypedName","src":"31043:5:31","type":""}],"src":"31007:122:31"},{"body":{"nativeSrc":"31198:80:31","nodeType":"YulBlock","src":"31198:80:31","statements":[{"nativeSrc":"31208:22:31","nodeType":"YulAssignment","src":"31208:22:31","value":{"arguments":[{"name":"offset","nativeSrc":"31223:6:31","nodeType":"YulIdentifier","src":"31223:6:31"}],"functionName":{"name":"mload","nativeSrc":"31217:5:31","nodeType":"YulIdentifier","src":"31217:5:31"},"nativeSrc":"31217:13:31","nodeType":"YulFunctionCall","src":"31217:13:31"},"variableNames":[{"name":"value","nativeSrc":"31208:5:31","nodeType":"YulIdentifier","src":"31208:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"31266:5:31","nodeType":"YulIdentifier","src":"31266:5:31"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"31239:26:31","nodeType":"YulIdentifier","src":"31239:26:31"},"nativeSrc":"31239:33:31","nodeType":"YulFunctionCall","src":"31239:33:31"},"nativeSrc":"31239:33:31","nodeType":"YulExpressionStatement","src":"31239:33:31"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"31135:143:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"31176:6:31","nodeType":"YulTypedName","src":"31176:6:31","type":""},{"name":"end","nativeSrc":"31184:3:31","nodeType":"YulTypedName","src":"31184:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"31192:5:31","nodeType":"YulTypedName","src":"31192:5:31","type":""}],"src":"31135:143:31"},{"body":{"nativeSrc":"31361:274:31","nodeType":"YulBlock","src":"31361:274:31","statements":[{"body":{"nativeSrc":"31407:83:31","nodeType":"YulBlock","src":"31407:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"31409:77:31","nodeType":"YulIdentifier","src":"31409:77:31"},"nativeSrc":"31409:79:31","nodeType":"YulFunctionCall","src":"31409:79:31"},"nativeSrc":"31409:79:31","nodeType":"YulExpressionStatement","src":"31409:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"31382:7:31","nodeType":"YulIdentifier","src":"31382:7:31"},{"name":"headStart","nativeSrc":"31391:9:31","nodeType":"YulIdentifier","src":"31391:9:31"}],"functionName":{"name":"sub","nativeSrc":"31378:3:31","nodeType":"YulIdentifier","src":"31378:3:31"},"nativeSrc":"31378:23:31","nodeType":"YulFunctionCall","src":"31378:23:31"},{"kind":"number","nativeSrc":"31403:2:31","nodeType":"YulLiteral","src":"31403:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"31374:3:31","nodeType":"YulIdentifier","src":"31374:3:31"},"nativeSrc":"31374:32:31","nodeType":"YulFunctionCall","src":"31374:32:31"},"nativeSrc":"31371:119:31","nodeType":"YulIf","src":"31371:119:31"},{"nativeSrc":"31500:128:31","nodeType":"YulBlock","src":"31500:128:31","statements":[{"nativeSrc":"31515:15:31","nodeType":"YulVariableDeclaration","src":"31515:15:31","value":{"kind":"number","nativeSrc":"31529:1:31","nodeType":"YulLiteral","src":"31529:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"31519:6:31","nodeType":"YulTypedName","src":"31519:6:31","type":""}]},{"nativeSrc":"31544:74:31","nodeType":"YulAssignment","src":"31544:74:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"31590:9:31","nodeType":"YulIdentifier","src":"31590:9:31"},{"name":"offset","nativeSrc":"31601:6:31","nodeType":"YulIdentifier","src":"31601:6:31"}],"functionName":{"name":"add","nativeSrc":"31586:3:31","nodeType":"YulIdentifier","src":"31586:3:31"},"nativeSrc":"31586:22:31","nodeType":"YulFunctionCall","src":"31586:22:31"},{"name":"dataEnd","nativeSrc":"31610:7:31","nodeType":"YulIdentifier","src":"31610:7:31"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"31554:31:31","nodeType":"YulIdentifier","src":"31554:31:31"},"nativeSrc":"31554:64:31","nodeType":"YulFunctionCall","src":"31554:64:31"},"variableNames":[{"name":"value0","nativeSrc":"31544:6:31","nodeType":"YulIdentifier","src":"31544:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"31284:351:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31331:9:31","nodeType":"YulTypedName","src":"31331:9:31","type":""},{"name":"dataEnd","nativeSrc":"31342:7:31","nodeType":"YulTypedName","src":"31342:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"31354:6:31","nodeType":"YulTypedName","src":"31354:6:31","type":""}],"src":"31284:351:31"},{"body":{"nativeSrc":"31699:40:31","nodeType":"YulBlock","src":"31699:40:31","statements":[{"nativeSrc":"31710:22:31","nodeType":"YulAssignment","src":"31710:22:31","value":{"arguments":[{"name":"value","nativeSrc":"31726:5:31","nodeType":"YulIdentifier","src":"31726:5:31"}],"functionName":{"name":"mload","nativeSrc":"31720:5:31","nodeType":"YulIdentifier","src":"31720:5:31"},"nativeSrc":"31720:12:31","nodeType":"YulFunctionCall","src":"31720:12:31"},"variableNames":[{"name":"length","nativeSrc":"31710:6:31","nodeType":"YulIdentifier","src":"31710:6:31"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"31641:98:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"31682:5:31","nodeType":"YulTypedName","src":"31682:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"31692:6:31","nodeType":"YulTypedName","src":"31692:6:31","type":""}],"src":"31641:98:31"},{"body":{"nativeSrc":"31840:73:31","nodeType":"YulBlock","src":"31840:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"31857:3:31","nodeType":"YulIdentifier","src":"31857:3:31"},{"name":"length","nativeSrc":"31862:6:31","nodeType":"YulIdentifier","src":"31862:6:31"}],"functionName":{"name":"mstore","nativeSrc":"31850:6:31","nodeType":"YulIdentifier","src":"31850:6:31"},"nativeSrc":"31850:19:31","nodeType":"YulFunctionCall","src":"31850:19:31"},"nativeSrc":"31850:19:31","nodeType":"YulExpressionStatement","src":"31850:19:31"},{"nativeSrc":"31878:29:31","nodeType":"YulAssignment","src":"31878:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"31897:3:31","nodeType":"YulIdentifier","src":"31897:3:31"},{"kind":"number","nativeSrc":"31902:4:31","nodeType":"YulLiteral","src":"31902:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"31893:3:31","nodeType":"YulIdentifier","src":"31893:3:31"},"nativeSrc":"31893:14:31","nodeType":"YulFunctionCall","src":"31893:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"31878:11:31","nodeType":"YulIdentifier","src":"31878:11:31"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"31745:168:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31812:3:31","nodeType":"YulTypedName","src":"31812:3:31","type":""},{"name":"length","nativeSrc":"31817:6:31","nodeType":"YulTypedName","src":"31817:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"31828:11:31","nodeType":"YulTypedName","src":"31828:11:31","type":""}],"src":"31745:168:31"},{"body":{"nativeSrc":"32009:283:31","nodeType":"YulBlock","src":"32009:283:31","statements":[{"nativeSrc":"32019:52:31","nodeType":"YulVariableDeclaration","src":"32019:52:31","value":{"arguments":[{"name":"value","nativeSrc":"32065:5:31","nodeType":"YulIdentifier","src":"32065:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"32033:31:31","nodeType":"YulIdentifier","src":"32033:31:31"},"nativeSrc":"32033:38:31","nodeType":"YulFunctionCall","src":"32033:38:31"},"variables":[{"name":"length","nativeSrc":"32023:6:31","nodeType":"YulTypedName","src":"32023:6:31","type":""}]},{"nativeSrc":"32080:77:31","nodeType":"YulAssignment","src":"32080:77:31","value":{"arguments":[{"name":"pos","nativeSrc":"32145:3:31","nodeType":"YulIdentifier","src":"32145:3:31"},{"name":"length","nativeSrc":"32150:6:31","nodeType":"YulIdentifier","src":"32150:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"32087:57:31","nodeType":"YulIdentifier","src":"32087:57:31"},"nativeSrc":"32087:70:31","nodeType":"YulFunctionCall","src":"32087:70:31"},"variableNames":[{"name":"pos","nativeSrc":"32080:3:31","nodeType":"YulIdentifier","src":"32080:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"32205:5:31","nodeType":"YulIdentifier","src":"32205:5:31"},{"kind":"number","nativeSrc":"32212:4:31","nodeType":"YulLiteral","src":"32212:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"32201:3:31","nodeType":"YulIdentifier","src":"32201:3:31"},"nativeSrc":"32201:16:31","nodeType":"YulFunctionCall","src":"32201:16:31"},{"name":"pos","nativeSrc":"32219:3:31","nodeType":"YulIdentifier","src":"32219:3:31"},{"name":"length","nativeSrc":"32224:6:31","nodeType":"YulIdentifier","src":"32224:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"32166:34:31","nodeType":"YulIdentifier","src":"32166:34:31"},"nativeSrc":"32166:65:31","nodeType":"YulFunctionCall","src":"32166:65:31"},"nativeSrc":"32166:65:31","nodeType":"YulExpressionStatement","src":"32166:65:31"},{"nativeSrc":"32240:46:31","nodeType":"YulAssignment","src":"32240:46:31","value":{"arguments":[{"name":"pos","nativeSrc":"32251:3:31","nodeType":"YulIdentifier","src":"32251:3:31"},{"arguments":[{"name":"length","nativeSrc":"32278:6:31","nodeType":"YulIdentifier","src":"32278:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"32256:21:31","nodeType":"YulIdentifier","src":"32256:21:31"},"nativeSrc":"32256:29:31","nodeType":"YulFunctionCall","src":"32256:29:31"}],"functionName":{"name":"add","nativeSrc":"32247:3:31","nodeType":"YulIdentifier","src":"32247:3:31"},"nativeSrc":"32247:39:31","nodeType":"YulFunctionCall","src":"32247:39:31"},"variableNames":[{"name":"end","nativeSrc":"32240:3:31","nodeType":"YulIdentifier","src":"32240:3:31"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"31919:373:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"31990:5:31","nodeType":"YulTypedName","src":"31990:5:31","type":""},{"name":"pos","nativeSrc":"31997:3:31","nodeType":"YulTypedName","src":"31997:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"32005:3:31","nodeType":"YulTypedName","src":"32005:3:31","type":""}],"src":"31919:373:31"},{"body":{"nativeSrc":"32526:523:31","nodeType":"YulBlock","src":"32526:523:31","statements":[{"nativeSrc":"32536:27:31","nodeType":"YulAssignment","src":"32536:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"32548:9:31","nodeType":"YulIdentifier","src":"32548:9:31"},{"kind":"number","nativeSrc":"32559:3:31","nodeType":"YulLiteral","src":"32559:3:31","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"32544:3:31","nodeType":"YulIdentifier","src":"32544:3:31"},"nativeSrc":"32544:19:31","nodeType":"YulFunctionCall","src":"32544:19:31"},"variableNames":[{"name":"tail","nativeSrc":"32536:4:31","nodeType":"YulIdentifier","src":"32536:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"32617:6:31","nodeType":"YulIdentifier","src":"32617:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"32630:9:31","nodeType":"YulIdentifier","src":"32630:9:31"},{"kind":"number","nativeSrc":"32641:1:31","nodeType":"YulLiteral","src":"32641:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32626:3:31","nodeType":"YulIdentifier","src":"32626:3:31"},"nativeSrc":"32626:17:31","nodeType":"YulFunctionCall","src":"32626:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"32573:43:31","nodeType":"YulIdentifier","src":"32573:43:31"},"nativeSrc":"32573:71:31","nodeType":"YulFunctionCall","src":"32573:71:31"},"nativeSrc":"32573:71:31","nodeType":"YulExpressionStatement","src":"32573:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"32698:6:31","nodeType":"YulIdentifier","src":"32698:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"32711:9:31","nodeType":"YulIdentifier","src":"32711:9:31"},{"kind":"number","nativeSrc":"32722:2:31","nodeType":"YulLiteral","src":"32722:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32707:3:31","nodeType":"YulIdentifier","src":"32707:3:31"},"nativeSrc":"32707:18:31","nodeType":"YulFunctionCall","src":"32707:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"32654:43:31","nodeType":"YulIdentifier","src":"32654:43:31"},"nativeSrc":"32654:72:31","nodeType":"YulFunctionCall","src":"32654:72:31"},"nativeSrc":"32654:72:31","nodeType":"YulExpressionStatement","src":"32654:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"32780:6:31","nodeType":"YulIdentifier","src":"32780:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"32793:9:31","nodeType":"YulIdentifier","src":"32793:9:31"},{"kind":"number","nativeSrc":"32804:2:31","nodeType":"YulLiteral","src":"32804:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"32789:3:31","nodeType":"YulIdentifier","src":"32789:3:31"},"nativeSrc":"32789:18:31","nodeType":"YulFunctionCall","src":"32789:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"32736:43:31","nodeType":"YulIdentifier","src":"32736:43:31"},"nativeSrc":"32736:72:31","nodeType":"YulFunctionCall","src":"32736:72:31"},"nativeSrc":"32736:72:31","nodeType":"YulExpressionStatement","src":"32736:72:31"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"32862:6:31","nodeType":"YulIdentifier","src":"32862:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"32875:9:31","nodeType":"YulIdentifier","src":"32875:9:31"},{"kind":"number","nativeSrc":"32886:2:31","nodeType":"YulLiteral","src":"32886:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"32871:3:31","nodeType":"YulIdentifier","src":"32871:3:31"},"nativeSrc":"32871:18:31","nodeType":"YulFunctionCall","src":"32871:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"32818:43:31","nodeType":"YulIdentifier","src":"32818:43:31"},"nativeSrc":"32818:72:31","nodeType":"YulFunctionCall","src":"32818:72:31"},"nativeSrc":"32818:72:31","nodeType":"YulExpressionStatement","src":"32818:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"32911:9:31","nodeType":"YulIdentifier","src":"32911:9:31"},{"kind":"number","nativeSrc":"32922:3:31","nodeType":"YulLiteral","src":"32922:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"32907:3:31","nodeType":"YulIdentifier","src":"32907:3:31"},"nativeSrc":"32907:19:31","nodeType":"YulFunctionCall","src":"32907:19:31"},{"arguments":[{"name":"tail","nativeSrc":"32932:4:31","nodeType":"YulIdentifier","src":"32932:4:31"},{"name":"headStart","nativeSrc":"32938:9:31","nodeType":"YulIdentifier","src":"32938:9:31"}],"functionName":{"name":"sub","nativeSrc":"32928:3:31","nodeType":"YulIdentifier","src":"32928:3:31"},"nativeSrc":"32928:20:31","nodeType":"YulFunctionCall","src":"32928:20:31"}],"functionName":{"name":"mstore","nativeSrc":"32900:6:31","nodeType":"YulIdentifier","src":"32900:6:31"},"nativeSrc":"32900:49:31","nodeType":"YulFunctionCall","src":"32900:49:31"},"nativeSrc":"32900:49:31","nodeType":"YulExpressionStatement","src":"32900:49:31"},{"nativeSrc":"32958:84:31","nodeType":"YulAssignment","src":"32958:84:31","value":{"arguments":[{"name":"value4","nativeSrc":"33028:6:31","nodeType":"YulIdentifier","src":"33028:6:31"},{"name":"tail","nativeSrc":"33037:4:31","nodeType":"YulIdentifier","src":"33037:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"32966:61:31","nodeType":"YulIdentifier","src":"32966:61:31"},"nativeSrc":"32966:76:31","nodeType":"YulFunctionCall","src":"32966:76:31"},"variableNames":[{"name":"tail","nativeSrc":"32958:4:31","nodeType":"YulIdentifier","src":"32958:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"32298:751:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32466:9:31","nodeType":"YulTypedName","src":"32466:9:31","type":""},{"name":"value4","nativeSrc":"32478:6:31","nodeType":"YulTypedName","src":"32478:6:31","type":""},{"name":"value3","nativeSrc":"32486:6:31","nodeType":"YulTypedName","src":"32486:6:31","type":""},{"name":"value2","nativeSrc":"32494:6:31","nodeType":"YulTypedName","src":"32494:6:31","type":""},{"name":"value1","nativeSrc":"32502:6:31","nodeType":"YulTypedName","src":"32502:6:31","type":""},{"name":"value0","nativeSrc":"32510:6:31","nodeType":"YulTypedName","src":"32510:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32521:4:31","nodeType":"YulTypedName","src":"32521:4:31","type":""}],"src":"32298:751:31"},{"body":{"nativeSrc":"33117:79:31","nodeType":"YulBlock","src":"33117:79:31","statements":[{"nativeSrc":"33127:22:31","nodeType":"YulAssignment","src":"33127:22:31","value":{"arguments":[{"name":"offset","nativeSrc":"33142:6:31","nodeType":"YulIdentifier","src":"33142:6:31"}],"functionName":{"name":"mload","nativeSrc":"33136:5:31","nodeType":"YulIdentifier","src":"33136:5:31"},"nativeSrc":"33136:13:31","nodeType":"YulFunctionCall","src":"33136:13:31"},"variableNames":[{"name":"value","nativeSrc":"33127:5:31","nodeType":"YulIdentifier","src":"33127:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"33184:5:31","nodeType":"YulIdentifier","src":"33184:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"33158:25:31","nodeType":"YulIdentifier","src":"33158:25:31"},"nativeSrc":"33158:32:31","nodeType":"YulFunctionCall","src":"33158:32:31"},"nativeSrc":"33158:32:31","nodeType":"YulExpressionStatement","src":"33158:32:31"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"33055:141:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"33095:6:31","nodeType":"YulTypedName","src":"33095:6:31","type":""},{"name":"end","nativeSrc":"33103:3:31","nodeType":"YulTypedName","src":"33103:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"33111:5:31","nodeType":"YulTypedName","src":"33111:5:31","type":""}],"src":"33055:141:31"},{"body":{"nativeSrc":"33278:273:31","nodeType":"YulBlock","src":"33278:273:31","statements":[{"body":{"nativeSrc":"33324:83:31","nodeType":"YulBlock","src":"33324:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"33326:77:31","nodeType":"YulIdentifier","src":"33326:77:31"},"nativeSrc":"33326:79:31","nodeType":"YulFunctionCall","src":"33326:79:31"},"nativeSrc":"33326:79:31","nodeType":"YulExpressionStatement","src":"33326:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"33299:7:31","nodeType":"YulIdentifier","src":"33299:7:31"},{"name":"headStart","nativeSrc":"33308:9:31","nodeType":"YulIdentifier","src":"33308:9:31"}],"functionName":{"name":"sub","nativeSrc":"33295:3:31","nodeType":"YulIdentifier","src":"33295:3:31"},"nativeSrc":"33295:23:31","nodeType":"YulFunctionCall","src":"33295:23:31"},{"kind":"number","nativeSrc":"33320:2:31","nodeType":"YulLiteral","src":"33320:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"33291:3:31","nodeType":"YulIdentifier","src":"33291:3:31"},"nativeSrc":"33291:32:31","nodeType":"YulFunctionCall","src":"33291:32:31"},"nativeSrc":"33288:119:31","nodeType":"YulIf","src":"33288:119:31"},{"nativeSrc":"33417:127:31","nodeType":"YulBlock","src":"33417:127:31","statements":[{"nativeSrc":"33432:15:31","nodeType":"YulVariableDeclaration","src":"33432:15:31","value":{"kind":"number","nativeSrc":"33446:1:31","nodeType":"YulLiteral","src":"33446:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"33436:6:31","nodeType":"YulTypedName","src":"33436:6:31","type":""}]},{"nativeSrc":"33461:73:31","nodeType":"YulAssignment","src":"33461:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"33506:9:31","nodeType":"YulIdentifier","src":"33506:9:31"},{"name":"offset","nativeSrc":"33517:6:31","nodeType":"YulIdentifier","src":"33517:6:31"}],"functionName":{"name":"add","nativeSrc":"33502:3:31","nodeType":"YulIdentifier","src":"33502:3:31"},"nativeSrc":"33502:22:31","nodeType":"YulFunctionCall","src":"33502:22:31"},{"name":"dataEnd","nativeSrc":"33526:7:31","nodeType":"YulIdentifier","src":"33526:7:31"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"33471:30:31","nodeType":"YulIdentifier","src":"33471:30:31"},"nativeSrc":"33471:63:31","nodeType":"YulFunctionCall","src":"33471:63:31"},"variableNames":[{"name":"value0","nativeSrc":"33461:6:31","nodeType":"YulIdentifier","src":"33461:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"33202:349:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33248:9:31","nodeType":"YulTypedName","src":"33248:9:31","type":""},{"name":"dataEnd","nativeSrc":"33259:7:31","nodeType":"YulTypedName","src":"33259:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"33271:6:31","nodeType":"YulTypedName","src":"33271:6:31","type":""}],"src":"33202:349:31"},{"body":{"nativeSrc":"33885:725:31","nodeType":"YulBlock","src":"33885:725:31","statements":[{"nativeSrc":"33895:27:31","nodeType":"YulAssignment","src":"33895:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"33907:9:31","nodeType":"YulIdentifier","src":"33907:9:31"},{"kind":"number","nativeSrc":"33918:3:31","nodeType":"YulLiteral","src":"33918:3:31","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"33903:3:31","nodeType":"YulIdentifier","src":"33903:3:31"},"nativeSrc":"33903:19:31","nodeType":"YulFunctionCall","src":"33903:19:31"},"variableNames":[{"name":"tail","nativeSrc":"33895:4:31","nodeType":"YulIdentifier","src":"33895:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"33976:6:31","nodeType":"YulIdentifier","src":"33976:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"33989:9:31","nodeType":"YulIdentifier","src":"33989:9:31"},{"kind":"number","nativeSrc":"34000:1:31","nodeType":"YulLiteral","src":"34000:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33985:3:31","nodeType":"YulIdentifier","src":"33985:3:31"},"nativeSrc":"33985:17:31","nodeType":"YulFunctionCall","src":"33985:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"33932:43:31","nodeType":"YulIdentifier","src":"33932:43:31"},"nativeSrc":"33932:71:31","nodeType":"YulFunctionCall","src":"33932:71:31"},"nativeSrc":"33932:71:31","nodeType":"YulExpressionStatement","src":"33932:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"34057:6:31","nodeType":"YulIdentifier","src":"34057:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"34070:9:31","nodeType":"YulIdentifier","src":"34070:9:31"},{"kind":"number","nativeSrc":"34081:2:31","nodeType":"YulLiteral","src":"34081:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34066:3:31","nodeType":"YulIdentifier","src":"34066:3:31"},"nativeSrc":"34066:18:31","nodeType":"YulFunctionCall","src":"34066:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"34013:43:31","nodeType":"YulIdentifier","src":"34013:43:31"},"nativeSrc":"34013:72:31","nodeType":"YulFunctionCall","src":"34013:72:31"},"nativeSrc":"34013:72:31","nodeType":"YulExpressionStatement","src":"34013:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"34106:9:31","nodeType":"YulIdentifier","src":"34106:9:31"},{"kind":"number","nativeSrc":"34117:2:31","nodeType":"YulLiteral","src":"34117:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"34102:3:31","nodeType":"YulIdentifier","src":"34102:3:31"},"nativeSrc":"34102:18:31","nodeType":"YulFunctionCall","src":"34102:18:31"},{"arguments":[{"name":"tail","nativeSrc":"34126:4:31","nodeType":"YulIdentifier","src":"34126:4:31"},{"name":"headStart","nativeSrc":"34132:9:31","nodeType":"YulIdentifier","src":"34132:9:31"}],"functionName":{"name":"sub","nativeSrc":"34122:3:31","nodeType":"YulIdentifier","src":"34122:3:31"},"nativeSrc":"34122:20:31","nodeType":"YulFunctionCall","src":"34122:20:31"}],"functionName":{"name":"mstore","nativeSrc":"34095:6:31","nodeType":"YulIdentifier","src":"34095:6:31"},"nativeSrc":"34095:48:31","nodeType":"YulFunctionCall","src":"34095:48:31"},"nativeSrc":"34095:48:31","nodeType":"YulExpressionStatement","src":"34095:48:31"},{"nativeSrc":"34152:116:31","nodeType":"YulAssignment","src":"34152:116:31","value":{"arguments":[{"name":"value2","nativeSrc":"34254:6:31","nodeType":"YulIdentifier","src":"34254:6:31"},{"name":"tail","nativeSrc":"34263:4:31","nodeType":"YulIdentifier","src":"34263:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"34160:93:31","nodeType":"YulIdentifier","src":"34160:93:31"},"nativeSrc":"34160:108:31","nodeType":"YulFunctionCall","src":"34160:108:31"},"variableNames":[{"name":"tail","nativeSrc":"34152:4:31","nodeType":"YulIdentifier","src":"34152:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"34289:9:31","nodeType":"YulIdentifier","src":"34289:9:31"},{"kind":"number","nativeSrc":"34300:2:31","nodeType":"YulLiteral","src":"34300:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"34285:3:31","nodeType":"YulIdentifier","src":"34285:3:31"},"nativeSrc":"34285:18:31","nodeType":"YulFunctionCall","src":"34285:18:31"},{"arguments":[{"name":"tail","nativeSrc":"34309:4:31","nodeType":"YulIdentifier","src":"34309:4:31"},{"name":"headStart","nativeSrc":"34315:9:31","nodeType":"YulIdentifier","src":"34315:9:31"}],"functionName":{"name":"sub","nativeSrc":"34305:3:31","nodeType":"YulIdentifier","src":"34305:3:31"},"nativeSrc":"34305:20:31","nodeType":"YulFunctionCall","src":"34305:20:31"}],"functionName":{"name":"mstore","nativeSrc":"34278:6:31","nodeType":"YulIdentifier","src":"34278:6:31"},"nativeSrc":"34278:48:31","nodeType":"YulFunctionCall","src":"34278:48:31"},"nativeSrc":"34278:48:31","nodeType":"YulExpressionStatement","src":"34278:48:31"},{"nativeSrc":"34335:116:31","nodeType":"YulAssignment","src":"34335:116:31","value":{"arguments":[{"name":"value3","nativeSrc":"34437:6:31","nodeType":"YulIdentifier","src":"34437:6:31"},{"name":"tail","nativeSrc":"34446:4:31","nodeType":"YulIdentifier","src":"34446:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"34343:93:31","nodeType":"YulIdentifier","src":"34343:93:31"},"nativeSrc":"34343:108:31","nodeType":"YulFunctionCall","src":"34343:108:31"},"variableNames":[{"name":"tail","nativeSrc":"34335:4:31","nodeType":"YulIdentifier","src":"34335:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"34472:9:31","nodeType":"YulIdentifier","src":"34472:9:31"},{"kind":"number","nativeSrc":"34483:3:31","nodeType":"YulLiteral","src":"34483:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"34468:3:31","nodeType":"YulIdentifier","src":"34468:3:31"},"nativeSrc":"34468:19:31","nodeType":"YulFunctionCall","src":"34468:19:31"},{"arguments":[{"name":"tail","nativeSrc":"34493:4:31","nodeType":"YulIdentifier","src":"34493:4:31"},{"name":"headStart","nativeSrc":"34499:9:31","nodeType":"YulIdentifier","src":"34499:9:31"}],"functionName":{"name":"sub","nativeSrc":"34489:3:31","nodeType":"YulIdentifier","src":"34489:3:31"},"nativeSrc":"34489:20:31","nodeType":"YulFunctionCall","src":"34489:20:31"}],"functionName":{"name":"mstore","nativeSrc":"34461:6:31","nodeType":"YulIdentifier","src":"34461:6:31"},"nativeSrc":"34461:49:31","nodeType":"YulFunctionCall","src":"34461:49:31"},"nativeSrc":"34461:49:31","nodeType":"YulExpressionStatement","src":"34461:49:31"},{"nativeSrc":"34519:84:31","nodeType":"YulAssignment","src":"34519:84:31","value":{"arguments":[{"name":"value4","nativeSrc":"34589:6:31","nodeType":"YulIdentifier","src":"34589:6:31"},{"name":"tail","nativeSrc":"34598:4:31","nodeType":"YulIdentifier","src":"34598:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"34527:61:31","nodeType":"YulIdentifier","src":"34527:61:31"},"nativeSrc":"34527:76:31","nodeType":"YulFunctionCall","src":"34527:76:31"},"variableNames":[{"name":"tail","nativeSrc":"34519:4:31","nodeType":"YulIdentifier","src":"34519:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"33557:1053:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33825:9:31","nodeType":"YulTypedName","src":"33825:9:31","type":""},{"name":"value4","nativeSrc":"33837:6:31","nodeType":"YulTypedName","src":"33837:6:31","type":""},{"name":"value3","nativeSrc":"33845:6:31","nodeType":"YulTypedName","src":"33845:6:31","type":""},{"name":"value2","nativeSrc":"33853:6:31","nodeType":"YulTypedName","src":"33853:6:31","type":""},{"name":"value1","nativeSrc":"33861:6:31","nodeType":"YulTypedName","src":"33861:6:31","type":""},{"name":"value0","nativeSrc":"33869:6:31","nodeType":"YulTypedName","src":"33869:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"33880:4:31","nodeType":"YulTypedName","src":"33880:4:31","type":""}],"src":"33557:1053:31"},{"body":{"nativeSrc":"34729:34:31","nodeType":"YulBlock","src":"34729:34:31","statements":[{"nativeSrc":"34739:18:31","nodeType":"YulAssignment","src":"34739:18:31","value":{"name":"pos","nativeSrc":"34754:3:31","nodeType":"YulIdentifier","src":"34754:3:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"34739:11:31","nodeType":"YulIdentifier","src":"34739:11:31"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"34616:147:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"34701:3:31","nodeType":"YulTypedName","src":"34701:3:31","type":""},{"name":"length","nativeSrc":"34706:6:31","nodeType":"YulTypedName","src":"34706:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"34717:11:31","nodeType":"YulTypedName","src":"34717:11:31","type":""}],"src":"34616:147:31"},{"body":{"nativeSrc":"34877:278:31","nodeType":"YulBlock","src":"34877:278:31","statements":[{"nativeSrc":"34887:52:31","nodeType":"YulVariableDeclaration","src":"34887:52:31","value":{"arguments":[{"name":"value","nativeSrc":"34933:5:31","nodeType":"YulIdentifier","src":"34933:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"34901:31:31","nodeType":"YulIdentifier","src":"34901:31:31"},"nativeSrc":"34901:38:31","nodeType":"YulFunctionCall","src":"34901:38:31"},"variables":[{"name":"length","nativeSrc":"34891:6:31","nodeType":"YulTypedName","src":"34891:6:31","type":""}]},{"nativeSrc":"34948:95:31","nodeType":"YulAssignment","src":"34948:95:31","value":{"arguments":[{"name":"pos","nativeSrc":"35031:3:31","nodeType":"YulIdentifier","src":"35031:3:31"},{"name":"length","nativeSrc":"35036:6:31","nodeType":"YulIdentifier","src":"35036:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"34955:75:31","nodeType":"YulIdentifier","src":"34955:75:31"},"nativeSrc":"34955:88:31","nodeType":"YulFunctionCall","src":"34955:88:31"},"variableNames":[{"name":"pos","nativeSrc":"34948:3:31","nodeType":"YulIdentifier","src":"34948:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"35091:5:31","nodeType":"YulIdentifier","src":"35091:5:31"},{"kind":"number","nativeSrc":"35098:4:31","nodeType":"YulLiteral","src":"35098:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"35087:3:31","nodeType":"YulIdentifier","src":"35087:3:31"},"nativeSrc":"35087:16:31","nodeType":"YulFunctionCall","src":"35087:16:31"},{"name":"pos","nativeSrc":"35105:3:31","nodeType":"YulIdentifier","src":"35105:3:31"},{"name":"length","nativeSrc":"35110:6:31","nodeType":"YulIdentifier","src":"35110:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"35052:34:31","nodeType":"YulIdentifier","src":"35052:34:31"},"nativeSrc":"35052:65:31","nodeType":"YulFunctionCall","src":"35052:65:31"},"nativeSrc":"35052:65:31","nodeType":"YulExpressionStatement","src":"35052:65:31"},{"nativeSrc":"35126:23:31","nodeType":"YulAssignment","src":"35126:23:31","value":{"arguments":[{"name":"pos","nativeSrc":"35137:3:31","nodeType":"YulIdentifier","src":"35137:3:31"},{"name":"length","nativeSrc":"35142:6:31","nodeType":"YulIdentifier","src":"35142:6:31"}],"functionName":{"name":"add","nativeSrc":"35133:3:31","nodeType":"YulIdentifier","src":"35133:3:31"},"nativeSrc":"35133:16:31","nodeType":"YulFunctionCall","src":"35133:16:31"},"variableNames":[{"name":"end","nativeSrc":"35126:3:31","nodeType":"YulIdentifier","src":"35126:3:31"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"34769:386:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34858:5:31","nodeType":"YulTypedName","src":"34858:5:31","type":""},{"name":"pos","nativeSrc":"34865:3:31","nodeType":"YulTypedName","src":"34865:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"34873:3:31","nodeType":"YulTypedName","src":"34873:3:31","type":""}],"src":"34769:386:31"},{"body":{"nativeSrc":"35295:137:31","nodeType":"YulBlock","src":"35295:137:31","statements":[{"nativeSrc":"35306:100:31","nodeType":"YulAssignment","src":"35306:100:31","value":{"arguments":[{"name":"value0","nativeSrc":"35393:6:31","nodeType":"YulIdentifier","src":"35393:6:31"},{"name":"pos","nativeSrc":"35402:3:31","nodeType":"YulIdentifier","src":"35402:3:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"35313:79:31","nodeType":"YulIdentifier","src":"35313:79:31"},"nativeSrc":"35313:93:31","nodeType":"YulFunctionCall","src":"35313:93:31"},"variableNames":[{"name":"pos","nativeSrc":"35306:3:31","nodeType":"YulIdentifier","src":"35306:3:31"}]},{"nativeSrc":"35416:10:31","nodeType":"YulAssignment","src":"35416:10:31","value":{"name":"pos","nativeSrc":"35423:3:31","nodeType":"YulIdentifier","src":"35423:3:31"},"variableNames":[{"name":"end","nativeSrc":"35416:3:31","nodeType":"YulIdentifier","src":"35416:3:31"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"35161:271:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"35274:3:31","nodeType":"YulTypedName","src":"35274:3:31","type":""},{"name":"value0","nativeSrc":"35280:6:31","nodeType":"YulTypedName","src":"35280:6:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"35291:3:31","nodeType":"YulTypedName","src":"35291:3:31","type":""}],"src":"35161:271:31"},{"body":{"nativeSrc":"35466:152:31","nodeType":"YulBlock","src":"35466:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"35483:1:31","nodeType":"YulLiteral","src":"35483:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"35486:77:31","nodeType":"YulLiteral","src":"35486:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"35476:6:31","nodeType":"YulIdentifier","src":"35476:6:31"},"nativeSrc":"35476:88:31","nodeType":"YulFunctionCall","src":"35476:88:31"},"nativeSrc":"35476:88:31","nodeType":"YulExpressionStatement","src":"35476:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"35580:1:31","nodeType":"YulLiteral","src":"35580:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"35583:4:31","nodeType":"YulLiteral","src":"35583:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"35573:6:31","nodeType":"YulIdentifier","src":"35573:6:31"},"nativeSrc":"35573:15:31","nodeType":"YulFunctionCall","src":"35573:15:31"},"nativeSrc":"35573:15:31","nodeType":"YulExpressionStatement","src":"35573:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"35604:1:31","nodeType":"YulLiteral","src":"35604:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"35607:4:31","nodeType":"YulLiteral","src":"35607:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"35597:6:31","nodeType":"YulIdentifier","src":"35597:6:31"},"nativeSrc":"35597:15:31","nodeType":"YulFunctionCall","src":"35597:15:31"},"nativeSrc":"35597:15:31","nodeType":"YulExpressionStatement","src":"35597:15:31"}]},"name":"panic_error_0x11","nativeSrc":"35438:180:31","nodeType":"YulFunctionDefinition","src":"35438:180:31"},{"body":{"nativeSrc":"35668:147:31","nodeType":"YulBlock","src":"35668:147:31","statements":[{"nativeSrc":"35678:25:31","nodeType":"YulAssignment","src":"35678:25:31","value":{"arguments":[{"name":"x","nativeSrc":"35701:1:31","nodeType":"YulIdentifier","src":"35701:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"35683:17:31","nodeType":"YulIdentifier","src":"35683:17:31"},"nativeSrc":"35683:20:31","nodeType":"YulFunctionCall","src":"35683:20:31"},"variableNames":[{"name":"x","nativeSrc":"35678:1:31","nodeType":"YulIdentifier","src":"35678:1:31"}]},{"nativeSrc":"35712:25:31","nodeType":"YulAssignment","src":"35712:25:31","value":{"arguments":[{"name":"y","nativeSrc":"35735:1:31","nodeType":"YulIdentifier","src":"35735:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"35717:17:31","nodeType":"YulIdentifier","src":"35717:17:31"},"nativeSrc":"35717:20:31","nodeType":"YulFunctionCall","src":"35717:20:31"},"variableNames":[{"name":"y","nativeSrc":"35712:1:31","nodeType":"YulIdentifier","src":"35712:1:31"}]},{"nativeSrc":"35746:16:31","nodeType":"YulAssignment","src":"35746:16:31","value":{"arguments":[{"name":"x","nativeSrc":"35757:1:31","nodeType":"YulIdentifier","src":"35757:1:31"},{"name":"y","nativeSrc":"35760:1:31","nodeType":"YulIdentifier","src":"35760:1:31"}],"functionName":{"name":"add","nativeSrc":"35753:3:31","nodeType":"YulIdentifier","src":"35753:3:31"},"nativeSrc":"35753:9:31","nodeType":"YulFunctionCall","src":"35753:9:31"},"variableNames":[{"name":"sum","nativeSrc":"35746:3:31","nodeType":"YulIdentifier","src":"35746:3:31"}]},{"body":{"nativeSrc":"35786:22:31","nodeType":"YulBlock","src":"35786:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"35788:16:31","nodeType":"YulIdentifier","src":"35788:16:31"},"nativeSrc":"35788:18:31","nodeType":"YulFunctionCall","src":"35788:18:31"},"nativeSrc":"35788:18:31","nodeType":"YulExpressionStatement","src":"35788:18:31"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"35778:1:31","nodeType":"YulIdentifier","src":"35778:1:31"},{"name":"sum","nativeSrc":"35781:3:31","nodeType":"YulIdentifier","src":"35781:3:31"}],"functionName":{"name":"gt","nativeSrc":"35775:2:31","nodeType":"YulIdentifier","src":"35775:2:31"},"nativeSrc":"35775:10:31","nodeType":"YulFunctionCall","src":"35775:10:31"},"nativeSrc":"35772:36:31","nodeType":"YulIf","src":"35772:36:31"}]},"name":"checked_add_t_uint256","nativeSrc":"35624:191:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"35655:1:31","nodeType":"YulTypedName","src":"35655:1:31","type":""},{"name":"y","nativeSrc":"35658:1:31","nodeType":"YulTypedName","src":"35658:1:31","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"35664:3:31","nodeType":"YulTypedName","src":"35664:3:31","type":""}],"src":"35624:191:31"},{"body":{"nativeSrc":"36003:371:31","nodeType":"YulBlock","src":"36003:371:31","statements":[{"nativeSrc":"36013:27:31","nodeType":"YulAssignment","src":"36013:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"36025:9:31","nodeType":"YulIdentifier","src":"36025:9:31"},{"kind":"number","nativeSrc":"36036:3:31","nodeType":"YulLiteral","src":"36036:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"36021:3:31","nodeType":"YulIdentifier","src":"36021:3:31"},"nativeSrc":"36021:19:31","nodeType":"YulFunctionCall","src":"36021:19:31"},"variableNames":[{"name":"tail","nativeSrc":"36013:4:31","nodeType":"YulIdentifier","src":"36013:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"36094:6:31","nodeType":"YulIdentifier","src":"36094:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"36107:9:31","nodeType":"YulIdentifier","src":"36107:9:31"},{"kind":"number","nativeSrc":"36118:1:31","nodeType":"YulLiteral","src":"36118:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36103:3:31","nodeType":"YulIdentifier","src":"36103:3:31"},"nativeSrc":"36103:17:31","nodeType":"YulFunctionCall","src":"36103:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"36050:43:31","nodeType":"YulIdentifier","src":"36050:43:31"},"nativeSrc":"36050:71:31","nodeType":"YulFunctionCall","src":"36050:71:31"},"nativeSrc":"36050:71:31","nodeType":"YulExpressionStatement","src":"36050:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"36175:6:31","nodeType":"YulIdentifier","src":"36175:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"36188:9:31","nodeType":"YulIdentifier","src":"36188:9:31"},{"kind":"number","nativeSrc":"36199:2:31","nodeType":"YulLiteral","src":"36199:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36184:3:31","nodeType":"YulIdentifier","src":"36184:3:31"},"nativeSrc":"36184:18:31","nodeType":"YulFunctionCall","src":"36184:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"36131:43:31","nodeType":"YulIdentifier","src":"36131:43:31"},"nativeSrc":"36131:72:31","nodeType":"YulFunctionCall","src":"36131:72:31"},"nativeSrc":"36131:72:31","nodeType":"YulExpressionStatement","src":"36131:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"36257:6:31","nodeType":"YulIdentifier","src":"36257:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"36270:9:31","nodeType":"YulIdentifier","src":"36270:9:31"},{"kind":"number","nativeSrc":"36281:2:31","nodeType":"YulLiteral","src":"36281:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"36266:3:31","nodeType":"YulIdentifier","src":"36266:3:31"},"nativeSrc":"36266:18:31","nodeType":"YulFunctionCall","src":"36266:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"36213:43:31","nodeType":"YulIdentifier","src":"36213:43:31"},"nativeSrc":"36213:72:31","nodeType":"YulFunctionCall","src":"36213:72:31"},"nativeSrc":"36213:72:31","nodeType":"YulExpressionStatement","src":"36213:72:31"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"36339:6:31","nodeType":"YulIdentifier","src":"36339:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"36352:9:31","nodeType":"YulIdentifier","src":"36352:9:31"},{"kind":"number","nativeSrc":"36363:2:31","nodeType":"YulLiteral","src":"36363:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"36348:3:31","nodeType":"YulIdentifier","src":"36348:3:31"},"nativeSrc":"36348:18:31","nodeType":"YulFunctionCall","src":"36348:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"36295:43:31","nodeType":"YulIdentifier","src":"36295:43:31"},"nativeSrc":"36295:72:31","nodeType":"YulFunctionCall","src":"36295:72:31"},"nativeSrc":"36295:72:31","nodeType":"YulExpressionStatement","src":"36295:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"35821:553:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"35951:9:31","nodeType":"YulTypedName","src":"35951:9:31","type":""},{"name":"value3","nativeSrc":"35963:6:31","nodeType":"YulTypedName","src":"35963:6:31","type":""},{"name":"value2","nativeSrc":"35971:6:31","nodeType":"YulTypedName","src":"35971:6:31","type":""},{"name":"value1","nativeSrc":"35979:6:31","nodeType":"YulTypedName","src":"35979:6:31","type":""},{"name":"value0","nativeSrc":"35987:6:31","nodeType":"YulTypedName","src":"35987:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"35998:4:31","nodeType":"YulTypedName","src":"35998:4:31","type":""}],"src":"35821:553:31"},{"body":{"nativeSrc":"36606:408:31","nodeType":"YulBlock","src":"36606:408:31","statements":[{"nativeSrc":"36616:26:31","nodeType":"YulAssignment","src":"36616:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"36628:9:31","nodeType":"YulIdentifier","src":"36628:9:31"},{"kind":"number","nativeSrc":"36639:2:31","nodeType":"YulLiteral","src":"36639:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"36624:3:31","nodeType":"YulIdentifier","src":"36624:3:31"},"nativeSrc":"36624:18:31","nodeType":"YulFunctionCall","src":"36624:18:31"},"variableNames":[{"name":"tail","nativeSrc":"36616:4:31","nodeType":"YulIdentifier","src":"36616:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36663:9:31","nodeType":"YulIdentifier","src":"36663:9:31"},{"kind":"number","nativeSrc":"36674:1:31","nodeType":"YulLiteral","src":"36674:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36659:3:31","nodeType":"YulIdentifier","src":"36659:3:31"},"nativeSrc":"36659:17:31","nodeType":"YulFunctionCall","src":"36659:17:31"},{"arguments":[{"name":"tail","nativeSrc":"36682:4:31","nodeType":"YulIdentifier","src":"36682:4:31"},{"name":"headStart","nativeSrc":"36688:9:31","nodeType":"YulIdentifier","src":"36688:9:31"}],"functionName":{"name":"sub","nativeSrc":"36678:3:31","nodeType":"YulIdentifier","src":"36678:3:31"},"nativeSrc":"36678:20:31","nodeType":"YulFunctionCall","src":"36678:20:31"}],"functionName":{"name":"mstore","nativeSrc":"36652:6:31","nodeType":"YulIdentifier","src":"36652:6:31"},"nativeSrc":"36652:47:31","nodeType":"YulFunctionCall","src":"36652:47:31"},"nativeSrc":"36652:47:31","nodeType":"YulExpressionStatement","src":"36652:47:31"},{"nativeSrc":"36708:116:31","nodeType":"YulAssignment","src":"36708:116:31","value":{"arguments":[{"name":"value0","nativeSrc":"36810:6:31","nodeType":"YulIdentifier","src":"36810:6:31"},{"name":"tail","nativeSrc":"36819:4:31","nodeType":"YulIdentifier","src":"36819:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"36716:93:31","nodeType":"YulIdentifier","src":"36716:93:31"},"nativeSrc":"36716:108:31","nodeType":"YulFunctionCall","src":"36716:108:31"},"variableNames":[{"name":"tail","nativeSrc":"36708:4:31","nodeType":"YulIdentifier","src":"36708:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36845:9:31","nodeType":"YulIdentifier","src":"36845:9:31"},{"kind":"number","nativeSrc":"36856:2:31","nodeType":"YulLiteral","src":"36856:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36841:3:31","nodeType":"YulIdentifier","src":"36841:3:31"},"nativeSrc":"36841:18:31","nodeType":"YulFunctionCall","src":"36841:18:31"},{"arguments":[{"name":"tail","nativeSrc":"36865:4:31","nodeType":"YulIdentifier","src":"36865:4:31"},{"name":"headStart","nativeSrc":"36871:9:31","nodeType":"YulIdentifier","src":"36871:9:31"}],"functionName":{"name":"sub","nativeSrc":"36861:3:31","nodeType":"YulIdentifier","src":"36861:3:31"},"nativeSrc":"36861:20:31","nodeType":"YulFunctionCall","src":"36861:20:31"}],"functionName":{"name":"mstore","nativeSrc":"36834:6:31","nodeType":"YulIdentifier","src":"36834:6:31"},"nativeSrc":"36834:48:31","nodeType":"YulFunctionCall","src":"36834:48:31"},"nativeSrc":"36834:48:31","nodeType":"YulExpressionStatement","src":"36834:48:31"},{"nativeSrc":"36891:116:31","nodeType":"YulAssignment","src":"36891:116:31","value":{"arguments":[{"name":"value1","nativeSrc":"36993:6:31","nodeType":"YulIdentifier","src":"36993:6:31"},{"name":"tail","nativeSrc":"37002:4:31","nodeType":"YulIdentifier","src":"37002:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"36899:93:31","nodeType":"YulIdentifier","src":"36899:93:31"},"nativeSrc":"36899:108:31","nodeType":"YulFunctionCall","src":"36899:108:31"},"variableNames":[{"name":"tail","nativeSrc":"36891:4:31","nodeType":"YulIdentifier","src":"36891:4:31"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"36380:634:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"36570:9:31","nodeType":"YulTypedName","src":"36570:9:31","type":""},{"name":"value1","nativeSrc":"36582:6:31","nodeType":"YulTypedName","src":"36582:6:31","type":""},{"name":"value0","nativeSrc":"36590:6:31","nodeType":"YulTypedName","src":"36590:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"36601:4:31","nodeType":"YulTypedName","src":"36601:4:31","type":""}],"src":"36380:634:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"482":[{"length":32,"start":5247},{"length":32,"start":5332},{"length":32,"start":5775}]},"linkReferences":{},"object":"6080604052600436106101655760003560e01c806352d1902d116100d1578063a22cb4651161008a578063c4d66de811610064578063c4d66de81461051a578063e985e9c514610543578063f242432a14610580578063f2fde38b146105a957610165565b8063a22cb46514610489578063ad3cb1cc146104b2578063bd85b039146104dd57610165565b806352d1902d146103b15780635c975abb146103dc578063715018a614610407578063731133e91461041e5780638456cb59146104475780638da5cb5b1461045e57610165565b80632eb2c2d6116101235780632eb2c2d61461029e5780632faa69a8146102c75780633f4ba83a146103045780634e1273f41461031b5780634f1ef286146103585780634f558e791461037457610165565b8062fdd58e1461016a57806301ffc9a7146101a757806302fe5305146101e45780630e89341c1461020d57806318160ddd1461024a5780631f7fdffa14610275575b600080fd5b34801561017657600080fd5b50610191600480360381019061018c9190612cf7565b6105d2565b60405161019e9190612d46565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c99190612db9565b61063b565b6040516101db9190612e01565b60405180910390f35b3480156101f057600080fd5b5061020b60048036038101906102069190612f62565b61071d565b005b34801561021957600080fd5b50610234600480360381019061022f9190612fab565b610738565b6040516102419190613057565b60405180910390f35b34801561025657600080fd5b5061025f61076c565b60405161026c9190612d46565b60405180910390f35b34801561028157600080fd5b5061029c600480360381019061029791906131e2565b610784565b005b3480156102aa57600080fd5b506102c560048036038101906102c0919061329d565b61089c565b005b3480156102d357600080fd5b506102ee60048036038101906102e99190612fab565b610944565b6040516102fb919061337b565b60405180910390f35b34801561031057600080fd5b50610319610977565b005b34801561032757600080fd5b50610342600480360381019061033d9190613459565b610989565b60405161034f919061358f565b60405180910390f35b610372600480360381019061036d91906135b1565b610a92565b005b34801561038057600080fd5b5061039b60048036038101906103969190612fab565b610ab1565b6040516103a89190612e01565b60405180910390f35b3480156103bd57600080fd5b506103c6610ac5565b6040516103d39190613626565b60405180910390f35b3480156103e857600080fd5b506103f1610af8565b6040516103fe9190612e01565b60405180910390f35b34801561041357600080fd5b5061041c610b1d565b005b34801561042a57600080fd5b5061044560048036038101906104409190613641565b610b31565b005b34801561045357600080fd5b5061045c610bfb565b005b34801561046a57600080fd5b50610473610c0d565b604051610480919061337b565b60405180910390f35b34801561049557600080fd5b506104b060048036038101906104ab91906136f0565b610c45565b005b3480156104be57600080fd5b506104c7610c5b565b6040516104d49190613057565b60405180910390f35b3480156104e957600080fd5b5061050460048036038101906104ff9190612fab565b610c94565b6040516105119190612d46565b60405180910390f35b34801561052657600080fd5b50610541600480360381019061053c9190613730565b610cbf565b005b34801561054f57600080fd5b5061056a6004803603810190610565919061375d565b610e7e565b6040516105779190612e01565b60405180910390f35b34801561058c57600080fd5b506105a760048036038101906105a2919061379d565b610f20565b005b3480156105b557600080fd5b506105d060048036038101906105cb9190613730565b610fc8565b005b6000806105dd61104e565b905080600001600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061070657507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610716575061071582611076565b5b9050919050565b6107256110e0565b80600190816107349190613a40565b5050565b6060600161074583611167565b604051602001610756929190613bd1565b6040516020818303038152906040529050919050565b600080610777611235565b9050806001015491505090565b60005b835181101561088957600073ffffffffffffffffffffffffffffffffffffffff166000808684815181106107be576107bd613bf5565b5b6020026020010151815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361087c578460008086848151811061082757610826613bf5565b5b6020026020010151815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8080600101915050610787565b506108968484848461125d565b50505050565b60006108a66112e3565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156108eb57506108e98682610e7e565b155b1561092f5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610926929190613c24565b60405180910390fd5b61093c86868686866112eb565b505050505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61097f6110e0565b6109876113e3565b565b606081518351146109d557815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016109cc929190613c4d565b60405180910390fd5b6000835167ffffffffffffffff8111156109f2576109f1612e37565b5b604051908082528060200260200182016040528015610a205781602001602082028036833780820191505090505b50905060005b8451811015610a8757610a5d610a45828761145590919063ffffffff16565b610a58838761146990919063ffffffff16565b6105d2565b828281518110610a7057610a6f613bf5565b5b602002602001018181525050806001019050610a26565b508091505092915050565b610a9a61147d565b610aa382611563565b610aad828261156e565b5050565b600080610abd83610c94565b119050919050565b6000610acf61168d565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600080610b03611714565b90508060000160009054906101000a900460ff1691505090565b610b256110e0565b610b2f600061173c565b565b600073ffffffffffffffffffffffffffffffffffffffff1660008085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610be9578360008085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b610bf584848484611813565b50505050565b610c036110e0565b610c0b6118ac565b565b600080610c1861191e565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610c57610c506112e3565b8383611946565b5050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b600080610c9f611235565b905080600001600084815260200190815260200160002054915050919050565b6000610cc9611ac5565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610d175750825b9050600060018367ffffffffffffffff16148015610d4c575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610d5a575080155b15610d91576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610de15760018560000160086101000a81548160ff0219169083151502179055505b610df960405180602001604052806000815250611ad9565b610e0286611aed565b610e0a611b01565b610e12611b0b565b610e1a611b15565b8315610e765760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610e6d9190613cc5565b60405180910390a15b505050505050565b600080610e8961104e565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000610f2a6112e3565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610f6f5750610f6d8682610e7e565b155b15610fb35780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610faa929190613c24565b60405180910390fd5b610fc08686868686611b1f565b505050505050565b610fd06110e0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110425760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611039919061337b565b60405180910390fd5b61104b8161173c565b50565b60007f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6110e86112e3565b73ffffffffffffffffffffffffffffffffffffffff16611106610c0d565b73ffffffffffffffffffffffffffffffffffffffff1614611165576111296112e3565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161115c919061337b565b60405180910390fd5b565b60606000600161117684611c2a565b01905060008167ffffffffffffffff81111561119557611194612e37565b5b6040519080825280601f01601f1916602001820160405280156111c75781602001600182028036833780820191505090505b509050600082602001820190505b60011561122a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161121e5761121d613ce0565b5b049450600085036111d5575b819350505050919050565b60007f4a593662ee04d27b6a00ebb31be7fe0c102c2ade82a7c5d764f2df05dc4e2800905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112cf5760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112c6919061337b565b60405180910390fd5b6112dd600085858585611d7d565b50505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361135d5760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611354919061337b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036113cf5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016113c6919061337b565b60405180910390fd5b6113dc8585858585611d7d565b5050505050565b6113eb611e2f565b60006113f5611714565b905060008160000160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61143d6112e3565b60405161144a919061337b565b60405180910390a150565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061152a57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611511611e6f565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611561576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61156b6110e0565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156115d657506040513d601f19601f820116820180604052508101906115d39190613d3b565b60015b61161757816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161160e919061337b565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461167e57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016116759190613626565b60405180910390fd5b6116888383611ec6565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611712576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b600061174661191e565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036118855760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161187c919061337b565b60405180910390fd5b6000806118928585611f39565b915091506118a4600087848487611d7d565b505050505050565b6118b4611f69565b60006118be611714565b905060018160000160006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119066112e3565b604051611913919061337b565b60405180910390a150565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600061195061104e565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119c45760006040517fced3e1000000000000000000000000000000000000000000000000000000000081526004016119bb919061337b565b60405180910390fd5b818160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051611ab79190612e01565b60405180910390a350505050565b600080611ad0611faa565b90508091505090565b611ae1611fd5565b611aea81612015565b50565b611af5611fd5565b611afe81612029565b50565b611b09611fd5565b565b611b13611fd5565b565b611b1d611fd5565b565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b915760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611b88919061337b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611c035760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611bfa919061337b565b60405180910390fd5b600080611c108585611f39565b91509150611c218787848487611d7d565b50505050505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611c88577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611c7e57611c7d613ce0565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611cc5576d04ee2d6d415b85acef81000000008381611cbb57611cba613ce0565b5b0492506020810190505b662386f26fc100008310611cf457662386f26fc100008381611cea57611ce9613ce0565b5b0492506010810190505b6305f5e1008310611d1d576305f5e1008381611d1357611d12613ce0565b5b0492506008810190505b6127108310611d42576127108381611d3857611d37613ce0565b5b0492506004810190505b60648310611d655760648381611d5b57611d5a613ce0565b5b0492506002810190505b600a8310611d74576001810190505b80915050919050565b611d89858585856120af565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611e28576000611dc76112e3565b90506001845103611e17576000611de860008661146990919063ffffffff16565b90506000611e0060008661146990919063ffffffff16565b9050611e108389898585896120c1565b5050611e26565b611e25818787878787612275565b5b505b5050505050565b611e37610af8565b611e6d576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611e9d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612429565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611ecf82612433565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115611f2c57611f268282612500565b50611f35565b611f34612584565b5b5050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b611f71610af8565b15611fa8576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b611fdd6125c1565b612013576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61201d611fd5565b612026816125e1565b50565b612031611fd5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036120a35760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161209a919061337b565b60405180910390fd5b6120ac8161173c565b50565b6120bb84848484612603565b50505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111561226d578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401612122959493929190613dbd565b6020604051808303816000875af192505050801561215e57506040513d601f19601f8201168201806040525081019061215b9190613e2c565b60015b6121e2573d806000811461218e576040519150601f19603f3d011682016040523d82523d6000602084013e612193565b606091505b5060008151036121da57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016121d1919061337b565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461226b57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401612262919061337b565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115612421578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016122d6959493929190613e59565b6020604051808303816000875af192505050801561231257506040513d601f19601f8201168201806040525081019061230f9190613e2c565b60015b612396573d8060008114612342576040519150601f19603f3d011682016040523d82523d6000602084013e612347565b606091505b50600081510361238e57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401612385919061337b565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461241f57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401612416919061337b565b60405180910390fd5b505b505050505050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361248f57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612486919061337b565b60405180910390fd5b806124bc7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612429565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161252a9190613efd565b600060405180830381855af49150503d8060008114612565576040519150601f19603f3d011682016040523d82523d6000602084013e61256a565b606091505b509150915061257a8583836127a3565b9250505092915050565b60003411156125bf576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60006125cb611ac5565b60000160089054906101000a900460ff16905090565b60006125eb61104e565b9050818160020190816125fe9190613a40565b505050565b600061260d611235565b905061261b85858585612832565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036126e9576000805b84518110156126cb576000612671828661146990919063ffffffff16565b90508084600001600061268d858a61146990919063ffffffff16565b815260200190815260200160002060008282546126aa9190613f43565b9250508190555080836126bd9190613f43565b925050806001019050612653565b50808260010160008282546126e09190613f43565b92505081905550505b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361279c576000805b845181101561278757600061273f828661146990919063ffffffff16565b90508084600001600061275b858a61146990919063ffffffff16565b815260200190815260200160002060008282540392505081905550808301925050806001019050612721565b50808260010160008282540392505081905550505b5050505050565b6060826127b8576127b38261284c565b61282a565b600082511480156127e0575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561282257836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401612819919061337b565b60405180910390fd5b81905061282b565b5b9392505050565b61283a611f69565b61284684848484612891565b50505050565b60008151111561285f5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061289b61104e565b905081518351146128e757825182516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016128de929190613c4d565b60405180910390fd5b60006128f16112e3565b905060005b8451811015612b09576000612914828761146990919063ffffffff16565b9050600061292b838761146990919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614612a5e57600085600001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612a0357898183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016129fa9493929190613f77565b60405180910390fd5b81810386600001600085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614612afc578085600001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612af49190613f43565b925050819055505b50508060010190506128f6565b506001845103612bc8576000612b2960008661146990919063ffffffff16565b90506000612b4160008661146990919063ffffffff16565b90508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051612bb9929190613c4d565b60405180910390a45050612c47565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612c3e929190613fbc565b60405180910390a45b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612c8e82612c63565b9050919050565b612c9e81612c83565b8114612ca957600080fd5b50565b600081359050612cbb81612c95565b92915050565b6000819050919050565b612cd481612cc1565b8114612cdf57600080fd5b50565b600081359050612cf181612ccb565b92915050565b60008060408385031215612d0e57612d0d612c59565b5b6000612d1c85828601612cac565b9250506020612d2d85828601612ce2565b9150509250929050565b612d4081612cc1565b82525050565b6000602082019050612d5b6000830184612d37565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612d9681612d61565b8114612da157600080fd5b50565b600081359050612db381612d8d565b92915050565b600060208284031215612dcf57612dce612c59565b5b6000612ddd84828501612da4565b91505092915050565b60008115159050919050565b612dfb81612de6565b82525050565b6000602082019050612e166000830184612df2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612e6f82612e26565b810181811067ffffffffffffffff82111715612e8e57612e8d612e37565b5b80604052505050565b6000612ea1612c4f565b9050612ead8282612e66565b919050565b600067ffffffffffffffff821115612ecd57612ecc612e37565b5b612ed682612e26565b9050602081019050919050565b82818337600083830152505050565b6000612f05612f0084612eb2565b612e97565b905082815260208101848484011115612f2157612f20612e21565b5b612f2c848285612ee3565b509392505050565b600082601f830112612f4957612f48612e1c565b5b8135612f59848260208601612ef2565b91505092915050565b600060208284031215612f7857612f77612c59565b5b600082013567ffffffffffffffff811115612f9657612f95612c5e565b5b612fa284828501612f34565b91505092915050565b600060208284031215612fc157612fc0612c59565b5b6000612fcf84828501612ce2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613012578082015181840152602081019050612ff7565b60008484015250505050565b600061302982612fd8565b6130338185612fe3565b9350613043818560208601612ff4565b61304c81612e26565b840191505092915050565b60006020820190508181036000830152613071818461301e565b905092915050565b600067ffffffffffffffff82111561309457613093612e37565b5b602082029050602081019050919050565b600080fd5b60006130bd6130b884613079565b612e97565b905080838252602082019050602084028301858111156130e0576130df6130a5565b5b835b8181101561310957806130f58882612ce2565b8452602084019350506020810190506130e2565b5050509392505050565b600082601f83011261312857613127612e1c565b5b81356131388482602086016130aa565b91505092915050565b600067ffffffffffffffff82111561315c5761315b612e37565b5b61316582612e26565b9050602081019050919050565b600061318561318084613141565b612e97565b9050828152602081018484840111156131a1576131a0612e21565b5b6131ac848285612ee3565b509392505050565b600082601f8301126131c9576131c8612e1c565b5b81356131d9848260208601613172565b91505092915050565b600080600080608085870312156131fc576131fb612c59565b5b600061320a87828801612cac565b945050602085013567ffffffffffffffff81111561322b5761322a612c5e565b5b61323787828801613113565b935050604085013567ffffffffffffffff81111561325857613257612c5e565b5b61326487828801613113565b925050606085013567ffffffffffffffff81111561328557613284612c5e565b5b613291878288016131b4565b91505092959194509250565b600080600080600060a086880312156132b9576132b8612c59565b5b60006132c788828901612cac565b95505060206132d888828901612cac565b945050604086013567ffffffffffffffff8111156132f9576132f8612c5e565b5b61330588828901613113565b935050606086013567ffffffffffffffff81111561332657613325612c5e565b5b61333288828901613113565b925050608086013567ffffffffffffffff81111561335357613352612c5e565b5b61335f888289016131b4565b9150509295509295909350565b61337581612c83565b82525050565b6000602082019050613390600083018461336c565b92915050565b600067ffffffffffffffff8211156133b1576133b0612e37565b5b602082029050602081019050919050565b60006133d56133d084613396565b612e97565b905080838252602082019050602084028301858111156133f8576133f76130a5565b5b835b81811015613421578061340d8882612cac565b8452602084019350506020810190506133fa565b5050509392505050565b600082601f8301126134405761343f612e1c565b5b81356134508482602086016133c2565b91505092915050565b600080604083850312156134705761346f612c59565b5b600083013567ffffffffffffffff81111561348e5761348d612c5e565b5b61349a8582860161342b565b925050602083013567ffffffffffffffff8111156134bb576134ba612c5e565b5b6134c785828601613113565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61350681612cc1565b82525050565b600061351883836134fd565b60208301905092915050565b6000602082019050919050565b600061353c826134d1565b61354681856134dc565b9350613551836134ed565b8060005b83811015613582578151613569888261350c565b975061357483613524565b925050600181019050613555565b5085935050505092915050565b600060208201905081810360008301526135a98184613531565b905092915050565b600080604083850312156135c8576135c7612c59565b5b60006135d685828601612cac565b925050602083013567ffffffffffffffff8111156135f7576135f6612c5e565b5b613603858286016131b4565b9150509250929050565b6000819050919050565b6136208161360d565b82525050565b600060208201905061363b6000830184613617565b92915050565b6000806000806080858703121561365b5761365a612c59565b5b600061366987828801612cac565b945050602061367a87828801612ce2565b935050604061368b87828801612ce2565b925050606085013567ffffffffffffffff8111156136ac576136ab612c5e565b5b6136b8878288016131b4565b91505092959194509250565b6136cd81612de6565b81146136d857600080fd5b50565b6000813590506136ea816136c4565b92915050565b6000806040838503121561370757613706612c59565b5b600061371585828601612cac565b9250506020613726858286016136db565b9150509250929050565b60006020828403121561374657613745612c59565b5b600061375484828501612cac565b91505092915050565b6000806040838503121561377457613773612c59565b5b600061378285828601612cac565b925050602061379385828601612cac565b9150509250929050565b600080600080600060a086880312156137b9576137b8612c59565b5b60006137c788828901612cac565b95505060206137d888828901612cac565b94505060406137e988828901612ce2565b93505060606137fa88828901612ce2565b925050608086013567ffffffffffffffff81111561381b5761381a612c5e565b5b613827888289016131b4565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061387b57607f821691505b60208210810361388e5761388d613834565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026138f67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826138b9565b61390086836138b9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061393d61393861393384612cc1565b613918565b612cc1565b9050919050565b6000819050919050565b61395783613922565b61396b61396382613944565b8484546138c6565b825550505050565b600090565b613980613973565b61398b81848461394e565b505050565b5b818110156139af576139a4600082613978565b600181019050613991565b5050565b601f8211156139f4576139c581613894565b6139ce846138a9565b810160208510156139dd578190505b6139f16139e9856138a9565b830182613990565b50505b505050565b600082821c905092915050565b6000613a17600019846008026139f9565b1980831691505092915050565b6000613a308383613a06565b9150826002028217905092915050565b613a4982612fd8565b67ffffffffffffffff811115613a6257613a61612e37565b5b613a6c8254613863565b613a778282856139b3565b600060209050601f831160018114613aaa5760008415613a98578287015190505b613aa28582613a24565b865550613b0a565b601f198416613ab886613894565b60005b82811015613ae057848901518255600182019150602085019450602081019050613abb565b86831015613afd5784890151613af9601f891682613a06565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60008154613b2a81613863565b613b348186613b12565b94506001821660008114613b4f5760018114613b6457613b97565b60ff1983168652811515820286019350613b97565b613b6d85613894565b60005b83811015613b8f57815481890152600182019150602081019050613b70565b838801955050505b50505092915050565b6000613bab82612fd8565b613bb58185613b12565b9350613bc5818560208601612ff4565b80840191505092915050565b6000613bdd8285613b1d565b9150613be98284613ba0565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000604082019050613c39600083018561336c565b613c46602083018461336c565b9392505050565b6000604082019050613c626000830185612d37565b613c6f6020830184612d37565b9392505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000613caf613caa613ca584613c76565b613918565b613c80565b9050919050565b613cbf81613c94565b82525050565b6000602082019050613cda6000830184613cb6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b613d188161360d565b8114613d2357600080fd5b50565b600081519050613d3581613d0f565b92915050565b600060208284031215613d5157613d50612c59565b5b6000613d5f84828501613d26565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000613d8f82613d68565b613d998185613d73565b9350613da9818560208601612ff4565b613db281612e26565b840191505092915050565b600060a082019050613dd2600083018861336c565b613ddf602083018761336c565b613dec6040830186612d37565b613df96060830185612d37565b8181036080830152613e0b8184613d84565b90509695505050505050565b600081519050613e2681612d8d565b92915050565b600060208284031215613e4257613e41612c59565b5b6000613e5084828501613e17565b91505092915050565b600060a082019050613e6e600083018861336c565b613e7b602083018761336c565b8181036040830152613e8d8186613531565b90508181036060830152613ea18185613531565b90508181036080830152613eb58184613d84565b90509695505050505050565b600081905092915050565b6000613ed782613d68565b613ee18185613ec1565b9350613ef1818560208601612ff4565b80840191505092915050565b6000613f098284613ecc565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613f4e82612cc1565b9150613f5983612cc1565b9250828201905080821115613f7157613f70613f14565b5b92915050565b6000608082019050613f8c600083018761336c565b613f996020830186612d37565b613fa66040830185612d37565b613fb36060830184612d37565b95945050505050565b60006040820190508181036000830152613fd68185613531565b90508181036020830152613fea8184613531565b9050939250505056fea2646970667358221220a62c7e65c208625313518bc224f67b05089a2f8b1c4983eb7ff76248a42e1b6f64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x165 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A9 JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x4DD JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45E JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x2FAA69A8 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x374 JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x275 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x2CF7 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x2DB9 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x2F62 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2FAB JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x329D JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x2FAB JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 PUSH2 0x977 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x358F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x35B1 JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x2FAB JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C6 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x3626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F1 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41C PUSH2 0xB1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x445 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0xB31 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45C PUSH2 0xBFB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x473 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST PUSH2 0xC45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C7 PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x3057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x2FAB JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x541 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x3730 JUMP JUMPDEST PUSH2 0xCBF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x375D JUMP JUMPDEST PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x379D JUMP JUMPDEST PUSH2 0xF20 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x3730 JUMP JUMPDEST PUSH2 0xFC8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5DD PUSH2 0x104E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x706 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x716 JUMPI POP PUSH2 0x715 DUP3 PUSH2 0x1076 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x725 PUSH2 0x10E0 JUMP JUMPDEST DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x734 SWAP2 SWAP1 PUSH2 0x3A40 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH2 0x745 DUP4 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x756 SWAP3 SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x777 PUSH2 0x1235 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x889 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7BE JUMPI PUSH2 0x7BD PUSH2 0x3BF5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x87C JUMPI DUP5 PUSH1 0x0 DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x827 JUMPI PUSH2 0x826 PUSH2 0x3BF5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x787 JUMP JUMPDEST POP PUSH2 0x896 DUP5 DUP5 DUP5 DUP5 PUSH2 0x125D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8EB JUMPI POP PUSH2 0x8E9 DUP7 DUP3 PUSH2 0xE7E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x92F JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x926 SWAP3 SWAP2 SWAP1 PUSH2 0x3C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93C DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x12EB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x97F PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0x987 PUSH2 0x13E3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x9D5 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP3 SWAP2 SWAP1 PUSH2 0x3C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9F2 JUMPI PUSH2 0x9F1 PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA20 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA87 JUMPI PUSH2 0xA5D PUSH2 0xA45 DUP3 DUP8 PUSH2 0x1455 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA58 DUP4 DUP8 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA70 JUMPI PUSH2 0xA6F PUSH2 0x3BF5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xA26 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9A PUSH2 0x147D JUMP JUMPDEST PUSH2 0xAA3 DUP3 PUSH2 0x1563 JUMP JUMPDEST PUSH2 0xAAD DUP3 DUP3 PUSH2 0x156E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xABD DUP4 PUSH2 0xC94 JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACF PUSH2 0x168D JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB03 PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB25 PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0xB2F PUSH1 0x0 PUSH2 0x173C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE9 JUMPI DUP4 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBF5 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1813 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC03 PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0xC0B PUSH2 0x18AC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC18 PUSH2 0x191E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xC50 PUSH2 0x12E3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1946 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC9F PUSH2 0x1235 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC9 PUSH2 0x1AC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD17 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD4C JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xD5A JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xD91 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xDF9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0xE02 DUP7 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0xE0A PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0xE12 PUSH2 0x1B0B JUMP JUMPDEST PUSH2 0xE1A PUSH2 0x1B15 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x3CC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE89 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2A PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI POP PUSH2 0xF6D DUP7 DUP3 PUSH2 0xE7E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xFB3 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP3 SWAP2 SWAP1 PUSH2 0x3C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC0 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1B1F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFD0 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1042 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1039 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x104B DUP2 PUSH2 0x173C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4500 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E8 PUSH2 0x12E3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1106 PUSH2 0xC0D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1165 JUMPI PUSH2 0x1129 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115C SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1176 DUP5 PUSH2 0x1C2A JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1195 JUMPI PUSH2 0x1194 PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11C7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x122A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x121E JUMPI PUSH2 0x121D PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x11D5 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4A593662EE04D27B6A00EBB31BE7FE0C102C2ADE82A7C5D764F2DF05DC4E2800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12CF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C6 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12DD PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1D7D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x135D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1354 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13CF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C6 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13DC DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1D7D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13EB PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F5 PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x143D PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144A SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x152A JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1511 PUSH2 0x1E6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1561 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x156B PUSH2 0x10E0 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15D6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15D3 SWAP2 SWAP1 PUSH2 0x3D3B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1617 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160E SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x167E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1675 SWAP2 SWAP1 PUSH2 0x3626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1688 DUP4 DUP4 PUSH2 0x1EC6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1712 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1746 PUSH2 0x191E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1885 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187C SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1892 DUP6 DUP6 PUSH2 0x1F39 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x18A4 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1D7D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18B4 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BE PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1906 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1913 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1950 PUSH2 0x104E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19C4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BB SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1AB7 SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1AD0 PUSH2 0x1FAA JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1AE1 PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x1AEA DUP2 PUSH2 0x2015 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AF5 PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x1AFE DUP2 PUSH2 0x2029 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B09 PUSH2 0x1FD5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1B13 PUSH2 0x1FD5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1B1D PUSH2 0x1FD5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B91 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B88 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C03 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BFA SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C10 DUP6 DUP6 PUSH2 0x1F39 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1C21 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1D7D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1C88 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1C7E JUMPI PUSH2 0x1C7D PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1CC5 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1CBB JUMPI PUSH2 0x1CBA PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1CF4 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1CEA JUMPI PUSH2 0x1CE9 PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1D1D JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1D13 JUMPI PUSH2 0x1D12 PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1D42 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1D38 JUMPI PUSH2 0x1D37 PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1D65 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1D5B JUMPI PUSH2 0x1D5A PUSH2 0x3CE0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1D74 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D89 DUP6 DUP6 DUP6 DUP6 PUSH2 0x20AF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E28 JUMPI PUSH1 0x0 PUSH2 0x1DC7 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1E17 JUMPI PUSH1 0x0 PUSH2 0x1DE8 PUSH1 0x0 DUP7 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E00 PUSH1 0x0 DUP7 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1E10 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x20C1 JUMP JUMPDEST POP POP PUSH2 0x1E26 JUMP JUMPDEST PUSH2 0x1E25 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2275 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E37 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x1E6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2429 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1ECF DUP3 PUSH2 0x2433 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1F2C JUMPI PUSH2 0x1F26 DUP3 DUP3 PUSH2 0x2500 JUMP JUMPDEST POP PUSH2 0x1F35 JUMP JUMPDEST PUSH2 0x1F34 PUSH2 0x2584 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F71 PUSH2 0xAF8 JUMP JUMPDEST ISZERO PUSH2 0x1FA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FDD PUSH2 0x25C1 JUMP JUMPDEST PUSH2 0x2013 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x201D PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x2026 DUP2 PUSH2 0x25E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2031 PUSH2 0x1FD5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x209A SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20AC DUP2 PUSH2 0x173C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x20BB DUP5 DUP5 DUP5 DUP5 PUSH2 0x2603 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x226D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2122 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DBD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x215E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x215B SWAP2 SWAP1 PUSH2 0x3E2C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x21E2 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x218E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x21DA JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D1 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x226B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2262 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2421 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E59 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2312 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x230F SWAP2 SWAP1 PUSH2 0x3E2C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2396 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2342 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x238E JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2385 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x241F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2416 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x248F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2486 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x24BC PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2429 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x252A SWAP2 SWAP1 PUSH2 0x3EFD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2565 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x256A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x257A DUP6 DUP4 DUP4 PUSH2 0x27A3 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x25BF JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25CB PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25EB PUSH2 0x104E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x25FE SWAP2 SWAP1 PUSH2 0x3A40 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260D PUSH2 0x1235 JUMP JUMPDEST SWAP1 POP PUSH2 0x261B DUP6 DUP6 DUP6 DUP6 PUSH2 0x2832 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26E9 JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x26CB JUMPI PUSH1 0x0 PUSH2 0x2671 DUP3 DUP7 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x268D DUP6 DUP11 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26AA SWAP2 SWAP1 PUSH2 0x3F43 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH2 0x26BD SWAP2 SWAP1 PUSH2 0x3F43 JUMP JUMPDEST SWAP3 POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2653 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26E0 SWAP2 SWAP1 PUSH2 0x3F43 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x279C JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2787 JUMPI PUSH1 0x0 PUSH2 0x273F DUP3 DUP7 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x275B DUP6 DUP11 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 ADD SWAP3 POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2721 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x27B8 JUMPI PUSH2 0x27B3 DUP3 PUSH2 0x284C JUMP JUMPDEST PUSH2 0x282A JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x27E0 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2822 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2819 SWAP2 SWAP1 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x282B JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x283A PUSH2 0x1F69 JUMP JUMPDEST PUSH2 0x2846 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2891 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x285F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x289B PUSH2 0x104E JUMP JUMPDEST SWAP1 POP DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x28E7 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28DE SWAP3 SWAP2 SWAP1 PUSH2 0x3C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x28F1 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2B09 JUMPI PUSH1 0x0 PUSH2 0x2914 DUP3 DUP8 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x292B DUP4 DUP8 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2A5E JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2A03 JUMPI DUP10 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29FA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP7 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AFC JUMPI DUP1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2AF4 SWAP2 SWAP1 PUSH2 0x3F43 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x28F6 JUMP JUMPDEST POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x2BC8 JUMPI PUSH1 0x0 PUSH2 0x2B29 PUSH1 0x0 DUP7 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B41 PUSH1 0x0 DUP7 PUSH2 0x1469 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2BB9 SWAP3 SWAP2 SWAP1 PUSH2 0x3C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x2C47 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2C3E SWAP3 SWAP2 SWAP1 PUSH2 0x3FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8E DUP3 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C9E DUP2 PUSH2 0x2C83 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CBB DUP2 PUSH2 0x2C95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD4 DUP2 PUSH2 0x2CC1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CF1 DUP2 PUSH2 0x2CCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D0E JUMPI PUSH2 0x2D0D PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D1C DUP6 DUP3 DUP7 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D2D DUP6 DUP3 DUP7 ADD PUSH2 0x2CE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D40 DUP2 PUSH2 0x2CC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D96 DUP2 PUSH2 0x2D61 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2DB3 DUP2 PUSH2 0x2D8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DCF JUMPI PUSH2 0x2DCE PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DDD DUP5 DUP3 DUP6 ADD PUSH2 0x2DA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DFB DUP2 PUSH2 0x2DE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E16 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2E6F DUP3 PUSH2 0x2E26 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2E8E JUMPI PUSH2 0x2E8D PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EA1 PUSH2 0x2C4F JUMP JUMPDEST SWAP1 POP PUSH2 0x2EAD DUP3 DUP3 PUSH2 0x2E66 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2ECD JUMPI PUSH2 0x2ECC PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH2 0x2ED6 DUP3 PUSH2 0x2E26 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F05 PUSH2 0x2F00 DUP5 PUSH2 0x2EB2 JUMP JUMPDEST PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2F21 JUMPI PUSH2 0x2F20 PUSH2 0x2E21 JUMP JUMPDEST JUMPDEST PUSH2 0x2F2C DUP5 DUP3 DUP6 PUSH2 0x2EE3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F49 JUMPI PUSH2 0x2F48 PUSH2 0x2E1C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2F59 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2EF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F78 JUMPI PUSH2 0x2F77 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F96 JUMPI PUSH2 0x2F95 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x2FA2 DUP5 DUP3 DUP6 ADD PUSH2 0x2F34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FC1 JUMPI PUSH2 0x2FC0 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FCF DUP5 DUP3 DUP6 ADD PUSH2 0x2CE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3012 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FF7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3029 DUP3 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x3033 DUP2 DUP6 PUSH2 0x2FE3 JUMP JUMPDEST SWAP4 POP PUSH2 0x3043 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF4 JUMP JUMPDEST PUSH2 0x304C DUP2 PUSH2 0x2E26 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3071 DUP2 DUP5 PUSH2 0x301E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3094 JUMPI PUSH2 0x3093 PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30BD PUSH2 0x30B8 DUP5 PUSH2 0x3079 JUMP JUMPDEST PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x30E0 JUMPI PUSH2 0x30DF PUSH2 0x30A5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3109 JUMPI DUP1 PUSH2 0x30F5 DUP9 DUP3 PUSH2 0x2CE2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x30E2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3128 JUMPI PUSH2 0x3127 PUSH2 0x2E1C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3138 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x30AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x315C JUMPI PUSH2 0x315B PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH2 0x3165 DUP3 PUSH2 0x2E26 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3185 PUSH2 0x3180 DUP5 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x31A1 JUMPI PUSH2 0x31A0 PUSH2 0x2E21 JUMP JUMPDEST JUMPDEST PUSH2 0x31AC DUP5 DUP3 DUP6 PUSH2 0x2EE3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31C9 JUMPI PUSH2 0x31C8 PUSH2 0x2E1C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x31D9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3172 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x31FC JUMPI PUSH2 0x31FB PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x320A DUP8 DUP3 DUP9 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x322B JUMPI PUSH2 0x322A PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3237 DUP8 DUP3 DUP9 ADD PUSH2 0x3113 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3258 JUMPI PUSH2 0x3257 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3264 DUP8 DUP3 DUP9 ADD PUSH2 0x3113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3285 JUMPI PUSH2 0x3284 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3291 DUP8 DUP3 DUP9 ADD PUSH2 0x31B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x32B9 JUMPI PUSH2 0x32B8 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32C7 DUP9 DUP3 DUP10 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x32D8 DUP9 DUP3 DUP10 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32F9 JUMPI PUSH2 0x32F8 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3305 DUP9 DUP3 DUP10 ADD PUSH2 0x3113 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3326 JUMPI PUSH2 0x3325 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3332 DUP9 DUP3 DUP10 ADD PUSH2 0x3113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3353 JUMPI PUSH2 0x3352 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x335F DUP9 DUP3 DUP10 ADD PUSH2 0x31B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x3375 DUP2 PUSH2 0x2C83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3390 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x336C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x33B1 JUMPI PUSH2 0x33B0 PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D5 PUSH2 0x33D0 DUP5 PUSH2 0x3396 JUMP JUMPDEST PUSH2 0x2E97 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x33F8 JUMPI PUSH2 0x33F7 PUSH2 0x30A5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3421 JUMPI DUP1 PUSH2 0x340D DUP9 DUP3 PUSH2 0x2CAC JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x33FA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3440 JUMPI PUSH2 0x343F PUSH2 0x2E1C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3450 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x33C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3470 JUMPI PUSH2 0x346F PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x348E JUMPI PUSH2 0x348D PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x349A DUP6 DUP3 DUP7 ADD PUSH2 0x342B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34BB JUMPI PUSH2 0x34BA PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x34C7 DUP6 DUP3 DUP7 ADD PUSH2 0x3113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3506 DUP2 PUSH2 0x2CC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3518 DUP4 DUP4 PUSH2 0x34FD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x353C DUP3 PUSH2 0x34D1 JUMP JUMPDEST PUSH2 0x3546 DUP2 DUP6 PUSH2 0x34DC JUMP JUMPDEST SWAP4 POP PUSH2 0x3551 DUP4 PUSH2 0x34ED JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3582 JUMPI DUP2 MLOAD PUSH2 0x3569 DUP9 DUP3 PUSH2 0x350C JUMP JUMPDEST SWAP8 POP PUSH2 0x3574 DUP4 PUSH2 0x3524 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3555 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35A9 DUP2 DUP5 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35C8 JUMPI PUSH2 0x35C7 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35D6 DUP6 DUP3 DUP7 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35F7 JUMPI PUSH2 0x35F6 PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3603 DUP6 DUP3 DUP7 ADD PUSH2 0x31B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3620 DUP2 PUSH2 0x360D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x363B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3617 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x365B JUMPI PUSH2 0x365A PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3669 DUP8 DUP3 DUP9 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x367A DUP8 DUP3 DUP9 ADD PUSH2 0x2CE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x368B DUP8 DUP3 DUP9 ADD PUSH2 0x2CE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36AC JUMPI PUSH2 0x36AB PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x36B8 DUP8 DUP3 DUP9 ADD PUSH2 0x31B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x36CD DUP2 PUSH2 0x2DE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x36D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36EA DUP2 PUSH2 0x36C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3707 JUMPI PUSH2 0x3706 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3715 DUP6 DUP3 DUP7 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3726 DUP6 DUP3 DUP7 ADD PUSH2 0x36DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3746 JUMPI PUSH2 0x3745 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3754 DUP5 DUP3 DUP6 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3774 JUMPI PUSH2 0x3773 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3782 DUP6 DUP3 DUP7 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3793 DUP6 DUP3 DUP7 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x37B9 JUMPI PUSH2 0x37B8 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37C7 DUP9 DUP3 DUP10 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x37D8 DUP9 DUP3 DUP10 ADD PUSH2 0x2CAC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x37E9 DUP9 DUP3 DUP10 ADD PUSH2 0x2CE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x37FA DUP9 DUP3 DUP10 ADD PUSH2 0x2CE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x381B JUMPI PUSH2 0x381A PUSH2 0x2C5E JUMP JUMPDEST JUMPDEST PUSH2 0x3827 DUP9 DUP3 DUP10 ADD PUSH2 0x31B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x387B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x388E JUMPI PUSH2 0x388D PUSH2 0x3834 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x38F6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x38B9 JUMP JUMPDEST PUSH2 0x3900 DUP7 DUP4 PUSH2 0x38B9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x393D PUSH2 0x3938 PUSH2 0x3933 DUP5 PUSH2 0x2CC1 JUMP JUMPDEST PUSH2 0x3918 JUMP JUMPDEST PUSH2 0x2CC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3957 DUP4 PUSH2 0x3922 JUMP JUMPDEST PUSH2 0x396B PUSH2 0x3963 DUP3 PUSH2 0x3944 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x38C6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3980 PUSH2 0x3973 JUMP JUMPDEST PUSH2 0x398B DUP2 DUP5 DUP5 PUSH2 0x394E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39AF JUMPI PUSH2 0x39A4 PUSH1 0x0 DUP3 PUSH2 0x3978 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3991 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x39F4 JUMPI PUSH2 0x39C5 DUP2 PUSH2 0x3894 JUMP JUMPDEST PUSH2 0x39CE DUP5 PUSH2 0x38A9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x39DD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x39F1 PUSH2 0x39E9 DUP6 PUSH2 0x38A9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3990 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A17 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x39F9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A30 DUP4 DUP4 PUSH2 0x3A06 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A49 DUP3 PUSH2 0x2FD8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A62 JUMPI PUSH2 0x3A61 PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST PUSH2 0x3A6C DUP3 SLOAD PUSH2 0x3863 JUMP JUMPDEST PUSH2 0x3A77 DUP3 DUP3 DUP6 PUSH2 0x39B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3AAA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3A98 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3AA2 DUP6 DUP3 PUSH2 0x3A24 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3B0A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3AB8 DUP7 PUSH2 0x3894 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3AE0 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3ABB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3AFD JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3AF9 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3A06 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3B2A DUP2 PUSH2 0x3863 JUMP JUMPDEST PUSH2 0x3B34 DUP2 DUP7 PUSH2 0x3B12 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3B4F JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3B64 JUMPI PUSH2 0x3B97 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x3B97 JUMP JUMPDEST PUSH2 0x3B6D DUP6 PUSH2 0x3894 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B8F JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B70 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BAB DUP3 PUSH2 0x2FD8 JUMP JUMPDEST PUSH2 0x3BB5 DUP2 DUP6 PUSH2 0x3B12 JUMP JUMPDEST SWAP4 POP PUSH2 0x3BC5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BDD DUP3 DUP6 PUSH2 0x3B1D JUMP JUMPDEST SWAP2 POP PUSH2 0x3BE9 DUP3 DUP5 PUSH2 0x3BA0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C39 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x3C46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x336C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C62 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D37 JUMP JUMPDEST PUSH2 0x3C6F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D37 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CAF PUSH2 0x3CAA PUSH2 0x3CA5 DUP5 PUSH2 0x3C76 JUMP JUMPDEST PUSH2 0x3918 JUMP JUMPDEST PUSH2 0x3C80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CBF DUP2 PUSH2 0x3C94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CDA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3D18 DUP2 PUSH2 0x360D JUMP JUMPDEST DUP2 EQ PUSH2 0x3D23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D35 DUP2 PUSH2 0x3D0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D51 JUMPI PUSH2 0x3D50 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D5F DUP5 DUP3 DUP6 ADD PUSH2 0x3D26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D8F DUP3 PUSH2 0x3D68 JUMP JUMPDEST PUSH2 0x3D99 DUP2 DUP6 PUSH2 0x3D73 JUMP JUMPDEST SWAP4 POP PUSH2 0x3DA9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF4 JUMP JUMPDEST PUSH2 0x3DB2 DUP2 PUSH2 0x2E26 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3DD2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x3DDF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x3DEC PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2D37 JUMP JUMPDEST PUSH2 0x3DF9 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2D37 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3E0B DUP2 DUP5 PUSH2 0x3D84 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E26 DUP2 PUSH2 0x2D8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E42 JUMPI PUSH2 0x3E41 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E50 DUP5 DUP3 DUP6 ADD PUSH2 0x3E17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3E6E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x3E7B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x336C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3E8D DUP2 DUP7 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3EA1 DUP2 DUP6 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3EB5 DUP2 DUP5 PUSH2 0x3D84 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED7 DUP3 PUSH2 0x3D68 JUMP JUMPDEST PUSH2 0x3EE1 DUP2 DUP6 PUSH2 0x3EC1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3EF1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F09 DUP3 DUP5 PUSH2 0x3ECC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F4E DUP3 PUSH2 0x2CC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F59 DUP4 PUSH2 0x2CC1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3F71 JUMPI PUSH2 0x3F70 PUSH2 0x3F14 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F8C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x3F99 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2D37 JUMP JUMPDEST PUSH2 0x3FA6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2D37 JUMP JUMPDEST PUSH2 0x3FB3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2D37 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FD6 DUP2 DUP6 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3FEA DUP2 DUP5 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0x2C PUSH31 0x65C208625313518BC224F67B05089A2F8B1C4983EB7FF76248A42E1B6F6473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"803:2301:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3356:191:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2419:316;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1720:89:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1539:175;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2114:171:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2221:364:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5241:429:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1069:46:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1880:63;;;;;;;;;;;;;:::i;:::-;;3704:552:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2378:106:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3708:134:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2496:145:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;1949:266:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1815:59;;;;;;;;;;;;;:::i;:::-;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4324::3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1875:182:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1299:234:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4535:216:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4818:351;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3356:191:3;3433:7;3452:24;3479:20;:18;:20::i;:::-;3452:47;;3516:1;:11;;:15;3528:2;3516:15;;;;;;;;;;;:24;3532:7;3516:24;;;;;;;;;;;;;;;;3509:31;;;3356:191;;;;:::o;2419:316::-;2532:4;2582:26;2567:41;;;:11;:41;;;;:109;;;;2639:37;2624:52;;;:11;:52;;;;2567:109;:161;;;;2692:36;2716:11;2692:23;:36::i;:::-;2567:161;2548:180;;2419:316;;;:::o;1720:89:30:-;2334:13:0;:11;:13::i;:::-;1796:6:30::1;1785:8;:17;;;;;;:::i;:::-;;1720:89:::0;:::o;1539:175::-;1621:13;1677:8;1687:18;:7;:16;:18::i;:::-;1660:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1646:61;;1539:175;;;:::o;2114:171:5:-;2166:7;2185:30;2218:26;:24;:26::i;:::-;2185:59;;2261:1;:17;;;2254:24;;;2114:171;:::o;2221:364:30:-;2379:9;2374:161;2398:3;:10;2394:1;:14;2374:161;;;2464:1;2433:33;;:11;:19;2445:3;2449:1;2445:6;;;;;;;;:::i;:::-;;;;;;;;2433:19;;;;;;;;;;;;;;;;;;;;;:33;;;2429:96;;2508:2;2486:11;:19;2498:3;2502:1;2498:6;;;;;;;;:::i;:::-;;;;;;;;2486:19;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;2429:96;2410:3;;;;;;;2374:161;;;;2544:34;2555:2;2559:3;2564:7;2573:4;2544:10;:34::i;:::-;2221:364;;;;:::o;5241:429:3:-;5435:14;5452:12;:10;:12::i;:::-;5435:29;;5486:6;5478:14;;:4;:14;;;;:49;;;;;5497:30;5514:4;5520:6;5497:16;:30::i;:::-;5496:31;5478:49;5474:129;;;5579:6;5587:4;5550:42;;;;;;;;;;;;:::i;:::-;;;;;;;;5474:129;5612:51;5635:4;5641:2;5645:3;5650:6;5658:4;5612:22;:51::i;:::-;5425:245;5241:429;;;;;:::o;1069:46:30:-;;;;;;;;;;;;;;;;;;;;;;:::o;1880:63::-;2334:13:0;:11;:13::i;:::-;1926:10:30::1;:8;:10::i;:::-;1880:63::o:0;3704:552:3:-;3828:16;3879:3;:10;3860:8;:15;:29;3856:121;;3938:3;:10;3950:8;:15;3912:54;;;;;;;;;;;;:::i;:::-;;;;;;;;3856:121;3987:30;4034:8;:15;4020:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3987:63;;4066:9;4061:158;4085:8;:15;4081:1;:19;4061:158;;;4140:68;4150:30;4178:1;4150:8;:27;;:30;;;;:::i;:::-;4182:25;4205:1;4182:3;:22;;:25;;;;:::i;:::-;4140:9;:68::i;:::-;4121:13;4135:1;4121:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;4102:3;;;;;4061:158;;;;4236:13;4229:20;;;3704:552;;;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;2378:106:5:-;2435:4;2476:1;2458:15;2470:2;2458:11;:15::i;:::-;:19;2451:26;;2378:106;;;:::o;3708:134:2:-;3777:7;2926:20;:18;:20::i;:::-;811:66:12::1;3803:32:2;;3796:39;;3708:134:::0;:::o;2496:145:7:-;2543:4;2559:25;2587:21;:19;:21::i;:::-;2559:49;;2625:1;:9;;;;;;;;;;;;2618:16;;;2496:145;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1949:266:30:-;2113:1;2086:29;;:11;:15;2098:2;2086:15;;;;;;;;;;;;;;;;;;;;;:29;;;2082:85;;2149:7;2131:11;:15;2143:2;2131:15;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2082:85;2176:32;2182:7;2191:2;2195:6;2203:4;2176:5;:32::i;:::-;1949:266;;;;:::o;1815:59::-;2334:13:0;:11;:13::i;:::-;1859:8:30::1;:6;:8::i;:::-;1815:59::o:0;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;4324::3:-;4409:52;4428:12;:10;:12::i;:::-;4442:8;4452;4409:18;:52::i;:::-;4324:144;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;1875:182:5:-;1937:7;1956:30;1989:26;:24;:26::i;:::-;1956:59;;2032:1;:14;;:18;2047:2;2032:18;;;;;;;;;;;;2025:25;;;1875:182;;;:::o;1299:234:30:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;1370:18:30::1;;;;;;;;;;;;::::0;:14:::1;:18::i;:::-;1398:28;1413:12;1398:14;:28::i;:::-;1436:24;:22;:24::i;:::-;1470:22;:20;:22::i;:::-;1502:24;:22;:24::i;:::-;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;1299:234:30;:::o;4535:216:3:-;4625:4;4641:24;4668:20;:18;:20::i;:::-;4641:47;;4705:1;:20;;:29;4726:7;4705:29;;;;;;;;;;;;;;;:39;4735:8;4705:39;;;;;;;;;;;;;;;;;;;;;;;;;4698:46;;;4535:216;;;;:::o;4818:351::-;4941:14;4958:12;:10;:12::i;:::-;4941:29;;4992:6;4984:14;;:4;:14;;;;:49;;;;;5003:30;5020:4;5026:6;5003:16;:30::i;:::-;5002:31;4984:49;4980:129;;;5085:6;5093:4;5056:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4980:129;5118:44;5136:4;5142:2;5146;5150:5;5157:4;5118:17;:44::i;:::-;4931:238;4818:351;;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1911:159:3:-;1963:24;2032:22;2022:32;;1911:159;:::o;1035:146:8:-;1111:4;1149:25;1134:40;;;:11;:40;;;;1127:47;;1035:146;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;1308:632:25:-;1364:13;1413:14;1450:1;1430:17;1441:5;1430:10;:17::i;:::-;:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:41;;1520:11;1615:6;1611:2;1607:15;1599:6;1595:28;1588:35;;1650:247;1657:4;1650:247;;;1681:5;;;;;;;;1785:10;1780:2;1773:5;1769:14;1764:32;1759:3;1751:46;1841:2;1832:11;;;;;;:::i;:::-;;;;;1874:1;1865:5;:10;1650:247;1861:21;1650:247;1917:6;1910:13;;;;;1308:632;;;:::o;1471:177:5:-;1529:30;1604:28;1594:38;;1471:177;:::o;12882:282:3:-;13017:1;13003:16;;:2;:16;;;12999:88;;13073:1;13042:34;;;;;;;;;;;:::i;:::-;;;;;;;;12999:88;13096:61;13131:1;13135:2;13139:3;13144:6;13152:4;13096:26;:61::i;:::-;12882:282;;;;:::o;887:96:6:-;940:7;966:10;959:17;;887:96;:::o;10315:445:3:-;10522:1;10508:16;;:2;:16;;;10504:88;;10578:1;10547:34;;;;;;;;;;;:::i;:::-;;;;;;;;10504:88;10621:1;10605:18;;:4;:18;;;10601:88;;10675:1;10646:32;;;;;;;;;;;:::i;:::-;;;;;;;;10601:88;10698:55;10725:4;10731:2;10735:3;10740:6;10748:4;10698:26;:55::i;:::-;10315:445;;;;;:::o;3478:178:7:-;2226:16;:14;:16::i;:::-;3536:25:::1;3564:21;:19;:21::i;:::-;3536:49;;3607:5;3595:1;:9;;;:17;;;;;;;;;;;;;;;;;;3627:22;3636:12;:10;:12::i;:::-;3627:22;;;;;;:::i;:::-;;;;;;;;3526:130;3478:178::o:0;16128:197:19:-;16214:11;16302:4;16297:3;16293:14;16286:4;16281:3;16277:14;16273:35;16267:42;16260:49;;16128:197;;;;:::o;16926:::-;17012:11;17100:4;17095:3;17091:14;17084:4;17079:3;17075:14;17071:35;17065:42;17058:49;;16926:197;;;;:::o;4578:312:2:-;4667:6;4650:23;;4658:4;4650:23;;;:120;;;;4764:6;4728:42;;:32;:30;:32::i;:::-;:42;;;;4650:120;4633:251;;;4844:29;;;;;;;;;;;;;;4633:251;4578:312::o;2591:98:30:-;2334:13:0;:11;:13::i;:::-;2591:98:30;:::o;6032:538:2:-;6149:17;6131:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6127:437;;6535:17;6493:60;;;;;;;;;;;:::i;:::-;;;;;;;;6127:437;811:66:12;6233:32:2;;6225:4;:40;6221:120;;6321:4;6292:34;;;;;;;;;;;:::i;:::-;;;;;;;;6221:120;6354:54;6384:17;6403:4;6354:29;:54::i;:::-;6184:235;6032:538;;:::o;5007:213::-;5090:6;5073:23;;5081:4;5073:23;;;5069:145;;5174:29;;;;;;;;;;;;;;5069:145;5007:213::o;1147:162:7:-;1200:25;1270:23;1260:33;;1147:162;:::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;12105:346:3:-;12215:1;12201:16;;:2;:16;;;12197:88;;12271:1;12240:34;;;;;;;;;;;:::i;:::-;;;;;;;;12197:88;12295:20;12317:23;12344:29;12363:2;12367:5;12344:18;:29::i;:::-;12294:79;;;;12383:61;12418:1;12422:2;12426:3;12431:6;12439:4;12383:26;:61::i;:::-;12187:264;;12105:346;;;;:::o;3170:176:7:-;1979:19;:17;:19::i;:::-;3229:25:::1;3257:21;:19;:21::i;:::-;3229:49;;3300:4;3288:1;:9;;;:16;;;;;;;;;;;;;;;;;;3319:20;3326:12;:10;:12::i;:::-;3319:20;;;;;;:::i;:::-;;;;;;;;3219:127;3170:176::o:0;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;14627:374:3:-;14730:24;14757:20;:18;:20::i;:::-;14730:47;;14811:1;14791:22;;:8;:22;;;14787:94;;14867:1;14836:34;;;;;;;;;;;:::i;:::-;;;;;;;;14787:94;14930:8;14890:1;:20;;:27;14911:5;14890:27;;;;;;;;;;;;;;;:37;14918:8;14890:37;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;14975:8;14953:41;;14968:5;14953:41;;;14985:8;14953:41;;;;;;:::i;:::-;;;;;;;;14720:281;14627:374;;;:::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;2119:117:3:-;6929:20:1;:18;:20::i;:::-;2199:30:3::1;2224:4;2199:24;:30::i;:::-;2119:117:::0;:::o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1163:67:4:-;6929:20:1;:18;:20::i;:::-;1163:67:4:o;1654:65:5:-;6929:20:1;:18;:20::i;:::-;1654:65:5:o;2970:67:2:-;6929:20:1;:18;:20::i;:::-;2970:67:2:o;9451:463:3:-;9587:1;9573:16;;:2;:16;;;9569:88;;9643:1;9612:34;;;;;;;;;;;:::i;:::-;;;;;;;;9569:88;9686:1;9670:18;;:4;:18;;;9666:88;;9740:1;9711:32;;;;;;;;;;;:::i;:::-;;;;;;;;9666:88;9764:20;9786:23;9813:29;9832:2;9836:5;9813:18;:29::i;:::-;9763:79;;;;9852:55;9879:4;9885:2;9889:3;9894:6;9902:4;9852:26;:55::i;:::-;9559:355;;9451:463;;;;;:::o;29154:916:27:-;29207:7;29226:14;29243:1;29226:18;;29291:8;29282:5;:17;29278:103;;29328:8;29319:17;;;;;;:::i;:::-;;;;;29364:2;29354:12;;;;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;;;;:::i;:::-;;;;;29480:2;29470:12;;;;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;;;;:::i;:::-;;;;;29596:2;29586:12;;;;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;;;;:::i;:::-;;;;;29710:1;29700:11;;;;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;;;;:::i;:::-;;;;;29823:1;29813:11;;;;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;;;;:::i;:::-;;;;;29936:1;29926:11;;;;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;;;;29965:66;30057:6;30050:13;;;29154:916;;;:::o;8294:700:3:-;8495:30;8503:4;8509:2;8513:3;8518:6;8495:7;:30::i;:::-;8553:1;8539:16;;:2;:16;;;8535:453;;8571:16;8590:12;:10;:12::i;:::-;8571:31;;8634:1;8620:3;:10;:15;8616:362;;8655:10;8668:25;8691:1;8668:3;:22;;:25;;;;:::i;:::-;8655:38;;8711:13;8727:28;8753:1;8727:6;:25;;:28;;;;:::i;:::-;8711:44;;8773:72;8809:8;8819:4;8825:2;8829;8833:5;8840:4;8773:35;:72::i;:::-;8637:223;;8616:362;;;8884:79;8925:8;8935:4;8941:2;8945:3;8950:6;8958:4;8884:40;:79::i;:::-;8616:362;8557:431;8535:453;8294:700;;;;;:::o;2909:126:7:-;2972:8;:6;:8::i;:::-;2967:62;;3003:15;;;;;;;;;;;;;;2967:62;2909:126::o;1441:138:12:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;15117:822:3:-;15225:23;15250;15384:4;15378:11;15368:21;;15454:1;15446:6;15439:17;15592:8;15585:4;15577:6;15573:17;15566:35;15714:4;15706:6;15702:17;15692:27;;15747:1;15739:6;15732:17;15788:8;15781:4;15773:6;15769:17;15762:35;15917:4;15909:6;15905:17;15899:4;15892:31;15117:822;;;;;:::o;2709:128:7:-;2774:8;:6;:8::i;:::-;2770:61;;;2805:15;;;;;;;;;;;;;;2770:61;2709:128::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;2242:110:3:-;6929:20:1;:18;:20::i;:::-;2332:13:3::1;2340:4;2332:7;:13::i;:::-;2242:110:::0;:::o;1980:235:0:-;6929:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;2763:339:30:-;3059:36;3073:4;3079:2;3083:3;3088:6;3059:13;:36::i;:::-;2763:339;;;;:::o;1006:959:17:-;1222:1;1205:2;:14;;;:18;1201:758;;;1260:2;1243:38;;;1282:8;1292:4;1298:2;1302:5;1309:4;1243:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1239:710;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:1;1613:6;:13;:18;1609:326;;1756:2;1718:41;;;;;;;;;;;:::i;:::-;;;;;;;;1609:326;1887:6;1881:13;1872:6;1868:2;1864:15;1857:38;1239:710;1375:43;;;1363:55;;;:8;:55;;;;1359:189;;1526:2;1488:41;;;;;;;;;;;:::i;:::-;;;;;;;;1359:189;1315:247;1201:758;1006:959;;;;;;:::o;2521:1026::-;2762:1;2745:2;:14;;;:18;2741:800;;;2800:2;2783:43;;;2827:8;2837:4;2843:3;2848:6;2856:4;2783:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2779:752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3212:1;3195:6;:13;:18;3191:326;;3338:2;3300:41;;;;;;;;;;;:::i;:::-;;;;;;;;3191:326;3469:6;3463:13;3454:6;3450:2;3446:15;3439:38;2779:752;2952:48;;;2940:60;;;:8;:60;;;;2936:194;;3108:2;3070:41;;;;;;;;;;;:::i;:::-;;;;;;;;2936:194;2862:282;2741:800;2521:1026;;;;;;:::o;1899:163:24:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:12:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:18:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:12:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;11582:145:3:-;11648:24;11675:20;:18;:20::i;:::-;11648:47;;11714:6;11705:1;:6;;:15;;;;;;:::i;:::-;;11638:89;11582:145;:::o;2541:1671:5:-;2705:30;2738:26;:24;:26::i;:::-;2705:59;;2774:36;2788:4;2794:2;2798:3;2803:6;2774:13;:36::i;:::-;2841:1;2825:18;;:4;:18;;;2821:575;;2859:22;2904:9;2899:333;2923:3;:10;2919:1;:14;2899:333;;;2958:13;2974:28;3000:1;2974:6;:25;;:28;;;;:::i;:::-;2958:44;;3171:5;3126:1;:14;;:41;3141:25;3164:1;3141:3;:22;;:25;;;;:::i;:::-;3126:41;;;;;;;;;;;;:50;;;;;;;:::i;:::-;;;;;;;;3212:5;3194:23;;;;;:::i;:::-;;;2940:292;2935:3;;;;;2899:333;;;;3371:14;3350:1;:17;;;:35;;;;;;;:::i;:::-;;;;;;;;2845:551;2821:575;3424:1;3410:16;;:2;:16;;;3406:800;;3442:22;3487:9;3482:499;3506:3;:10;3502:1;:14;3482:499;;;3541:13;3557:28;3583:1;3557:6;:25;;:28;;;;:::i;:::-;3541:44;;3787:5;3742:1;:14;;:41;3757:25;3780:1;3757:3;:22;;:25;;;;:::i;:::-;3742:41;;;;;;;;;;;;:50;;;;;;;;;;;3943:5;3925:23;;;;3523:458;3518:3;;;;;3482:499;;;;4167:14;4146:1;:17;;;:35;;;;;;;;;;;3428:778;3406:800;2695:1517;2541:1671;;;;:::o;4437:582:18:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;1446:221:4:-;1979:19:7;:17;:19::i;:::-;1624:36:4::1;1638:4;1644:2;1648:3;1653:6;1624:13;:36::i;:::-;1446:221:::0;;;;:::o;5559:487:18:-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;6371:1344:3;6488:24;6515:20;:18;:20::i;:::-;6488:47;;6563:6;:13;6549:3;:10;:27;6545:117;;6625:3;:10;6637:6;:13;6599:52;;;;;;;;;;;;:::i;:::-;;;;;;;;6545:117;6672:16;6691:12;:10;:12::i;:::-;6672:31;;6719:9;6714:697;6738:3;:10;6734:1;:14;6714:697;;;6769:10;6782:25;6805:1;6782:3;:22;;:25;;;;:::i;:::-;6769:38;;6821:13;6837:28;6863:1;6837:6;:25;;:28;;;;:::i;:::-;6821:44;;6900:1;6884:18;;:4;:18;;;6880:424;;6922:19;6944:1;:11;;:15;6956:2;6944:15;;;;;;;;;;;:21;6960:4;6944:21;;;;;;;;;;;;;;;;6922:43;;7001:5;6987:11;:19;6983:129;;;7064:4;7070:11;7083:5;7090:2;7037:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6983:129;7266:5;7252:11;:19;7228:1;:11;;:15;7240:2;7228:15;;;;;;;;;;;:21;7244:4;7228:21;;;;;;;;;;;;;;;:43;;;;6904:400;6880:424;7336:1;7322:16;;:2;:16;;;7318:83;;7381:5;7358:1;:11;;:15;7370:2;7358:15;;;;;;;;;;;:19;7374:2;7358:19;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;7318:83;6755:656;;6750:3;;;;;6714:697;;;;7439:1;7425:3;:10;:15;7421:288;;7456:10;7469:25;7492:1;7469:3;:22;;:25;;;;:::i;:::-;7456:38;;7508:13;7524:28;7550:1;7524:6;:25;;:28;;;;:::i;:::-;7508:44;;7602:2;7571:45;;7596:4;7571:45;;7586:8;7571:45;;;7606:2;7610:5;7571:45;;;;;;;:::i;:::-;;;;;;;;7442:185;;7421:288;;;7682:2;7652:46;;7676:4;7652:46;;7666:8;7652:46;;;7686:3;7691:6;7652:46;;;;;;;:::i;:::-;;;;;;;;7421:288;6478:1237;;6371:1344;;;;:::o;7:75:31:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:117::-;3322:1;3319;3312:12;3336:117;3445:1;3442;3435:12;3459:102;3500:6;3551:2;3547:7;3542:2;3535:5;3531:14;3527:28;3517:38;;3459:102;;;:::o;3567:180::-;3615:77;3612:1;3605:88;3712:4;3709:1;3702:15;3736:4;3733:1;3726:15;3753:281;3836:27;3858:4;3836:27;:::i;:::-;3828:6;3824:40;3966:6;3954:10;3951:22;3930:18;3918:10;3915:34;3912:62;3909:88;;;3977:18;;:::i;:::-;3909:88;4017:10;4013:2;4006:22;3796:238;3753:281;;:::o;4040:129::-;4074:6;4101:20;;:::i;:::-;4091:30;;4130:33;4158:4;4150:6;4130:33;:::i;:::-;4040:129;;;:::o;4175:308::-;4237:4;4327:18;4319:6;4316:30;4313:56;;;4349:18;;:::i;:::-;4313:56;4387:29;4409:6;4387:29;:::i;:::-;4379:37;;4471:4;4465;4461:15;4453:23;;4175:308;;;:::o;4489:148::-;4587:6;4582:3;4577;4564:30;4628:1;4619:6;4614:3;4610:16;4603:27;4489:148;;;:::o;4643:425::-;4721:5;4746:66;4762:49;4804:6;4762:49;:::i;:::-;4746:66;:::i;:::-;4737:75;;4835:6;4828:5;4821:21;4873:4;4866:5;4862:16;4911:3;4902:6;4897:3;4893:16;4890:25;4887:112;;;4918:79;;:::i;:::-;4887:112;5008:54;5055:6;5050:3;5045;5008:54;:::i;:::-;4727:341;4643:425;;;;;:::o;5088:340::-;5144:5;5193:3;5186:4;5178:6;5174:17;5170:27;5160:122;;5201:79;;:::i;:::-;5160:122;5318:6;5305:20;5343:79;5418:3;5410:6;5403:4;5395:6;5391:17;5343:79;:::i;:::-;5334:88;;5150:278;5088:340;;;;:::o;5434:509::-;5503:6;5552:2;5540:9;5531:7;5527:23;5523:32;5520:119;;;5558:79;;:::i;:::-;5520:119;5706:1;5695:9;5691:17;5678:31;5736:18;5728:6;5725:30;5722:117;;;5758:79;;:::i;:::-;5722:117;5863:63;5918:7;5909:6;5898:9;5894:22;5863:63;:::i;:::-;5853:73;;5649:287;5434:509;;;;:::o;5949:329::-;6008:6;6057:2;6045:9;6036:7;6032:23;6028:32;6025:119;;;6063:79;;:::i;:::-;6025:119;6183:1;6208:53;6253:7;6244:6;6233:9;6229:22;6208:53;:::i;:::-;6198:63;;6154:117;5949:329;;;;:::o;6284:99::-;6336:6;6370:5;6364:12;6354:22;;6284:99;;;:::o;6389:169::-;6473:11;6507:6;6502:3;6495:19;6547:4;6542:3;6538:14;6523:29;;6389:169;;;;:::o;6564:248::-;6646:1;6656:113;6670:6;6667:1;6664:13;6656:113;;;6755:1;6750:3;6746:11;6740:18;6736:1;6731:3;6727:11;6720:39;6692:2;6689:1;6685:10;6680:15;;6656:113;;;6803:1;6794:6;6789:3;6785:16;6778:27;6626:186;6564:248;;;:::o;6818:377::-;6906:3;6934:39;6967:5;6934:39;:::i;:::-;6989:71;7053:6;7048:3;6989:71;:::i;:::-;6982:78;;7069:65;7127:6;7122:3;7115:4;7108:5;7104:16;7069:65;:::i;:::-;7159:29;7181:6;7159:29;:::i;:::-;7154:3;7150:39;7143:46;;6910:285;6818:377;;;;:::o;7201:313::-;7314:4;7352:2;7341:9;7337:18;7329:26;;7401:9;7395:4;7391:20;7387:1;7376:9;7372:17;7365:47;7429:78;7502:4;7493:6;7429:78;:::i;:::-;7421:86;;7201:313;;;;:::o;7520:311::-;7597:4;7687:18;7679:6;7676:30;7673:56;;;7709:18;;:::i;:::-;7673:56;7759:4;7751:6;7747:17;7739:25;;7819:4;7813;7809:15;7801:23;;7520:311;;;:::o;7837:117::-;7946:1;7943;7936:12;7977:710;8073:5;8098:81;8114:64;8171:6;8114:64;:::i;:::-;8098:81;:::i;:::-;8089:90;;8199:5;8228:6;8221:5;8214:21;8262:4;8255:5;8251:16;8244:23;;8315:4;8307:6;8303:17;8295:6;8291:30;8344:3;8336:6;8333:15;8330:122;;;8363:79;;:::i;:::-;8330:122;8478:6;8461:220;8495:6;8490:3;8487:15;8461:220;;;8570:3;8599:37;8632:3;8620:10;8599:37;:::i;:::-;8594:3;8587:50;8666:4;8661:3;8657:14;8650:21;;8537:144;8521:4;8516:3;8512:14;8505:21;;8461:220;;;8465:21;8079:608;;7977:710;;;;;:::o;8710:370::-;8781:5;8830:3;8823:4;8815:6;8811:17;8807:27;8797:122;;8838:79;;:::i;:::-;8797:122;8955:6;8942:20;8980:94;9070:3;9062:6;9055:4;9047:6;9043:17;8980:94;:::i;:::-;8971:103;;8787:293;8710:370;;;;:::o;9086:307::-;9147:4;9237:18;9229:6;9226:30;9223:56;;;9259:18;;:::i;:::-;9223:56;9297:29;9319:6;9297:29;:::i;:::-;9289:37;;9381:4;9375;9371:15;9363:23;;9086:307;;;:::o;9399:423::-;9476:5;9501:65;9517:48;9558:6;9517:48;:::i;:::-;9501:65;:::i;:::-;9492:74;;9589:6;9582:5;9575:21;9627:4;9620:5;9616:16;9665:3;9656:6;9651:3;9647:16;9644:25;9641:112;;;9672:79;;:::i;:::-;9641:112;9762:54;9809:6;9804:3;9799;9762:54;:::i;:::-;9482:340;9399:423;;;;;:::o;9841:338::-;9896:5;9945:3;9938:4;9930:6;9926:17;9922:27;9912:122;;9953:79;;:::i;:::-;9912:122;10070:6;10057:20;10095:78;10169:3;10161:6;10154:4;10146:6;10142:17;10095:78;:::i;:::-;10086:87;;9902:277;9841:338;;;;:::o;10185:1363::-;10330:6;10338;10346;10354;10403:3;10391:9;10382:7;10378:23;10374:33;10371:120;;;10410:79;;:::i;:::-;10371:120;10530:1;10555:53;10600:7;10591:6;10580:9;10576:22;10555:53;:::i;:::-;10545:63;;10501:117;10685:2;10674:9;10670:18;10657:32;10716:18;10708:6;10705:30;10702:117;;;10738:79;;:::i;:::-;10702:117;10843:78;10913:7;10904:6;10893:9;10889:22;10843:78;:::i;:::-;10833:88;;10628:303;10998:2;10987:9;10983:18;10970:32;11029:18;11021:6;11018:30;11015:117;;;11051:79;;:::i;:::-;11015:117;11156:78;11226:7;11217:6;11206:9;11202:22;11156:78;:::i;:::-;11146:88;;10941:303;11311:2;11300:9;11296:18;11283:32;11342:18;11334:6;11331:30;11328:117;;;11364:79;;:::i;:::-;11328:117;11469:62;11523:7;11514:6;11503:9;11499:22;11469:62;:::i;:::-;11459:72;;11254:287;10185:1363;;;;;;;:::o;11554:1509::-;11708:6;11716;11724;11732;11740;11789:3;11777:9;11768:7;11764:23;11760:33;11757:120;;;11796:79;;:::i;:::-;11757:120;11916:1;11941:53;11986:7;11977:6;11966:9;11962:22;11941:53;:::i;:::-;11931:63;;11887:117;12043:2;12069:53;12114:7;12105:6;12094:9;12090:22;12069:53;:::i;:::-;12059:63;;12014:118;12199:2;12188:9;12184:18;12171:32;12230:18;12222:6;12219:30;12216:117;;;12252:79;;:::i;:::-;12216:117;12357:78;12427:7;12418:6;12407:9;12403:22;12357:78;:::i;:::-;12347:88;;12142:303;12512:2;12501:9;12497:18;12484:32;12543:18;12535:6;12532:30;12529:117;;;12565:79;;:::i;:::-;12529:117;12670:78;12740:7;12731:6;12720:9;12716:22;12670:78;:::i;:::-;12660:88;;12455:303;12825:3;12814:9;12810:19;12797:33;12857:18;12849:6;12846:30;12843:117;;;12879:79;;:::i;:::-;12843:117;12984:62;13038:7;13029:6;13018:9;13014:22;12984:62;:::i;:::-;12974:72;;12768:288;11554:1509;;;;;;;;:::o;13069:118::-;13156:24;13174:5;13156:24;:::i;:::-;13151:3;13144:37;13069:118;;:::o;13193:222::-;13286:4;13324:2;13313:9;13309:18;13301:26;;13337:71;13405:1;13394:9;13390:17;13381:6;13337:71;:::i;:::-;13193:222;;;;:::o;13421:311::-;13498:4;13588:18;13580:6;13577:30;13574:56;;;13610:18;;:::i;:::-;13574:56;13660:4;13652:6;13648:17;13640:25;;13720:4;13714;13710:15;13702:23;;13421:311;;;:::o;13755:710::-;13851:5;13876:81;13892:64;13949:6;13892:64;:::i;:::-;13876:81;:::i;:::-;13867:90;;13977:5;14006:6;13999:5;13992:21;14040:4;14033:5;14029:16;14022:23;;14093:4;14085:6;14081:17;14073:6;14069:30;14122:3;14114:6;14111:15;14108:122;;;14141:79;;:::i;:::-;14108:122;14256:6;14239:220;14273:6;14268:3;14265:15;14239:220;;;14348:3;14377:37;14410:3;14398:10;14377:37;:::i;:::-;14372:3;14365:50;14444:4;14439:3;14435:14;14428:21;;14315:144;14299:4;14294:3;14290:14;14283:21;;14239:220;;;14243:21;13857:608;;13755:710;;;;;:::o;14488:370::-;14559:5;14608:3;14601:4;14593:6;14589:17;14585:27;14575:122;;14616:79;;:::i;:::-;14575:122;14733:6;14720:20;14758:94;14848:3;14840:6;14833:4;14825:6;14821:17;14758:94;:::i;:::-;14749:103;;14565:293;14488:370;;;;:::o;14864:894::-;14982:6;14990;15039:2;15027:9;15018:7;15014:23;15010:32;15007:119;;;15045:79;;:::i;:::-;15007:119;15193:1;15182:9;15178:17;15165:31;15223:18;15215:6;15212:30;15209:117;;;15245:79;;:::i;:::-;15209:117;15350:78;15420:7;15411:6;15400:9;15396:22;15350:78;:::i;:::-;15340:88;;15136:302;15505:2;15494:9;15490:18;15477:32;15536:18;15528:6;15525:30;15522:117;;;15558:79;;:::i;:::-;15522:117;15663:78;15733:7;15724:6;15713:9;15709:22;15663:78;:::i;:::-;15653:88;;15448:303;14864:894;;;;;:::o;15764:114::-;15831:6;15865:5;15859:12;15849:22;;15764:114;;;:::o;15884:184::-;15983:11;16017:6;16012:3;16005:19;16057:4;16052:3;16048:14;16033:29;;15884:184;;;;:::o;16074:132::-;16141:4;16164:3;16156:11;;16194:4;16189:3;16185:14;16177:22;;16074:132;;;:::o;16212:108::-;16289:24;16307:5;16289:24;:::i;:::-;16284:3;16277:37;16212:108;;:::o;16326:179::-;16395:10;16416:46;16458:3;16450:6;16416:46;:::i;:::-;16494:4;16489:3;16485:14;16471:28;;16326:179;;;;:::o;16511:113::-;16581:4;16613;16608:3;16604:14;16596:22;;16511:113;;;:::o;16660:732::-;16779:3;16808:54;16856:5;16808:54;:::i;:::-;16878:86;16957:6;16952:3;16878:86;:::i;:::-;16871:93;;16988:56;17038:5;16988:56;:::i;:::-;17067:7;17098:1;17083:284;17108:6;17105:1;17102:13;17083:284;;;17184:6;17178:13;17211:63;17270:3;17255:13;17211:63;:::i;:::-;17204:70;;17297:60;17350:6;17297:60;:::i;:::-;17287:70;;17143:224;17130:1;17127;17123:9;17118:14;;17083:284;;;17087:14;17383:3;17376:10;;16784:608;;;16660:732;;;;:::o;17398:373::-;17541:4;17579:2;17568:9;17564:18;17556:26;;17628:9;17622:4;17618:20;17614:1;17603:9;17599:17;17592:47;17656:108;17759:4;17750:6;17656:108;:::i;:::-;17648:116;;17398:373;;;;:::o;17777:652::-;17854:6;17862;17911:2;17899:9;17890:7;17886:23;17882:32;17879:119;;;17917:79;;:::i;:::-;17879:119;18037:1;18062:53;18107:7;18098:6;18087:9;18083:22;18062:53;:::i;:::-;18052:63;;18008:117;18192:2;18181:9;18177:18;18164:32;18223:18;18215:6;18212:30;18209:117;;;18245:79;;:::i;:::-;18209:117;18350:62;18404:7;18395:6;18384:9;18380:22;18350:62;:::i;:::-;18340:72;;18135:287;17777:652;;;;;:::o;18435:77::-;18472:7;18501:5;18490:16;;18435:77;;;:::o;18518:118::-;18605:24;18623:5;18605:24;:::i;:::-;18600:3;18593:37;18518:118;;:::o;18642:222::-;18735:4;18773:2;18762:9;18758:18;18750:26;;18786:71;18854:1;18843:9;18839:17;18830:6;18786:71;:::i;:::-;18642:222;;;;:::o;18870:943::-;18965:6;18973;18981;18989;19038:3;19026:9;19017:7;19013:23;19009:33;19006:120;;;19045:79;;:::i;:::-;19006:120;19165:1;19190:53;19235:7;19226:6;19215:9;19211:22;19190:53;:::i;:::-;19180:63;;19136:117;19292:2;19318:53;19363:7;19354:6;19343:9;19339:22;19318:53;:::i;:::-;19308:63;;19263:118;19420:2;19446:53;19491:7;19482:6;19471:9;19467:22;19446:53;:::i;:::-;19436:63;;19391:118;19576:2;19565:9;19561:18;19548:32;19607:18;19599:6;19596:30;19593:117;;;19629:79;;:::i;:::-;19593:117;19734:62;19788:7;19779:6;19768:9;19764:22;19734:62;:::i;:::-;19724:72;;19519:287;18870:943;;;;;;;:::o;19819:116::-;19889:21;19904:5;19889:21;:::i;:::-;19882:5;19879:32;19869:60;;19925:1;19922;19915:12;19869:60;19819:116;:::o;19941:133::-;19984:5;20022:6;20009:20;20000:29;;20038:30;20062:5;20038:30;:::i;:::-;19941:133;;;;:::o;20080:468::-;20145:6;20153;20202:2;20190:9;20181:7;20177:23;20173:32;20170:119;;;20208:79;;:::i;:::-;20170:119;20328:1;20353:53;20398:7;20389:6;20378:9;20374:22;20353:53;:::i;:::-;20343:63;;20299:117;20455:2;20481:50;20523:7;20514:6;20503:9;20499:22;20481:50;:::i;:::-;20471:60;;20426:115;20080:468;;;;;:::o;20554:329::-;20613:6;20662:2;20650:9;20641:7;20637:23;20633:32;20630:119;;;20668:79;;:::i;:::-;20630:119;20788:1;20813:53;20858:7;20849:6;20838:9;20834:22;20813:53;:::i;:::-;20803:63;;20759:117;20554:329;;;;:::o;20889:474::-;20957:6;20965;21014:2;21002:9;20993:7;20989:23;20985:32;20982:119;;;21020:79;;:::i;:::-;20982:119;21140:1;21165:53;21210:7;21201:6;21190:9;21186:22;21165:53;:::i;:::-;21155:63;;21111:117;21267:2;21293:53;21338:7;21329:6;21318:9;21314:22;21293:53;:::i;:::-;21283:63;;21238:118;20889:474;;;;;:::o;21369:1089::-;21473:6;21481;21489;21497;21505;21554:3;21542:9;21533:7;21529:23;21525:33;21522:120;;;21561:79;;:::i;:::-;21522:120;21681:1;21706:53;21751:7;21742:6;21731:9;21727:22;21706:53;:::i;:::-;21696:63;;21652:117;21808:2;21834:53;21879:7;21870:6;21859:9;21855:22;21834:53;:::i;:::-;21824:63;;21779:118;21936:2;21962:53;22007:7;21998:6;21987:9;21983:22;21962:53;:::i;:::-;21952:63;;21907:118;22064:2;22090:53;22135:7;22126:6;22115:9;22111:22;22090:53;:::i;:::-;22080:63;;22035:118;22220:3;22209:9;22205:19;22192:33;22252:18;22244:6;22241:30;22238:117;;;22274:79;;:::i;:::-;22238:117;22379:62;22433:7;22424:6;22413:9;22409:22;22379:62;:::i;:::-;22369:72;;22163:288;21369:1089;;;;;;;;:::o;22464:180::-;22512:77;22509:1;22502:88;22609:4;22606:1;22599:15;22633:4;22630:1;22623:15;22650:320;22694:6;22731:1;22725:4;22721:12;22711:22;;22778:1;22772:4;22768:12;22799:18;22789:81;;22855:4;22847:6;22843:17;22833:27;;22789:81;22917:2;22909:6;22906:14;22886:18;22883:38;22880:84;;22936:18;;:::i;:::-;22880:84;22701:269;22650:320;;;:::o;22976:141::-;23025:4;23048:3;23040:11;;23071:3;23068:1;23061:14;23105:4;23102:1;23092:18;23084:26;;22976:141;;;:::o;23123:93::-;23160:6;23207:2;23202;23195:5;23191:14;23187:23;23177:33;;23123:93;;;:::o;23222:107::-;23266:8;23316:5;23310:4;23306:16;23285:37;;23222:107;;;;:::o;23335:393::-;23404:6;23454:1;23442:10;23438:18;23477:97;23507:66;23496:9;23477:97;:::i;:::-;23595:39;23625:8;23614:9;23595:39;:::i;:::-;23583:51;;23667:4;23663:9;23656:5;23652:21;23643:30;;23716:4;23706:8;23702:19;23695:5;23692:30;23682:40;;23411:317;;23335:393;;;;;:::o;23734:60::-;23762:3;23783:5;23776:12;;23734:60;;;:::o;23800:142::-;23850:9;23883:53;23901:34;23910:24;23928:5;23910:24;:::i;:::-;23901:34;:::i;:::-;23883:53;:::i;:::-;23870:66;;23800:142;;;:::o;23948:75::-;23991:3;24012:5;24005:12;;23948:75;;;:::o;24029:269::-;24139:39;24170:7;24139:39;:::i;:::-;24200:91;24249:41;24273:16;24249:41;:::i;:::-;24241:6;24234:4;24228:11;24200:91;:::i;:::-;24194:4;24187:105;24105:193;24029:269;;;:::o;24304:73::-;24349:3;24304:73;:::o;24383:189::-;24460:32;;:::i;:::-;24501:65;24559:6;24551;24545:4;24501:65;:::i;:::-;24436:136;24383:189;;:::o;24578:186::-;24638:120;24655:3;24648:5;24645:14;24638:120;;;24709:39;24746:1;24739:5;24709:39;:::i;:::-;24682:1;24675:5;24671:13;24662:22;;24638:120;;;24578:186;;:::o;24770:543::-;24871:2;24866:3;24863:11;24860:446;;;24905:38;24937:5;24905:38;:::i;:::-;24989:29;25007:10;24989:29;:::i;:::-;24979:8;24975:44;25172:2;25160:10;25157:18;25154:49;;;25193:8;25178:23;;25154:49;25216:80;25272:22;25290:3;25272:22;:::i;:::-;25262:8;25258:37;25245:11;25216:80;:::i;:::-;24875:431;;24860:446;24770:543;;;:::o;25319:117::-;25373:8;25423:5;25417:4;25413:16;25392:37;;25319:117;;;;:::o;25442:169::-;25486:6;25519:51;25567:1;25563:6;25555:5;25552:1;25548:13;25519:51;:::i;:::-;25515:56;25600:4;25594;25590:15;25580:25;;25493:118;25442:169;;;;:::o;25616:295::-;25692:4;25838:29;25863:3;25857:4;25838:29;:::i;:::-;25830:37;;25900:3;25897:1;25893:11;25887:4;25884:21;25876:29;;25616:295;;;;:::o;25916:1395::-;26033:37;26066:3;26033:37;:::i;:::-;26135:18;26127:6;26124:30;26121:56;;;26157:18;;:::i;:::-;26121:56;26201:38;26233:4;26227:11;26201:38;:::i;:::-;26286:67;26346:6;26338;26332:4;26286:67;:::i;:::-;26380:1;26404:4;26391:17;;26436:2;26428:6;26425:14;26453:1;26448:618;;;;27110:1;27127:6;27124:77;;;27176:9;27171:3;27167:19;27161:26;27152:35;;27124:77;27227:67;27287:6;27280:5;27227:67;:::i;:::-;27221:4;27214:81;27083:222;26418:887;;26448:618;26500:4;26496:9;26488:6;26484:22;26534:37;26566:4;26534:37;:::i;:::-;26593:1;26607:208;26621:7;26618:1;26615:14;26607:208;;;26700:9;26695:3;26691:19;26685:26;26677:6;26670:42;26751:1;26743:6;26739:14;26729:24;;26798:2;26787:9;26783:18;26770:31;;26644:4;26641:1;26637:12;26632:17;;26607:208;;;26843:6;26834:7;26831:19;26828:179;;;26901:9;26896:3;26892:19;26886:26;26944:48;26986:4;26978:6;26974:17;26963:9;26944:48;:::i;:::-;26936:6;26929:64;26851:156;26828:179;27053:1;27049;27041:6;27037:14;27033:22;27027:4;27020:36;26455:611;;;26418:887;;26008:1303;;;25916:1395;;:::o;27317:148::-;27419:11;27456:3;27441:18;;27317:148;;;;:::o;27495:874::-;27598:3;27635:5;27629:12;27664:36;27690:9;27664:36;:::i;:::-;27716:89;27798:6;27793:3;27716:89;:::i;:::-;27709:96;;27836:1;27825:9;27821:17;27852:1;27847:166;;;;28027:1;28022:341;;;;27814:549;;27847:166;27931:4;27927:9;27916;27912:25;27907:3;27900:38;27993:6;27986:14;27979:22;27971:6;27967:35;27962:3;27958:45;27951:52;;27847:166;;28022:341;28089:38;28121:5;28089:38;:::i;:::-;28149:1;28163:154;28177:6;28174:1;28171:13;28163:154;;;28251:7;28245:14;28241:1;28236:3;28232:11;28225:35;28301:1;28292:7;28288:15;28277:26;;28199:4;28196:1;28192:12;28187:17;;28163:154;;;28346:6;28341:3;28337:16;28330:23;;28029:334;;27814:549;;27602:767;;27495:874;;;;:::o;28375:390::-;28481:3;28509:39;28542:5;28509:39;:::i;:::-;28564:89;28646:6;28641:3;28564:89;:::i;:::-;28557:96;;28662:65;28720:6;28715:3;28708:4;28701:5;28697:16;28662:65;:::i;:::-;28752:6;28747:3;28743:16;28736:23;;28485:280;28375:390;;;;:::o;28771:429::-;28948:3;28970:92;29058:3;29049:6;28970:92;:::i;:::-;28963:99;;29079:95;29170:3;29161:6;29079:95;:::i;:::-;29072:102;;29191:3;29184:10;;28771:429;;;;;:::o;29206:180::-;29254:77;29251:1;29244:88;29351:4;29348:1;29341:15;29375:4;29372:1;29365:15;29392:332;29513:4;29551:2;29540:9;29536:18;29528:26;;29564:71;29632:1;29621:9;29617:17;29608:6;29564:71;:::i;:::-;29645:72;29713:2;29702:9;29698:18;29689:6;29645:72;:::i;:::-;29392:332;;;;;:::o;29730:::-;29851:4;29889:2;29878:9;29874:18;29866:26;;29902:71;29970:1;29959:9;29955:17;29946:6;29902:71;:::i;:::-;29983:72;30051:2;30040:9;30036:18;30027:6;29983:72;:::i;:::-;29730:332;;;;;:::o;30068:85::-;30113:7;30142:5;30131:16;;30068:85;;;:::o;30159:101::-;30195:7;30235:18;30228:5;30224:30;30213:41;;30159:101;;;:::o;30266:156::-;30323:9;30356:60;30373:42;30382:32;30408:5;30382:32;:::i;:::-;30373:42;:::i;:::-;30356:60;:::i;:::-;30343:73;;30266:156;;;:::o;30428:145::-;30522:44;30560:5;30522:44;:::i;:::-;30517:3;30510:57;30428:145;;:::o;30579:236::-;30679:4;30717:2;30706:9;30702:18;30694:26;;30730:78;30805:1;30794:9;30790:17;30781:6;30730:78;:::i;:::-;30579:236;;;;:::o;30821:180::-;30869:77;30866:1;30859:88;30966:4;30963:1;30956:15;30990:4;30987:1;30980:15;31007:122;31080:24;31098:5;31080:24;:::i;:::-;31073:5;31070:35;31060:63;;31119:1;31116;31109:12;31060:63;31007:122;:::o;31135:143::-;31192:5;31223:6;31217:13;31208:22;;31239:33;31266:5;31239:33;:::i;:::-;31135:143;;;;:::o;31284:351::-;31354:6;31403:2;31391:9;31382:7;31378:23;31374:32;31371:119;;;31409:79;;:::i;:::-;31371:119;31529:1;31554:64;31610:7;31601:6;31590:9;31586:22;31554:64;:::i;:::-;31544:74;;31500:128;31284:351;;;;:::o;31641:98::-;31692:6;31726:5;31720:12;31710:22;;31641:98;;;:::o;31745:168::-;31828:11;31862:6;31857:3;31850:19;31902:4;31897:3;31893:14;31878:29;;31745:168;;;;:::o;31919:373::-;32005:3;32033:38;32065:5;32033:38;:::i;:::-;32087:70;32150:6;32145:3;32087:70;:::i;:::-;32080:77;;32166:65;32224:6;32219:3;32212:4;32205:5;32201:16;32166:65;:::i;:::-;32256:29;32278:6;32256:29;:::i;:::-;32251:3;32247:39;32240:46;;32009:283;31919:373;;;;:::o;32298:751::-;32521:4;32559:3;32548:9;32544:19;32536:27;;32573:71;32641:1;32630:9;32626:17;32617:6;32573:71;:::i;:::-;32654:72;32722:2;32711:9;32707:18;32698:6;32654:72;:::i;:::-;32736;32804:2;32793:9;32789:18;32780:6;32736:72;:::i;:::-;32818;32886:2;32875:9;32871:18;32862:6;32818:72;:::i;:::-;32938:9;32932:4;32928:20;32922:3;32911:9;32907:19;32900:49;32966:76;33037:4;33028:6;32966:76;:::i;:::-;32958:84;;32298:751;;;;;;;;:::o;33055:141::-;33111:5;33142:6;33136:13;33127:22;;33158:32;33184:5;33158:32;:::i;:::-;33055:141;;;;:::o;33202:349::-;33271:6;33320:2;33308:9;33299:7;33295:23;33291:32;33288:119;;;33326:79;;:::i;:::-;33288:119;33446:1;33471:63;33526:7;33517:6;33506:9;33502:22;33471:63;:::i;:::-;33461:73;;33417:127;33202:349;;;;:::o;33557:1053::-;33880:4;33918:3;33907:9;33903:19;33895:27;;33932:71;34000:1;33989:9;33985:17;33976:6;33932:71;:::i;:::-;34013:72;34081:2;34070:9;34066:18;34057:6;34013:72;:::i;:::-;34132:9;34126:4;34122:20;34117:2;34106:9;34102:18;34095:48;34160:108;34263:4;34254:6;34160:108;:::i;:::-;34152:116;;34315:9;34309:4;34305:20;34300:2;34289:9;34285:18;34278:48;34343:108;34446:4;34437:6;34343:108;:::i;:::-;34335:116;;34499:9;34493:4;34489:20;34483:3;34472:9;34468:19;34461:49;34527:76;34598:4;34589:6;34527:76;:::i;:::-;34519:84;;33557:1053;;;;;;;;:::o;34616:147::-;34717:11;34754:3;34739:18;;34616:147;;;;:::o;34769:386::-;34873:3;34901:38;34933:5;34901:38;:::i;:::-;34955:88;35036:6;35031:3;34955:88;:::i;:::-;34948:95;;35052:65;35110:6;35105:3;35098:4;35091:5;35087:16;35052:65;:::i;:::-;35142:6;35137:3;35133:16;35126:23;;34877:278;34769:386;;;;:::o;35161:271::-;35291:3;35313:93;35402:3;35393:6;35313:93;:::i;:::-;35306:100;;35423:3;35416:10;;35161:271;;;;:::o;35438:180::-;35486:77;35483:1;35476:88;35583:4;35580:1;35573:15;35607:4;35604:1;35597:15;35624:191;35664:3;35683:20;35701:1;35683:20;:::i;:::-;35678:25;;35717:20;35735:1;35717:20;:::i;:::-;35712:25;;35760:1;35757;35753:9;35746:16;;35781:3;35778:1;35775:10;35772:36;;;35788:18;;:::i;:::-;35772:36;35624:191;;;;:::o;35821:553::-;35998:4;36036:3;36025:9;36021:19;36013:27;;36050:71;36118:1;36107:9;36103:17;36094:6;36050:71;:::i;:::-;36131:72;36199:2;36188:9;36184:18;36175:6;36131:72;:::i;:::-;36213;36281:2;36270:9;36266:18;36257:6;36213:72;:::i;:::-;36295;36363:2;36352:9;36348:18;36339:6;36295:72;:::i;:::-;35821:553;;;;;;;:::o;36380:634::-;36601:4;36639:2;36628:9;36624:18;36616:26;;36688:9;36682:4;36678:20;36674:1;36663:9;36659:17;36652:47;36716:108;36819:4;36810:6;36716:108;:::i;:::-;36708:116;;36871:9;36865:4;36861:20;36856:2;36845:9;36841:18;36834:48;36899:108;37002:4;36993:6;36899:108;:::i;:::-;36891:116;;36380:634;;;;;:::o"},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","exists(uint256)":"4f558e79","firstMinter(uint256)":"2faa69a8","initialize(address)":"c4d66de8","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256,bytes)":"731133e9","mintBatch(address,uint256[],uint256[],bytes)":"1f7fdffa","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setURI(string)":"02fe5305","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","totalSupply(uint256)":"bd85b039","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","upgradeToAndCall(address,bytes)":"4f1ef286","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"firstMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"_baseURI\":{\"details\":\"Base URI for metadata\"},\"firstMinter\":{\"details\":\"Mapping from token ID to its first minter\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EmojiChatV2.sol\":\"EmojiChatV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x3a0d63838dff3fd8b77c8c44ecf37cc39b15f26fd5269da3b690879478fa3cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://502cec8d2ef132cce69840b1c2aef2209092554292a50d628b27477ef7a441ca\",\"dweb:/ipfs/QmaSxcHDndhVuWm4E6LcSMRkhFYsMXxrgLWMLCQnyG3qHr\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol\":{\"keccak256\":\"0xdb9e44a214d97544cf0d65db9794a7d2bf67285cbfd14ed296665f7b13182ccb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2879c15dd81f2fb7d630f1bb8e6e0e86f84b337c871d49f7636ef343392fa362\",\"dweb:/ipfs/QmYzxzLibEbmbdMqXsxdjwXn6gdGrKdLFJZLkCoDQTNjwt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":{\"keccak256\":\"0x82e5758c4890ae988fd2af513770764a7d651bfddd5e319a3d194813ca767fef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7797972b203536fa26a8eb36c7b7d1db715c28cace21a56f6a5c51693de2467\",\"dweb:/ipfs/QmUk7M3ETDji2dh4f5ERG9zfh6y3DzaAet2c5affPQC7Rc\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/EmojiChatV2.sol\":{\"keccak256\":\"0x418fa236f84ea1edacffc8d19b4c162c79ce0f5f0c1e764589fd39a45d62e27d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c9d08c8fc4217928639bb5e02aa44b22488c2b249098dcbaf572cbc17687855\",\"dweb:/ipfs/QmZKoaxF9HVWWuJwDSKyWRtAa3gTZL4R47Svxma2baRjNn\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":9466,"contract":"contracts/EmojiChatV2.sol:EmojiChatV2","label":"firstMinter","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_address)"},{"astId":9469,"contract":"contracts/EmojiChatV2.sol:EmojiChatV2","label":"_baseURI","offset":0,"slot":"1","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}